Nonterminals useless in grammar

   Result
   CompositeLit
   LiteralType
   LiteralValue
   KeyedElement
   ElementList
   Key
   Element
   FunctionLit
   Conversion
   binary_op
   rel_op
   add_op
   mul_op


Terminals unused in grammar

   BIT_ASSIGN
   ':'


Rules useless in grammar

  300 Result: Parameters
  301       | Type

  302 CompositeLit: LiteralType LiteralValue

  303 LiteralType: StructType
  304            | ArrayType
  305            | '[' ARGS ']' Type
  306            | SliceType
  307            | MapType
  308            | TypeName
  309            | TypeName TypeArgs

  310 LiteralValue: '{' ElementList ',' '}'
  311             | '{' ElementList '}'
  312             | '{' '}'

  313 KeyedElement: Key ':' Element
  314             | Element

  315 ElementList: ElementList ',' KeyedElement
  316            | KeyedElement

  317 Key: IDENTIFIER
  318    | Expression
  319    | LiteralValue

  320 Element: Expression
  321        | LiteralValue

  322 FunctionLit: FUNC Signature Block

  323 Conversion: Type '(' Expression ')'

  324 binary_op: AND
  325          | OR
  326          | rel_op
  327          | add_op
  328          | mul_op

  329 rel_op: COMPARE

  330 add_op: '+'
  331       | '-'
  332       | '|'
  333       | '^'

  334 mul_op: '*'
  335       | '/'
  336       | '%'
  337       | LRSHIFT
  338       | '&'


Rules useless in parser due to conflicts

  252 IdetifierGodefBrakets: /* empty */

  277 InitStmtBracket: /* empty */


State 54 conflicts: 22 shift/reduce
State 72 conflicts: 1 shift/reduce, 23 reduce/reduce
State 81 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 120 conflicts: 22 shift/reduce
State 126 conflicts: 22 shift/reduce
State 156 conflicts: 22 shift/reduce
State 161 conflicts: 1 shift/reduce
State 177 conflicts: 6 reduce/reduce
State 191 conflicts: 7 shift/reduce
State 195 conflicts: 1 reduce/reduce
State 200 conflicts: 1 reduce/reduce
State 233 conflicts: 22 shift/reduce
State 235 conflicts: 1 reduce/reduce
State 245 conflicts: 22 shift/reduce
State 248 conflicts: 22 shift/reduce
State 271 conflicts: 1 shift/reduce, 1 reduce/reduce
State 289 conflicts: 1 shift/reduce, 1 reduce/reduce
State 292 conflicts: 7 shift/reduce
State 323 conflicts: 22 shift/reduce, 31 reduce/reduce
State 338 conflicts: 12 shift/reduce
State 339 conflicts: 12 shift/reduce
State 340 conflicts: 12 shift/reduce
State 341 conflicts: 12 shift/reduce
State 342 conflicts: 22 shift/reduce
State 343 conflicts: 12 shift/reduce
State 344 conflicts: 12 shift/reduce
State 345 conflicts: 12 shift/reduce
State 346 conflicts: 12 shift/reduce
State 347 conflicts: 12 shift/reduce
State 348 conflicts: 12 shift/reduce
State 349 conflicts: 12 shift/reduce
State 350 conflicts: 12 shift/reduce
State 351 conflicts: 2 shift/reduce, 7 reduce/reduce
State 355 conflicts: 4 shift/reduce
State 392 conflicts: 22 shift/reduce
State 397 conflicts: 1 shift/reduce


Grammar

    0 $accept: SourceFile $end

    1 Type: TypeName
    2     | TypeName TypeArgs
    3     | '(' Type ')'
    4     | TypeLit

    5 TypeName: IDENTIFIER
    6         | QualifiedIdent

    7 TypeList: TypeList ',' Type
    8         | Type

    9 TypeArgs: '[' TypeList ']'

   10 TypeLit: ArrayType
   11        | StructType
   12        | PointerType
   13        | FunctionType
   14        | InterfaceType
   15        | SliceType
   16        | MapType
   17        | ChannelType
   18        | ANY
   19        | FLOAT
   20        | BOOL
   21        | BYTE
   22        | COMPARABLE
   23        | COMPLEX
   24        | ERROR
   25        | INT
   26        | RUNE
   27        | STRING

   28 QualifiedIdent: IDENTIFIER '.' IDENTIFIER

   29 ArrayType: '[' Expression ']' Type

   30 SliceType: '[' ']' Type

   31 StructType: STRUCT '{' StructTypeLoop '}'

   32 StructTypeLoop: FieldDecl SEMICOLON ';' StructTypeLoop
   33               | FieldDecl SEMICOLON

   34 FieldDecl: IdentifierList Type
   35          | IdentifierList Type StringValue
   36          | EmbeddedField
   37          | EmbeddedField StringValue

   38 EmbeddedField: TypeName
   39              | '*' TypeName
   40              | TypeName TypeArgs
   41              | '*' TypeName TypeArgs

   42 PointerType: '*' Type

   43 FunctionType: FUNC Signature

   44 Signature: Parameters
   45          | Parameters Type

   46 Parameters: '(' ')'
   47           | '(' ParameterList ')'
   48           | '(' ParameterList ',' ')'

   49 ParameterList: ParameterDecl
   50              | ParameterDecl ',' ParameterDecl

   51 ParameterDecl: Type
   52              | IdentifierList Type
   53              | ARGS Type
   54              | IdentifierList ARGS Type

   55 InterfaceType: INTERFACE '{' InterfaceType '}'
   56              | IDENTIFIER '(' ')' SEMICOLON
   57              | IDENTIFIER '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER '(' ')' Type SEMICOLON
   69              | IDENTIFIER '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER '(' ParameterList ',' ')' Type SEMICOLON
   71              | TypeElem SEMICOLON

   72 TypeElem: Type TypeElem
   73         | '~' Type TypeElem
   74         | '|' Type
   75         | '|' '~' Type

   76 MapType: MAP '[' Type ']' Type

   77 ChannelType: CHAN Type
   78            | CHAN CHANNELOP Type
   79            | CHANNELOP CHAN Type

   80 Declaration: ConstDecl
   81            | TypeDecl
   82            | VarDecl

   83 TopLevelDecl: Declaration
   84             | FunctionDecl
   85             | MethodDecl

   86 VarDecl: VAR VarSpec
   87        | VAR '(' VarSpecList ')'

   88 VarSpec: IdentifierList Type '=' ExpressionList
   89        | IdentifierList Type
   90        | IdentifierList '=' ExpressionList

   91 VarSpecList: VarSpec SEMICOLON VarSpecList
   92            | VarSpec

   93 ConstDecl: CONST ConstSpec
   94          | CONST '(' ConstSpecLoop ')'

   95 ConstSpec: IdentifierList Type '=' ExpressionList
   96          | IdentifierList '=' ExpressionList
   97          | IdentifierList

   98 ConstSpecLoop: ConstSpec SEMICOLON ConstSpecLoop
   99              | /* empty */

  100 IdentifierList: IdentifierList ',' IDENTIFIER
  101               | IDENTIFIER

  102 ExpressionList: ExpressionList ',' Expression
  103               | Expression

  104 TypeDecl: TYPE TypeSpec
  105         | TYPE '(' TypeSpecLoop ')'

  106 TypeSpec: AliasDecl
  107         | TypeDef

  108 TypeSpecLoop: TypeSpec SEMICOLON TypeSpecLoop
  109             | /* empty */

  110 AliasDecl: IDENTIFIER '=' Type

  111 TypeDef: IDENTIFIER Type
  112        | IDENTIFIER TypeParameters Type

  113 TypeParameters: '[' TypeParamList ']'
  114               | '[' TypeParamList ',' ']'

  115 TypeParamList: TypeParamList ',' TypeParamDecl
  116              | TypeParamDecl

  117 TypeParamDecl: IdentifierList TypeElem

  118 ShortVarDecl: IdentifierList GODEF ExpressionList

  119 FunctionDecl: FUNC IDENTIFIER TypeParameters Signature Block
  120             | FUNC IDENTIFIER Signature Block
  121             | FUNC IDENTIFIER TypeParameters Signature
  122             | FUNC IDENTIFIER Signature

  123 MethodDecl: FUNC Parameters IDENTIFIER Signature Block
  124           | FUNC Parameters IDENTIFIER Signature

  125 Expression: UnaryExpr
  126           | Expression AND Expression
  127           | Expression OR Expression
  128           | Expression COMPARE Expression
  129           | Expression '+' Expression
  130           | Expression '-' Expression
  131           | Expression '|' Expression
  132           | Expression '^' Expression
  133           | Expression '*' Expression
  134           | Expression '/' Expression
  135           | Expression '%' Expression
  136           | Expression LRSHIFT Expression
  137           | Expression '&' Expression

  138 UnaryExpr: PrimaryExpr
  139          | unary_op UnaryExpr

  140 PrimaryExpr: Operand
  141            | PrimaryExpr Selector
  142            | PrimaryExpr Index
  143            | PrimaryExpr Slice
  144            | PrimaryExpr TypeAssertion
  145            | PrimaryExpr Arguments

  146 Selector: '.' IDENTIFIER

  147 Index: '[' Expression ']'

  148 Slice: '[' Expression COLON Expression ']'
  149      | '[' Expression COLON ']'
  150      | '[' COLON Expression ']'
  151      | '[' COLON ']'
  152      | '[' Expression COLON Expression COLON Expression ']'
  153      | '[' COLON Expression COLON Expression ']'

  154 TypeAssertion: '.' '(' Type ')'

  155 Arguments: '(' ArgumentsLoop ')'
  156          | '(' ')'

  157 ArgumentsLoop: ExpressionList ARGS ','
  158              | ExpressionList ARGS
  159              | ExpressionList ','
  160              | ExpressionList
  161              | Type ARGS ','
  162              | Type ARGS
  163              | Type ','
  164              | Type
  165              | Type ',' ExpressionList ARGS ','
  166              | Type ',' ExpressionList ARGS
  167              | Type ',' ExpressionList ','
  168              | Type ',' ExpressionList

  169 Operand: Literal
  170        | OperandName
  171        | '(' Expression ')'

  172 OperandName: IDENTIFIER

  173 Literal: BasicLit

  174 BasicLit: IntegerValue
  175         | BooleanValue
  176         | FloatValue
  177         | ImaginaryValue
  178         | StringValue

  179 unary_op: '+'
  180         | '-'
  181         | '!'
  182         | '^'
  183         | '*'
  184         | '&'
  185         | CHANNELOP

  186 Statement: Declaration
  187          | LabeledStmt
  188          | SimpleStmt
  189          | GoStmt
  190          | ReturnStmt
  191          | BreakStmt
  192          | ContinueStmt
  193          | GotoStmt
  194          | FallthroughStmt
  195          | Block
  196          | IfStmt
  197          | SwitchStmt
  198          | SelectStmt
  199          | ForStmt
  200          | DeferStmt

  201 LabeledStmt: IDENTIFIER COLON Statement

  202 SimpleStmt: /* empty */
  203           | ExpressionStmt
  204           | SendStmt
  205           | IncDecStmt
  206           | Assignment
  207           | ShortVarDecl

  208 ExpressionStmt: Expression

  209 SendStmt: Channel CHANNELOP Expression

  210 Channel: Expression

  211 IncDecStmt: Expression INCRE_DECRE

  212 Assignment: ExpressionList assign_op ExpressionList

  213 assign_op: ARITH_ASSIGN
  214          | '='

  215 GoStmt: GO Expression

  216 ReturnStmt: RETURN ExpressionList
  217           | RETURN

  218 BreakStmt: BREAK IDENTIFIER
  219          | BREAK

  220 ContinueStmt: CONTINUE IDENTIFIER
  221             | CONTINUE

  222 GotoStmt: GOTO IDENTIFIER

  223 FallthroughStmt: FALLTHROUGH

  224 Block: '{' StatementList '}'
  225      | '{' '}'

  226 StatementList: Statement SEMICOLON StatementList
  227              | Statement SEMICOLON

  228 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt
  229       | IF SimpleStmt SEMICOLON Expression Block ELSE Block
  230       | IF SimpleStmt SEMICOLON Expression Block
  231       | IF Expression Block ELSE IfStmt
  232       | IF Expression Block ELSE Block
  233       | IF Expression Block

  234 SwitchStmt: ExprSwitchStmt
  235           | TypeSwitchStmt

  236 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets '{' ExprCaseClauseLoop '}'
  237               | SWITCH SimpleStmtBrakets ExpressionBrakets '{' '}'
  238               | SWITCH ExpressionBrakets '{' ExprCaseClauseLoop '}'
  239               | SWITCH ExpressionBrakets '{' '}'

  240 SimpleStmtBrakets: SimpleStmt SEMICOLON

  241 ExpressionBrakets: Expression
  242                  | /* empty */

  243 ExprCaseClause: ExprSwitchCase COLON StatementList

  244 ExprCaseClauseLoop: ExprCaseClause ExprCaseClauseLoop
  245                   | ExprCaseClause

  246 ExprSwitchCase: CASE ExpressionList
  247               | DEFAULT

  248 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard '{' TypeCaseClauseLoop '}'
  249               | SWITCH TypeSwitchGuard '{' TypeCaseClauseLoop '}'

  250 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' '(' TYPE ')'

  251 IdetifierGodefBrakets: IDENTIFIER GODEF
  252                      | /* empty */

  253 TypeCaseClause: TypeSwitchCase COLON StatementList

  254 TypeCaseClauseLoop: TypeCaseClause TypeCaseClauseLoop
  255                   | /* empty */

  256 TypeSwitchCase: CASE TypeList
  257               | DEFAULT

  258 SelectStmt: SELECT '{' CommClauseLoop '}'

  259 CommClause: CommCase COLON StatementList

  260 CommClauseLoop: CommClause CommClauseLoop
  261               | /* empty */

  262 CommCase: /* empty */
  263         | CASE RecvStmt
  264         | DEFAULT

  265 RecvStmt: ExpressionList '=' RecvExpr
  266         | IdentifierList GODEF RecvExpr
  267         | RecvExpr

  268 RecvExpr: Expression

  269 ForStmt: FOR ForClauseBracket Block

  270 ForClauseBracket: Condition
  271                 | ForClause
  272                 | RangeClause
  273                 | /* empty */

  274 Condition: Expression

  275 ForClause: InitStmtBracket SEMICOLON ConditionBracket SEMICOLON PostStmtBracket

  276 InitStmtBracket: SimpleStmt
  277                | /* empty */

  278 ConditionBracket: Condition
  279                 | /* empty */

  280 PostStmt: SimpleStmt

  281 PostStmtBracket: PostStmt

  282 RangeClause: ExpressionList '=' RANGE Expression
  283            | IdentifierList GODEF RANGE Expression
  284            | RANGE Expression

  285 DeferStmt: DEFER Expression

  286 SourceFile: PackageClause SEMICOLON ImportLoop TopLevelLoop

  287 ImportLoop: ImportDecl SEMICOLON ImportLoop
  288           | /* empty */

  289 TopLevelLoop: TopLevelDecl SEMICOLON TopLevelLoop
  290             | /* empty */

  291 PackageClause: PACKAGE IDENTIFIER

  292 ImportDecl: IMPORT ImportSpec
  293           | IMPORT '(' ImportSpecLoop ')'

  294 ImportSpec: '.' ImportPath
  295           | IDENTIFIER ImportPath
  296           | ImportPath

  297 ImportSpecLoop: ImportSpec SEMICOLON ImportSpecLoop
  298               | /* empty */

  299 ImportPath: StringValue


Terminals, with rules where they appear

$end (0) 0
'!' (33) 181
'%' (37) 135
'&' (38) 137 184
'(' (40) 3 46 47 48 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 87
    94 105 154 155 156 171 250 293
')' (41) 3 46 47 48 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 87
    94 105 154 155 156 171 250 293
'*' (42) 39 41 42 133 183
'+' (43) 129 179
',' (44) 7 48 50 58 61 64 65 66 67 70 100 102 114 115 157 159 161 163
    165 166 167 168
'-' (45) 130 180
'.' (46) 28 146 154 250 294
'/' (47) 134
':' (58)
';' (59) 32
'=' (61) 88 90 95 96 110 214 265 282
'[' (91) 9 29 30 76 113 114 147 148 149 150 151 152 153
']' (93) 9 29 30 76 113 114 147 148 149 150 151 152 153
'^' (94) 132 182
'{' (123) 31 55 224 225 236 237 238 239 248 249 258
'|' (124) 74 75 131
'}' (125) 31 55 224 225 236 237 238 239 248 249 258
'~' (126) 73 75
error (256)
BREAK (258) 218 219
DEFAULT (259) 247 257 264
SELECT (260) 258
SWITCH (261) 236 237 238 239 248 249
CASE (262) 246 256 263
FALLTHROUGH (263) 223
IF (264) 228 229 230 231 232 233
ELSE (265) 228 229 231 232
GOTO (266) 222
RANGE (267) 282 283 284
FOR (268) 269
CONTINUE (269) 220 221
FUNC (270) 43 119 120 121 122 123 124
INTERFACE (271) 55
DEFER (272) 285
RETURN (273) 216 217
ARGS (274) 53 54 157 158 161 162 165 166
GO (275) 215
CHAN (276) 77 78 79
MAP (277) 76
STRUCT (278) 31
CONST (279) 93 94
TYPE (280) 104 105 250
VAR (281) 86 87
ANY (282) 18
BOOL (283) 20
BYTE (284) 21
COMPARABLE (285) 22
INT (286) 25
COMPLEX (287) 23
ERROR (288) 24
FLOAT (289) 19
STRING (290) 27
RUNE (291) 26
PACKAGE (292) 291
IMPORT (293) 292 293
IDENTIFIER (294) 5 28 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    100 101 110 111 112 119 120 121 122 123 124 146 172 201 218 220
    222 251 291 295
IntegerValue (295) 174
FloatValue (296) 176
StringValue (297) 35 37 178 299
ImaginaryValue (298) 177
BooleanValue (299) 175
COLON (300) 148 149 150 151 152 153 201 243 253 259
SEMICOLON (301) 32 33 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 91 98 108 226 227 228 229 230 240 275 286 287 289 297
GODEF (302) 118 251 266 283
INCRE_DECRE (303) 211
LRSHIFT (304) 136
ARITH_ASSIGN (305) 213
BIT_ASSIGN (306)
AND (307) 126
OR (308) 127
COMPARE (309) 128
CHANNELOP (310) 78 79 185 209


Nonterminals, with rules where they appear

$accept (77)
    on left: 0
Type (78)
    on left: 1 2 3 4, on right: 3 7 8 29 30 34 35 42 45 51 52 53 54
    68 69 70 72 73 74 75 76 77 78 79 88 89 95 110 111 112 154 161 162
    163 164 165 166 167 168
TypeName (79)
    on left: 5 6, on right: 1 2 38 39 40 41
TypeList (80)
    on left: 7 8, on right: 7 9 256
TypeArgs (81)
    on left: 9, on right: 2 40 41
TypeLit (82)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27,
    on right: 4
QualifiedIdent (83)
    on left: 28, on right: 6
ArrayType (84)
    on left: 29, on right: 10
SliceType (85)
    on left: 30, on right: 15
StructType (86)
    on left: 31, on right: 11
StructTypeLoop (87)
    on left: 32 33, on right: 31 32
FieldDecl (88)
    on left: 34 35 36 37, on right: 32 33
EmbeddedField (89)
    on left: 38 39 40 41, on right: 36 37
PointerType (90)
    on left: 42, on right: 12
FunctionType (91)
    on left: 43, on right: 13
Signature (92)
    on left: 44 45, on right: 43 119 120 121 122 123 124
Parameters (93)
    on left: 46 47 48, on right: 44 45 123 124
ParameterList (94)
    on left: 49 50, on right: 47 48 57 58 60 61 62 63 64 65 66 67 69
    70
ParameterDecl (95)
    on left: 51 52 53 54, on right: 49 50
InterfaceType (96)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71, on right:
    14 55
TypeElem (97)
    on left: 72 73 74 75, on right: 71 72 73 117
MapType (98)
    on left: 76, on right: 16
ChannelType (99)
    on left: 77 78 79, on right: 17
Declaration (100)
    on left: 80 81 82, on right: 83 186
TopLevelDecl (101)
    on left: 83 84 85, on right: 289
VarDecl (102)
    on left: 86 87, on right: 82
VarSpec (103)
    on left: 88 89 90, on right: 86 91 92
VarSpecList (104)
    on left: 91 92, on right: 87 91
ConstDecl (105)
    on left: 93 94, on right: 80
ConstSpec (106)
    on left: 95 96 97, on right: 93 98
ConstSpecLoop (107)
    on left: 98 99, on right: 94 98
IdentifierList (108)
    on left: 100 101, on right: 34 35 52 54 88 89 90 95 96 97 100 117
    118 266 283
ExpressionList (109)
    on left: 102 103, on right: 88 90 95 96 102 118 157 158 159 160
    165 166 167 168 212 216 246 265 282
TypeDecl (110)
    on left: 104 105, on right: 81
TypeSpec (111)
    on left: 106 107, on right: 104 108
TypeSpecLoop (112)
    on left: 108 109, on right: 105 108
AliasDecl (113)
    on left: 110, on right: 106
TypeDef (114)
    on left: 111 112, on right: 107
TypeParameters (115)
    on left: 113 114, on right: 112 119 121
TypeParamList (116)
    on left: 115 116, on right: 113 114 115
TypeParamDecl (117)
    on left: 117, on right: 115 116
ShortVarDecl (118)
    on left: 118, on right: 207
FunctionDecl (119)
    on left: 119 120 121 122, on right: 84
MethodDecl (120)
    on left: 123 124, on right: 85
Expression (121)
    on left: 125 126 127 128 129 130 131 132 133 134 135 136 137, on right:
    29 102 103 126 127 128 129 130 131 132 133 134 135 136 137 147
    148 149 150 152 153 171 208 209 210 211 215 228 229 230 231 232
    233 241 268 274 282 283 284 285
UnaryExpr (122)
    on left: 138 139, on right: 125 139
PrimaryExpr (123)
    on left: 140 141 142 143 144 145, on right: 138 141 142 143 144
    145 250
Selector (124)
    on left: 146, on right: 141
Index (125)
    on left: 147, on right: 142
Slice (126)
    on left: 148 149 150 151 152 153, on right: 143
TypeAssertion (127)
    on left: 154, on right: 144
Arguments (128)
    on left: 155 156, on right: 145
ArgumentsLoop (129)
    on left: 157 158 159 160 161 162 163 164 165 166 167 168, on right:
    155
Operand (130)
    on left: 169 170 171, on right: 140
OperandName (131)
    on left: 172, on right: 170
Literal (132)
    on left: 173, on right: 169
BasicLit (133)
    on left: 174 175 176 177 178, on right: 173
unary_op (134)
    on left: 179 180 181 182 183 184 185, on right: 139
Statement (135)
    on left: 186 187 188 189 190 191 192 193 194 195 196 197 198 199
    200, on right: 201 226 227
LabeledStmt (136)
    on left: 201, on right: 187
SimpleStmt (137)
    on left: 202 203 204 205 206 207, on right: 188 228 229 230 240
    276 280
ExpressionStmt (138)
    on left: 208, on right: 203
SendStmt (139)
    on left: 209, on right: 204
Channel (140)
    on left: 210, on right: 209
IncDecStmt (141)
    on left: 211, on right: 205
Assignment (142)
    on left: 212, on right: 206
assign_op (143)
    on left: 213 214, on right: 212
GoStmt (144)
    on left: 215, on right: 189
ReturnStmt (145)
    on left: 216 217, on right: 190
BreakStmt (146)
    on left: 218 219, on right: 191
ContinueStmt (147)
    on left: 220 221, on right: 192
GotoStmt (148)
    on left: 222, on right: 193
FallthroughStmt (149)
    on left: 223, on right: 194
Block (150)
    on left: 224 225, on right: 119 120 123 195 228 229 230 231 232
    233 269
StatementList (151)
    on left: 226 227, on right: 224 226 243 253 259
IfStmt (152)
    on left: 228 229 230 231 232 233, on right: 196 228 231
SwitchStmt (153)
    on left: 234 235, on right: 197
ExprSwitchStmt (154)
    on left: 236 237 238 239, on right: 234
SimpleStmtBrakets (155)
    on left: 240, on right: 236 237 248
ExpressionBrakets (156)
    on left: 241 242, on right: 236 237 238 239
ExprCaseClause (157)
    on left: 243, on right: 244 245
ExprCaseClauseLoop (158)
    on left: 244 245, on right: 236 238 244
ExprSwitchCase (159)
    on left: 246 247, on right: 243
TypeSwitchStmt (160)
    on left: 248 249, on right: 235
TypeSwitchGuard (161)
    on left: 250, on right: 248 249
IdetifierGodefBrakets (162)
    on left: 251 252, on right: 250
TypeCaseClause (163)
    on left: 253, on right: 254
TypeCaseClauseLoop (164)
    on left: 254 255, on right: 248 249 254
TypeSwitchCase (165)
    on left: 256 257, on right: 253
SelectStmt (166)
    on left: 258, on right: 198
CommClause (167)
    on left: 259, on right: 260
CommClauseLoop (168)
    on left: 260 261, on right: 258 260
CommCase (169)
    on left: 262 263 264, on right: 259
RecvStmt (170)
    on left: 265 266 267, on right: 263
RecvExpr (171)
    on left: 268, on right: 265 266 267
ForStmt (172)
    on left: 269, on right: 199
ForClauseBracket (173)
    on left: 270 271 272 273, on right: 269
Condition (174)
    on left: 274, on right: 270 278
ForClause (175)
    on left: 275, on right: 271
InitStmtBracket (176)
    on left: 276 277, on right: 275
ConditionBracket (177)
    on left: 278 279, on right: 275
PostStmt (178)
    on left: 280, on right: 281
PostStmtBracket (179)
    on left: 281, on right: 275
RangeClause (180)
    on left: 282 283 284, on right: 272
DeferStmt (181)
    on left: 285, on right: 200
SourceFile (182)
    on left: 286, on right: 0
ImportLoop (183)
    on left: 287 288, on right: 286 287
TopLevelLoop (184)
    on left: 289 290, on right: 286 289
PackageClause (185)
    on left: 291, on right: 286
ImportDecl (186)
    on left: 292 293, on right: 287
ImportSpec (187)
    on left: 294 295 296, on right: 292 297
ImportSpecLoop (188)
    on left: 297 298, on right: 293 297
ImportPath (189)
    on left: 299, on right: 294 295 296


state 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


state 1

  291 PackageClause: PACKAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 5


state 3

  286 SourceFile: PackageClause . SEMICOLON ImportLoop TopLevelLoop

    SEMICOLON  shift, and go to state 6


state 4

  291 PackageClause: PACKAGE IDENTIFIER .

    $default  reduce using rule 291 (PackageClause)


state 5

    0 $accept: SourceFile $end .

    $default  accept


state 6

  286 SourceFile: PackageClause SEMICOLON . ImportLoop TopLevelLoop

    IMPORT  shift, and go to state 7

    $default  reduce using rule 288 (ImportLoop)

    ImportLoop  go to state 8
    ImportDecl  go to state 9


state 7

  292 ImportDecl: IMPORT . ImportSpec
  293           | IMPORT . '(' ImportSpecLoop ')'

    IDENTIFIER   shift, and go to state 10
    StringValue  shift, and go to state 11
    '('          shift, and go to state 12
    '.'          shift, and go to state 13

    ImportSpec  go to state 14
    ImportPath  go to state 15


state 8

  286 SourceFile: PackageClause SEMICOLON ImportLoop . TopLevelLoop

    FUNC   shift, and go to state 16
    CONST  shift, and go to state 17
    TYPE   shift, and go to state 18
    VAR    shift, and go to state 19

    $default  reduce using rule 290 (TopLevelLoop)

    Declaration   go to state 20
    TopLevelDecl  go to state 21
    VarDecl       go to state 22
    ConstDecl     go to state 23
    TypeDecl      go to state 24
    FunctionDecl  go to state 25
    MethodDecl    go to state 26
    TopLevelLoop  go to state 27


state 9

  287 ImportLoop: ImportDecl . SEMICOLON ImportLoop

    SEMICOLON  shift, and go to state 28


state 10

  295 ImportSpec: IDENTIFIER . ImportPath

    StringValue  shift, and go to state 11

    ImportPath  go to state 29


state 11

  299 ImportPath: StringValue .

    $default  reduce using rule 299 (ImportPath)


state 12

  293 ImportDecl: IMPORT '(' . ImportSpecLoop ')'

    IDENTIFIER   shift, and go to state 10
    StringValue  shift, and go to state 11
    '.'          shift, and go to state 13

    $default  reduce using rule 298 (ImportSpecLoop)

    ImportSpec      go to state 30
    ImportSpecLoop  go to state 31
    ImportPath      go to state 15


state 13

  294 ImportSpec: '.' . ImportPath

    StringValue  shift, and go to state 11

    ImportPath  go to state 32


state 14

  292 ImportDecl: IMPORT ImportSpec .

    $default  reduce using rule 292 (ImportDecl)


state 15

  296 ImportSpec: ImportPath .

    $default  reduce using rule 296 (ImportSpec)


state 16

  119 FunctionDecl: FUNC . IDENTIFIER TypeParameters Signature Block
  120             | FUNC . IDENTIFIER Signature Block
  121             | FUNC . IDENTIFIER TypeParameters Signature
  122             | FUNC . IDENTIFIER Signature
  123 MethodDecl: FUNC . Parameters IDENTIFIER Signature Block
  124           | FUNC . Parameters IDENTIFIER Signature

    IDENTIFIER  shift, and go to state 33
    '('         shift, and go to state 34

    Parameters  go to state 35


state 17

   93 ConstDecl: CONST . ConstSpec
   94          | CONST . '(' ConstSpecLoop ')'

    IDENTIFIER  shift, and go to state 36
    '('         shift, and go to state 37

    ConstSpec       go to state 38
    IdentifierList  go to state 39


state 18

  104 TypeDecl: TYPE . TypeSpec
  105         | TYPE . '(' TypeSpecLoop ')'

    IDENTIFIER  shift, and go to state 40
    '('         shift, and go to state 41

    TypeSpec   go to state 42
    AliasDecl  go to state 43
    TypeDef    go to state 44


state 19

   86 VarDecl: VAR . VarSpec
   87        | VAR . '(' VarSpecList ')'

    IDENTIFIER  shift, and go to state 36
    '('         shift, and go to state 45

    VarSpec         go to state 46
    IdentifierList  go to state 47


state 20

   83 TopLevelDecl: Declaration .

    $default  reduce using rule 83 (TopLevelDecl)


state 21

  289 TopLevelLoop: TopLevelDecl . SEMICOLON TopLevelLoop

    SEMICOLON  shift, and go to state 48


state 22

   82 Declaration: VarDecl .

    $default  reduce using rule 82 (Declaration)


state 23

   80 Declaration: ConstDecl .

    $default  reduce using rule 80 (Declaration)


state 24

   81 Declaration: TypeDecl .

    $default  reduce using rule 81 (Declaration)


state 25

   84 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 84 (TopLevelDecl)


state 26

   85 TopLevelDecl: MethodDecl .

    $default  reduce using rule 85 (TopLevelDecl)


state 27

  286 SourceFile: PackageClause SEMICOLON ImportLoop TopLevelLoop .

    $default  reduce using rule 286 (SourceFile)


state 28

  287 ImportLoop: ImportDecl SEMICOLON . ImportLoop

    IMPORT  shift, and go to state 7

    $default  reduce using rule 288 (ImportLoop)

    ImportLoop  go to state 49
    ImportDecl  go to state 9


state 29

  295 ImportSpec: IDENTIFIER ImportPath .

    $default  reduce using rule 295 (ImportSpec)


state 30

  297 ImportSpecLoop: ImportSpec . SEMICOLON ImportSpecLoop

    SEMICOLON  shift, and go to state 50


state 31

  293 ImportDecl: IMPORT '(' ImportSpecLoop . ')'

    ')'  shift, and go to state 51


state 32

  294 ImportSpec: '.' ImportPath .

    $default  reduce using rule 294 (ImportSpec)


state 33

  119 FunctionDecl: FUNC IDENTIFIER . TypeParameters Signature Block
  120             | FUNC IDENTIFIER . Signature Block
  121             | FUNC IDENTIFIER . TypeParameters Signature
  122             | FUNC IDENTIFIER . Signature

    '('  shift, and go to state 34
    '['  shift, and go to state 52

    Signature       go to state 53
    Parameters      go to state 54
    TypeParameters  go to state 55


state 34

   46 Parameters: '(' . ')'
   47           | '(' . ParameterList ')'
   48           | '(' . ParameterList ',' ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 75
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 80
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterList   go to state 89
    ParameterDecl   go to state 90
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 35

  123 MethodDecl: FUNC Parameters . IDENTIFIER Signature Block
  124           | FUNC Parameters . IDENTIFIER Signature

    IDENTIFIER  shift, and go to state 96


state 36

  101 IdentifierList: IDENTIFIER .

    $default  reduce using rule 101 (IdentifierList)


state 37

   94 ConstDecl: CONST '(' . ConstSpecLoop ')'

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 99 (ConstSpecLoop)

    ConstSpec       go to state 97
    ConstSpecLoop   go to state 98
    IdentifierList  go to state 39


state 38

   93 ConstDecl: CONST ConstSpec .

    $default  reduce using rule 93 (ConstDecl)


state 39

   95 ConstSpec: IdentifierList . Type '=' ExpressionList
   96          | IdentifierList . '=' ExpressionList
   97          | IdentifierList .
  100 IdentifierList: IdentifierList . ',' IDENTIFIER

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 100
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79
    '='         shift, and go to state 101

    $default  reduce using rule 97 (ConstSpec)

    Type            go to state 102
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 40

  110 AliasDecl: IDENTIFIER . '=' Type
  111 TypeDef: IDENTIFIER . Type
  112        | IDENTIFIER . TypeParameters Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 103
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79
    '='         shift, and go to state 104

    Type            go to state 105
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    TypeParameters  go to state 106


state 41

  105 TypeDecl: TYPE '(' . TypeSpecLoop ')'

    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 109 (TypeSpecLoop)

    TypeSpec      go to state 107
    TypeSpecLoop  go to state 108
    AliasDecl     go to state 43
    TypeDef       go to state 44


state 42

  104 TypeDecl: TYPE TypeSpec .

    $default  reduce using rule 104 (TypeDecl)


state 43

  106 TypeSpec: AliasDecl .

    $default  reduce using rule 106 (TypeSpec)


state 44

  107 TypeSpec: TypeDef .

    $default  reduce using rule 107 (TypeSpec)


state 45

   87 VarDecl: VAR '(' . VarSpecList ')'

    IDENTIFIER  shift, and go to state 36

    VarSpec         go to state 109
    VarSpecList     go to state 110
    IdentifierList  go to state 47


state 46

   86 VarDecl: VAR VarSpec .

    $default  reduce using rule 86 (VarDecl)


state 47

   88 VarSpec: IdentifierList . Type '=' ExpressionList
   89        | IdentifierList . Type
   90        | IdentifierList . '=' ExpressionList
  100 IdentifierList: IdentifierList . ',' IDENTIFIER

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 100
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79
    '='         shift, and go to state 111

    Type            go to state 112
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 48

  289 TopLevelLoop: TopLevelDecl SEMICOLON . TopLevelLoop

    FUNC   shift, and go to state 16
    CONST  shift, and go to state 17
    TYPE   shift, and go to state 18
    VAR    shift, and go to state 19

    $default  reduce using rule 290 (TopLevelLoop)

    Declaration   go to state 20
    TopLevelDecl  go to state 21
    VarDecl       go to state 22
    ConstDecl     go to state 23
    TypeDecl      go to state 24
    FunctionDecl  go to state 25
    MethodDecl    go to state 26
    TopLevelLoop  go to state 113


state 49

  287 ImportLoop: ImportDecl SEMICOLON ImportLoop .

    $default  reduce using rule 287 (ImportLoop)


state 50

  297 ImportSpecLoop: ImportSpec SEMICOLON . ImportSpecLoop

    IDENTIFIER   shift, and go to state 10
    StringValue  shift, and go to state 11
    '.'          shift, and go to state 13

    $default  reduce using rule 298 (ImportSpecLoop)

    ImportSpec      go to state 30
    ImportSpecLoop  go to state 114
    ImportPath      go to state 15


state 51

  293 ImportDecl: IMPORT '(' ImportSpecLoop ')' .

    $default  reduce using rule 293 (ImportDecl)


state 52

  113 TypeParameters: '[' . TypeParamList ']'
  114               | '[' . TypeParamList ',' ']'

    IDENTIFIER  shift, and go to state 36

    IdentifierList  go to state 115
    TypeParamList   go to state 116
    TypeParamDecl   go to state 117


state 53

  120 FunctionDecl: FUNC IDENTIFIER Signature . Block
  122             | FUNC IDENTIFIER Signature .

    '{'  shift, and go to state 118

    $default  reduce using rule 122 (FunctionDecl)

    Block  go to state 119


state 54

   44 Signature: Parameters .
   45          | Parameters . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 44 (Signature)]
    INTERFACE   [reduce using rule 44 (Signature)]
    CHAN        [reduce using rule 44 (Signature)]
    MAP         [reduce using rule 44 (Signature)]
    STRUCT      [reduce using rule 44 (Signature)]
    ANY         [reduce using rule 44 (Signature)]
    BOOL        [reduce using rule 44 (Signature)]
    BYTE        [reduce using rule 44 (Signature)]
    COMPARABLE  [reduce using rule 44 (Signature)]
    INT         [reduce using rule 44 (Signature)]
    COMPLEX     [reduce using rule 44 (Signature)]
    ERROR       [reduce using rule 44 (Signature)]
    FLOAT       [reduce using rule 44 (Signature)]
    STRING      [reduce using rule 44 (Signature)]
    RUNE        [reduce using rule 44 (Signature)]
    IDENTIFIER  [reduce using rule 44 (Signature)]
    CHANNELOP   [reduce using rule 44 (Signature)]
    '('         [reduce using rule 44 (Signature)]
    '['         [reduce using rule 44 (Signature)]
    '*'         [reduce using rule 44 (Signature)]
    '~'         [reduce using rule 44 (Signature)]
    '|'         [reduce using rule 44 (Signature)]
    $default    reduce using rule 44 (Signature)

    Type            go to state 120
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 55

  119 FunctionDecl: FUNC IDENTIFIER TypeParameters . Signature Block
  121             | FUNC IDENTIFIER TypeParameters . Signature

    '('  shift, and go to state 34

    Signature   go to state 121
    Parameters  go to state 54


state 56

   43 FunctionType: FUNC . Signature

    '('  shift, and go to state 34

    Signature   go to state 122
    Parameters  go to state 54


state 57

   55 InterfaceType: INTERFACE . '{' InterfaceType '}'

    '{'  shift, and go to state 123


state 58

   53 ParameterDecl: ARGS . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 124
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 59

   77 ChannelType: CHAN . Type
   78            | CHAN . CHANNELOP Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 125
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 126
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 60

   76 MapType: MAP . '[' Type ']' Type

    '['  shift, and go to state 127


state 61

   31 StructType: STRUCT . '{' StructTypeLoop '}'

    '{'  shift, and go to state 128


state 62

   18 TypeLit: ANY .

    $default  reduce using rule 18 (TypeLit)


state 63

   20 TypeLit: BOOL .

    $default  reduce using rule 20 (TypeLit)


state 64

   21 TypeLit: BYTE .

    $default  reduce using rule 21 (TypeLit)


state 65

   22 TypeLit: COMPARABLE .

    $default  reduce using rule 22 (TypeLit)


state 66

   25 TypeLit: INT .

    $default  reduce using rule 25 (TypeLit)


state 67

   23 TypeLit: COMPLEX .

    $default  reduce using rule 23 (TypeLit)


state 68

   24 TypeLit: ERROR .

    $default  reduce using rule 24 (TypeLit)


state 69

   19 TypeLit: FLOAT .

    $default  reduce using rule 19 (TypeLit)


state 70

   27 TypeLit: STRING .

    $default  reduce using rule 27 (TypeLit)


state 71

   26 TypeLit: RUNE .

    $default  reduce using rule 26 (TypeLit)


state 72

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   56 InterfaceType: IDENTIFIER . '(' ')' SEMICOLON
   57              | IDENTIFIER . '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER . '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER . '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER . '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER . '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER . '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER . '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER . '(' ')' Type SEMICOLON
   69              | IDENTIFIER . '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER . '(' ParameterList ',' ')' Type SEMICOLON
  101 IdentifierList: IDENTIFIER .

    '('  shift, and go to state 129
    '.'  shift, and go to state 130

    FUNC        reduce using rule 5 (TypeName)
    FUNC        [reduce using rule 101 (IdentifierList)]
    INTERFACE   reduce using rule 5 (TypeName)
    INTERFACE   [reduce using rule 101 (IdentifierList)]
    ARGS        reduce using rule 101 (IdentifierList)
    CHAN        reduce using rule 5 (TypeName)
    CHAN        [reduce using rule 101 (IdentifierList)]
    MAP         reduce using rule 5 (TypeName)
    MAP         [reduce using rule 101 (IdentifierList)]
    STRUCT      reduce using rule 5 (TypeName)
    STRUCT      [reduce using rule 101 (IdentifierList)]
    ANY         reduce using rule 5 (TypeName)
    ANY         [reduce using rule 101 (IdentifierList)]
    BOOL        reduce using rule 5 (TypeName)
    BOOL        [reduce using rule 101 (IdentifierList)]
    BYTE        reduce using rule 5 (TypeName)
    BYTE        [reduce using rule 101 (IdentifierList)]
    COMPARABLE  reduce using rule 5 (TypeName)
    COMPARABLE  [reduce using rule 101 (IdentifierList)]
    INT         reduce using rule 5 (TypeName)
    INT         [reduce using rule 101 (IdentifierList)]
    COMPLEX     reduce using rule 5 (TypeName)
    COMPLEX     [reduce using rule 101 (IdentifierList)]
    ERROR       reduce using rule 5 (TypeName)
    ERROR       [reduce using rule 101 (IdentifierList)]
    FLOAT       reduce using rule 5 (TypeName)
    FLOAT       [reduce using rule 101 (IdentifierList)]
    STRING      reduce using rule 5 (TypeName)
    STRING      [reduce using rule 101 (IdentifierList)]
    RUNE        reduce using rule 5 (TypeName)
    RUNE        [reduce using rule 101 (IdentifierList)]
    IDENTIFIER  reduce using rule 5 (TypeName)
    IDENTIFIER  [reduce using rule 101 (IdentifierList)]
    CHANNELOP   reduce using rule 5 (TypeName)
    CHANNELOP   [reduce using rule 101 (IdentifierList)]
    '('         [reduce using rule 5 (TypeName)]
    '('         [reduce using rule 101 (IdentifierList)]
    ','         reduce using rule 5 (TypeName)
    ','         [reduce using rule 101 (IdentifierList)]
    '['         reduce using rule 5 (TypeName)
    '['         [reduce using rule 101 (IdentifierList)]
    '*'         reduce using rule 5 (TypeName)
    '*'         [reduce using rule 101 (IdentifierList)]
    '~'         reduce using rule 5 (TypeName)
    '~'         [reduce using rule 101 (IdentifierList)]
    '|'         reduce using rule 5 (TypeName)
    '|'         [reduce using rule 101 (IdentifierList)]
    $default    reduce using rule 5 (TypeName)


state 73

   79 ChannelType: CHANNELOP . CHAN Type

    CHAN  shift, and go to state 131


state 74

    3 Type: '(' . Type ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 132
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 75

   46 Parameters: '(' ')' .

    $default  reduce using rule 46 (Parameters)


state 76

   29 ArrayType: '[' . Expression ']' Type
   30 SliceType: '[' . ']' Type

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    ']'             shift, and go to state 141
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 148
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 77

   42 PointerType: '*' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 156
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 78

   73 TypeElem: '~' . Type TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 157
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 79

   74 TypeElem: '|' . Type
   75         | '|' . '~' Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 158
    '|'         shift, and go to state 79

    Type            go to state 159
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 80

   51 ParameterDecl: Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 51 (ParameterDecl)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 81

    1 Type: TypeName .
    2     | TypeName . TypeArgs

    '['  shift, and go to state 162

    '['       [reduce using rule 1 (Type)]
    $default  reduce using rule 1 (Type)

    TypeArgs  go to state 163


state 82

    4 Type: TypeLit .

    $default  reduce using rule 4 (Type)


state 83

    6 TypeName: QualifiedIdent .

    $default  reduce using rule 6 (TypeName)


state 84

   10 TypeLit: ArrayType .

    $default  reduce using rule 10 (TypeLit)


state 85

   15 TypeLit: SliceType .

    $default  reduce using rule 15 (TypeLit)


state 86

   11 TypeLit: StructType .

    $default  reduce using rule 11 (TypeLit)


state 87

   12 TypeLit: PointerType .

    $default  reduce using rule 12 (TypeLit)


state 88

   13 TypeLit: FunctionType .

    $default  reduce using rule 13 (TypeLit)


state 89

   47 Parameters: '(' ParameterList . ')'
   48           | '(' ParameterList . ',' ')'

    ')'  shift, and go to state 164
    ','  shift, and go to state 165


state 90

   49 ParameterList: ParameterDecl .
   50              | ParameterDecl . ',' ParameterDecl

    ','  shift, and go to state 166

    ','       [reduce using rule 49 (ParameterList)]
    $default  reduce using rule 49 (ParameterList)


state 91

   14 TypeLit: InterfaceType .

    $default  reduce using rule 14 (TypeLit)


state 92

   71 InterfaceType: TypeElem . SEMICOLON

    SEMICOLON  shift, and go to state 167


state 93

   16 TypeLit: MapType .

    $default  reduce using rule 16 (TypeLit)


state 94

   17 TypeLit: ChannelType .

    $default  reduce using rule 17 (TypeLit)


state 95

   52 ParameterDecl: IdentifierList . Type
   54              | IdentifierList . ARGS Type
  100 IdentifierList: IdentifierList . ',' IDENTIFIER

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 168
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 100
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 169
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 96

  123 MethodDecl: FUNC Parameters IDENTIFIER . Signature Block
  124           | FUNC Parameters IDENTIFIER . Signature

    '('  shift, and go to state 34

    Signature   go to state 170
    Parameters  go to state 54


state 97

   98 ConstSpecLoop: ConstSpec . SEMICOLON ConstSpecLoop

    SEMICOLON  shift, and go to state 171


state 98

   94 ConstDecl: CONST '(' ConstSpecLoop . ')'

    ')'  shift, and go to state 172


state 99

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   56 InterfaceType: IDENTIFIER . '(' ')' SEMICOLON
   57              | IDENTIFIER . '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER . '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER . '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER . '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER . '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER . '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER . '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER . '(' ')' Type SEMICOLON
   69              | IDENTIFIER . '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER . '(' ParameterList ',' ')' Type SEMICOLON

    '('  shift, and go to state 129
    '.'  shift, and go to state 130

    '('       [reduce using rule 5 (TypeName)]
    $default  reduce using rule 5 (TypeName)


state 100

  100 IdentifierList: IdentifierList ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 173


state 101

   96 ConstSpec: IdentifierList '=' . ExpressionList

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    ExpressionList  go to state 174
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 102

   72 TypeElem: Type . TypeElem
   95 ConstSpec: IdentifierList Type . '=' ExpressionList

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79
    '='         shift, and go to state 176

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 103

   29 ArrayType: '[' . Expression ']' Type
   30 SliceType: '[' . ']' Type
  113 TypeParameters: '[' . TypeParamList ']'
  114               | '[' . TypeParamList ',' ']'

    IDENTIFIER      shift, and go to state 177
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    ']'             shift, and go to state 141
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    IdentifierList  go to state 115
    TypeParamList   go to state 116
    TypeParamDecl   go to state 117
    Expression      go to state 148
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 104

  110 AliasDecl: IDENTIFIER '=' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 178
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 105

   72 TypeElem: Type . TypeElem
  111 TypeDef: IDENTIFIER Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 111 (TypeDef)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 106

  112 TypeDef: IDENTIFIER TypeParameters . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 179
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 107

  108 TypeSpecLoop: TypeSpec . SEMICOLON TypeSpecLoop

    SEMICOLON  shift, and go to state 180


state 108

  105 TypeDecl: TYPE '(' TypeSpecLoop . ')'

    ')'  shift, and go to state 181


state 109

   91 VarSpecList: VarSpec . SEMICOLON VarSpecList
   92            | VarSpec .

    SEMICOLON  shift, and go to state 182

    $default  reduce using rule 92 (VarSpecList)


state 110

   87 VarDecl: VAR '(' VarSpecList . ')'

    ')'  shift, and go to state 183


state 111

   90 VarSpec: IdentifierList '=' . ExpressionList

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    ExpressionList  go to state 184
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 112

   72 TypeElem: Type . TypeElem
   88 VarSpec: IdentifierList Type . '=' ExpressionList
   89        | IdentifierList Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79
    '='         shift, and go to state 185

    $default  reduce using rule 89 (VarSpec)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 113

  289 TopLevelLoop: TopLevelDecl SEMICOLON TopLevelLoop .

    $default  reduce using rule 289 (TopLevelLoop)


state 114

  297 ImportSpecLoop: ImportSpec SEMICOLON ImportSpecLoop .

    $default  reduce using rule 297 (ImportSpecLoop)


state 115

  100 IdentifierList: IdentifierList . ',' IDENTIFIER
  117 TypeParamDecl: IdentifierList . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 100
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 186
    MapType         go to state 93
    ChannelType     go to state 94


state 116

  113 TypeParameters: '[' TypeParamList . ']'
  114               | '[' TypeParamList . ',' ']'
  115 TypeParamList: TypeParamList . ',' TypeParamDecl

    ','  shift, and go to state 187
    ']'  shift, and go to state 188


state 117

  116 TypeParamList: TypeParamDecl .

    $default  reduce using rule 116 (TypeParamList)


state 118

  224 Block: '{' . StatementList '}'
  225      | '{' . '}'

    BREAK           shift, and go to state 189
    SELECT          shift, and go to state 190
    SWITCH          shift, and go to state 191
    FALLTHROUGH     shift, and go to state 192
    IF              shift, and go to state 193
    GOTO            shift, and go to state 194
    FOR             shift, and go to state 195
    CONTINUE        shift, and go to state 196
    DEFER           shift, and go to state 197
    RETURN          shift, and go to state 198
    GO              shift, and go to state 199
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    IDENTIFIER      shift, and go to state 200
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '{'             shift, and go to state 118
    '}'             shift, and go to state 201
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 202 (SimpleStmt)

    Declaration      go to state 202
    VarDecl          go to state 22
    ConstDecl        go to state 23
    IdentifierList   go to state 203
    ExpressionList   go to state 204
    TypeDecl         go to state 24
    ShortVarDecl     go to state 205
    Expression       go to state 206
    UnaryExpr        go to state 149
    PrimaryExpr      go to state 150
    Operand          go to state 151
    OperandName      go to state 152
    Literal          go to state 153
    BasicLit         go to state 154
    unary_op         go to state 155
    Statement        go to state 207
    LabeledStmt      go to state 208
    SimpleStmt       go to state 209
    ExpressionStmt   go to state 210
    SendStmt         go to state 211
    Channel          go to state 212
    IncDecStmt       go to state 213
    Assignment       go to state 214
    GoStmt           go to state 215
    ReturnStmt       go to state 216
    BreakStmt        go to state 217
    ContinueStmt     go to state 218
    GotoStmt         go to state 219
    FallthroughStmt  go to state 220
    Block            go to state 221
    StatementList    go to state 222
    IfStmt           go to state 223
    SwitchStmt       go to state 224
    ExprSwitchStmt   go to state 225
    TypeSwitchStmt   go to state 226
    SelectStmt       go to state 227
    ForStmt          go to state 228
    DeferStmt        go to state 229


state 119

  120 FunctionDecl: FUNC IDENTIFIER Signature Block .

    $default  reduce using rule 120 (FunctionDecl)


state 120

   45 Signature: Parameters Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 45 (Signature)]
    INTERFACE   [reduce using rule 45 (Signature)]
    CHAN        [reduce using rule 45 (Signature)]
    MAP         [reduce using rule 45 (Signature)]
    STRUCT      [reduce using rule 45 (Signature)]
    ANY         [reduce using rule 45 (Signature)]
    BOOL        [reduce using rule 45 (Signature)]
    BYTE        [reduce using rule 45 (Signature)]
    COMPARABLE  [reduce using rule 45 (Signature)]
    INT         [reduce using rule 45 (Signature)]
    COMPLEX     [reduce using rule 45 (Signature)]
    ERROR       [reduce using rule 45 (Signature)]
    FLOAT       [reduce using rule 45 (Signature)]
    STRING      [reduce using rule 45 (Signature)]
    RUNE        [reduce using rule 45 (Signature)]
    IDENTIFIER  [reduce using rule 45 (Signature)]
    CHANNELOP   [reduce using rule 45 (Signature)]
    '('         [reduce using rule 45 (Signature)]
    '['         [reduce using rule 45 (Signature)]
    '*'         [reduce using rule 45 (Signature)]
    '~'         [reduce using rule 45 (Signature)]
    '|'         [reduce using rule 45 (Signature)]
    $default    reduce using rule 45 (Signature)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 121

  119 FunctionDecl: FUNC IDENTIFIER TypeParameters Signature . Block
  121             | FUNC IDENTIFIER TypeParameters Signature .

    '{'  shift, and go to state 118

    $default  reduce using rule 121 (FunctionDecl)

    Block  go to state 230


state 122

   43 FunctionType: FUNC Signature .

    $default  reduce using rule 43 (FunctionType)


state 123

   55 InterfaceType: INTERFACE '{' . InterfaceType '}'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 231
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 124

   53 ParameterDecl: ARGS Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 53 (ParameterDecl)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 125

   78 ChannelType: CHAN CHANNELOP . Type
   79            | CHANNELOP . CHAN Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 232
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 233
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 126

   72 TypeElem: Type . TypeElem
   77 ChannelType: CHAN Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 77 (ChannelType)]
    INTERFACE   [reduce using rule 77 (ChannelType)]
    CHAN        [reduce using rule 77 (ChannelType)]
    MAP         [reduce using rule 77 (ChannelType)]
    STRUCT      [reduce using rule 77 (ChannelType)]
    ANY         [reduce using rule 77 (ChannelType)]
    BOOL        [reduce using rule 77 (ChannelType)]
    BYTE        [reduce using rule 77 (ChannelType)]
    COMPARABLE  [reduce using rule 77 (ChannelType)]
    INT         [reduce using rule 77 (ChannelType)]
    COMPLEX     [reduce using rule 77 (ChannelType)]
    ERROR       [reduce using rule 77 (ChannelType)]
    FLOAT       [reduce using rule 77 (ChannelType)]
    STRING      [reduce using rule 77 (ChannelType)]
    RUNE        [reduce using rule 77 (ChannelType)]
    IDENTIFIER  [reduce using rule 77 (ChannelType)]
    CHANNELOP   [reduce using rule 77 (ChannelType)]
    '('         [reduce using rule 77 (ChannelType)]
    '['         [reduce using rule 77 (ChannelType)]
    '*'         [reduce using rule 77 (ChannelType)]
    '~'         [reduce using rule 77 (ChannelType)]
    '|'         [reduce using rule 77 (ChannelType)]
    $default    reduce using rule 77 (ChannelType)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 127

   76 MapType: MAP '[' . Type ']' Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 234
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 128

   31 StructType: STRUCT '{' . StructTypeLoop '}'

    IDENTIFIER  shift, and go to state 235
    '*'         shift, and go to state 236

    TypeName        go to state 237
    QualifiedIdent  go to state 83
    StructTypeLoop  go to state 238
    FieldDecl       go to state 239
    EmbeddedField   go to state 240
    IdentifierList  go to state 241


state 129

   56 InterfaceType: IDENTIFIER '(' . ')' SEMICOLON
   57              | IDENTIFIER '(' . ParameterList ')' SEMICOLON
   58              | IDENTIFIER '(' . ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER '(' . ')' '(' ')' SEMICOLON
   60              | IDENTIFIER '(' . ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER '(' . ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER '(' . ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER '(' . ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER '(' . ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER '(' . ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER '(' . ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER '(' . ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER '(' . ')' Type SEMICOLON
   69              | IDENTIFIER '(' . ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER '(' . ParameterList ',' ')' Type SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 242
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 80
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterList   go to state 243
    ParameterDecl   go to state 90
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 130

   28 QualifiedIdent: IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 244


state 131

   79 ChannelType: CHANNELOP CHAN . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 245
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 132

    3 Type: '(' Type . ')'
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 246
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 133

  172 OperandName: IDENTIFIER .

    $default  reduce using rule 172 (OperandName)


state 134

  174 BasicLit: IntegerValue .

    $default  reduce using rule 174 (BasicLit)


state 135

  176 BasicLit: FloatValue .

    $default  reduce using rule 176 (BasicLit)


state 136

  178 BasicLit: StringValue .

    $default  reduce using rule 178 (BasicLit)


state 137

  177 BasicLit: ImaginaryValue .

    $default  reduce using rule 177 (BasicLit)


state 138

  175 BasicLit: BooleanValue .

    $default  reduce using rule 175 (BasicLit)


state 139

  185 unary_op: CHANNELOP .

    $default  reduce using rule 185 (unary_op)


state 140

  171 Operand: '(' . Expression ')'

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 247
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 141

   30 SliceType: '[' ']' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 248
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 142

  183 unary_op: '*' .

    $default  reduce using rule 183 (unary_op)


state 143

  179 unary_op: '+' .

    $default  reduce using rule 179 (unary_op)


state 144

  180 unary_op: '-' .

    $default  reduce using rule 180 (unary_op)


state 145

  182 unary_op: '^' .

    $default  reduce using rule 182 (unary_op)


state 146

  184 unary_op: '&' .

    $default  reduce using rule 184 (unary_op)


state 147

  181 unary_op: '!' .

    $default  reduce using rule 181 (unary_op)


state 148

   29 ArrayType: '[' Expression . ']' Type
  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    ']'      shift, and go to state 253
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261


state 149

  125 Expression: UnaryExpr .

    $default  reduce using rule 125 (Expression)


state 150

  138 UnaryExpr: PrimaryExpr .
  141 PrimaryExpr: PrimaryExpr . Selector
  142            | PrimaryExpr . Index
  143            | PrimaryExpr . Slice
  144            | PrimaryExpr . TypeAssertion
  145            | PrimaryExpr . Arguments

    '('  shift, and go to state 262
    '['  shift, and go to state 263
    '.'  shift, and go to state 264

    $default  reduce using rule 138 (UnaryExpr)

    Selector       go to state 265
    Index          go to state 266
    Slice          go to state 267
    TypeAssertion  go to state 268
    Arguments      go to state 269


state 151

  140 PrimaryExpr: Operand .

    $default  reduce using rule 140 (PrimaryExpr)


state 152

  170 Operand: OperandName .

    $default  reduce using rule 170 (Operand)


state 153

  169 Operand: Literal .

    $default  reduce using rule 169 (Operand)


state 154

  173 Literal: BasicLit .

    $default  reduce using rule 173 (Literal)


state 155

  139 UnaryExpr: unary_op . UnaryExpr

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    UnaryExpr    go to state 270
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 156

   42 PointerType: '*' Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 42 (PointerType)]
    INTERFACE   [reduce using rule 42 (PointerType)]
    CHAN        [reduce using rule 42 (PointerType)]
    MAP         [reduce using rule 42 (PointerType)]
    STRUCT      [reduce using rule 42 (PointerType)]
    ANY         [reduce using rule 42 (PointerType)]
    BOOL        [reduce using rule 42 (PointerType)]
    BYTE        [reduce using rule 42 (PointerType)]
    COMPARABLE  [reduce using rule 42 (PointerType)]
    INT         [reduce using rule 42 (PointerType)]
    COMPLEX     [reduce using rule 42 (PointerType)]
    ERROR       [reduce using rule 42 (PointerType)]
    FLOAT       [reduce using rule 42 (PointerType)]
    STRING      [reduce using rule 42 (PointerType)]
    RUNE        [reduce using rule 42 (PointerType)]
    IDENTIFIER  [reduce using rule 42 (PointerType)]
    CHANNELOP   [reduce using rule 42 (PointerType)]
    '('         [reduce using rule 42 (PointerType)]
    '['         [reduce using rule 42 (PointerType)]
    '*'         [reduce using rule 42 (PointerType)]
    '~'         [reduce using rule 42 (PointerType)]
    '|'         [reduce using rule 42 (PointerType)]
    $default    reduce using rule 42 (PointerType)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 157

   72 TypeElem: Type . TypeElem
   73         | '~' Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 271
    MapType         go to state 93
    ChannelType     go to state 94


state 158

   73 TypeElem: '~' . Type TypeElem
   75         | '|' '~' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 272
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 159

   72 TypeElem: Type . TypeElem
   74         | '|' Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 74 (TypeElem)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 160

   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 161

   71 InterfaceType: TypeElem . SEMICOLON
   72 TypeElem: Type TypeElem .

    SEMICOLON  shift, and go to state 167

    SEMICOLON  [reduce using rule 72 (TypeElem)]
    $default   reduce using rule 72 (TypeElem)


state 162

    9 TypeArgs: '[' . TypeList ']'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 273
    TypeName        go to state 81
    TypeList        go to state 274
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 163

    2 Type: TypeName TypeArgs .

    $default  reduce using rule 2 (Type)


state 164

   47 Parameters: '(' ParameterList ')' .

    $default  reduce using rule 47 (Parameters)


state 165

   48 Parameters: '(' ParameterList ',' . ')'

    ')'  shift, and go to state 275


state 166

   50 ParameterList: ParameterDecl ',' . ParameterDecl

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 80
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterDecl   go to state 276
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 167

   71 InterfaceType: TypeElem SEMICOLON .

    $default  reduce using rule 71 (InterfaceType)


state 168

   54 ParameterDecl: IdentifierList ARGS . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 277
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 169

   52 ParameterDecl: IdentifierList Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 52 (ParameterDecl)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 170

  123 MethodDecl: FUNC Parameters IDENTIFIER Signature . Block
  124           | FUNC Parameters IDENTIFIER Signature .

    '{'  shift, and go to state 118

    $default  reduce using rule 124 (MethodDecl)

    Block  go to state 278


state 171

   98 ConstSpecLoop: ConstSpec SEMICOLON . ConstSpecLoop

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 99 (ConstSpecLoop)

    ConstSpec       go to state 97
    ConstSpecLoop   go to state 279
    IdentifierList  go to state 39


state 172

   94 ConstDecl: CONST '(' ConstSpecLoop ')' .

    $default  reduce using rule 94 (ConstDecl)


state 173

  100 IdentifierList: IdentifierList ',' IDENTIFIER .

    $default  reduce using rule 100 (IdentifierList)


state 174

   96 ConstSpec: IdentifierList '=' ExpressionList .
  102 ExpressionList: ExpressionList . ',' Expression

    ','  shift, and go to state 280

    $default  reduce using rule 96 (ConstSpec)


state 175

  103 ExpressionList: Expression .
  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 103 (ExpressionList)


state 176

   95 ConstSpec: IdentifierList Type '=' . ExpressionList

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    ExpressionList  go to state 281
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 177

  101 IdentifierList: IDENTIFIER .
  172 OperandName: IDENTIFIER .

    COLON         reduce using rule 172 (OperandName)
    SEMICOLON     reduce using rule 172 (OperandName)
    INCRE_DECRE   reduce using rule 172 (OperandName)
    LRSHIFT       reduce using rule 172 (OperandName)
    ARITH_ASSIGN  reduce using rule 172 (OperandName)
    AND           reduce using rule 172 (OperandName)
    OR            reduce using rule 172 (OperandName)
    COMPARE       reduce using rule 172 (OperandName)
    CHANNELOP     reduce using rule 101 (IdentifierList)
    CHANNELOP     [reduce using rule 172 (OperandName)]
    '('           reduce using rule 101 (IdentifierList)
    '('           [reduce using rule 172 (OperandName)]
    ','           reduce using rule 101 (IdentifierList)
    ','           [reduce using rule 172 (OperandName)]
    '['           reduce using rule 101 (IdentifierList)
    '['           [reduce using rule 172 (OperandName)]
    ']'           reduce using rule 172 (OperandName)
    '.'           reduce using rule 172 (OperandName)
    '{'           reduce using rule 172 (OperandName)
    '*'           reduce using rule 101 (IdentifierList)
    '*'           [reduce using rule 172 (OperandName)]
    '|'           reduce using rule 101 (IdentifierList)
    '|'           [reduce using rule 172 (OperandName)]
    '='           reduce using rule 172 (OperandName)
    '+'           reduce using rule 172 (OperandName)
    '-'           reduce using rule 172 (OperandName)
    '^'           reduce using rule 172 (OperandName)
    '/'           reduce using rule 172 (OperandName)
    '%'           reduce using rule 172 (OperandName)
    '&'           reduce using rule 172 (OperandName)
    $default      reduce using rule 101 (IdentifierList)


state 178

   72 TypeElem: Type . TypeElem
  110 AliasDecl: IDENTIFIER '=' Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 110 (AliasDecl)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 179

   72 TypeElem: Type . TypeElem
  112 TypeDef: IDENTIFIER TypeParameters Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 112 (TypeDef)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 180

  108 TypeSpecLoop: TypeSpec SEMICOLON . TypeSpecLoop

    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 109 (TypeSpecLoop)

    TypeSpec      go to state 107
    TypeSpecLoop  go to state 282
    AliasDecl     go to state 43
    TypeDef       go to state 44


state 181

  105 TypeDecl: TYPE '(' TypeSpecLoop ')' .

    $default  reduce using rule 105 (TypeDecl)


state 182

   91 VarSpecList: VarSpec SEMICOLON . VarSpecList

    IDENTIFIER  shift, and go to state 36

    VarSpec         go to state 109
    VarSpecList     go to state 283
    IdentifierList  go to state 47


state 183

   87 VarDecl: VAR '(' VarSpecList ')' .

    $default  reduce using rule 87 (VarDecl)


state 184

   90 VarSpec: IdentifierList '=' ExpressionList .
  102 ExpressionList: ExpressionList . ',' Expression

    ','  shift, and go to state 280

    $default  reduce using rule 90 (VarSpec)


state 185

   88 VarSpec: IdentifierList Type '=' . ExpressionList

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    ExpressionList  go to state 284
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 186

   71 InterfaceType: TypeElem . SEMICOLON
  117 TypeParamDecl: IdentifierList TypeElem .

    SEMICOLON  shift, and go to state 167

    $default  reduce using rule 117 (TypeParamDecl)


state 187

  114 TypeParameters: '[' TypeParamList ',' . ']'
  115 TypeParamList: TypeParamList ',' . TypeParamDecl

    IDENTIFIER  shift, and go to state 36
    ']'         shift, and go to state 285

    IdentifierList  go to state 115
    TypeParamDecl   go to state 286


state 188

  113 TypeParameters: '[' TypeParamList ']' .

    $default  reduce using rule 113 (TypeParameters)


state 189

  218 BreakStmt: BREAK . IDENTIFIER
  219          | BREAK .

    IDENTIFIER  shift, and go to state 287

    $default  reduce using rule 219 (BreakStmt)


state 190

  258 SelectStmt: SELECT . '{' CommClauseLoop '}'

    '{'  shift, and go to state 288


state 191

  236 ExprSwitchStmt: SWITCH . SimpleStmtBrakets ExpressionBrakets '{' ExprCaseClauseLoop '}'
  237               | SWITCH . SimpleStmtBrakets ExpressionBrakets '{' '}'
  238               | SWITCH . ExpressionBrakets '{' ExprCaseClauseLoop '}'
  239               | SWITCH . ExpressionBrakets '{' '}'
  248 TypeSwitchStmt: SWITCH . SimpleStmtBrakets TypeSwitchGuard '{' TypeCaseClauseLoop '}'
  249               | SWITCH . TypeSwitchGuard '{' TypeCaseClauseLoop '}'

    IDENTIFIER      shift, and go to state 289
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    IDENTIFIER      [reduce using rule 252 (IdetifierGodefBrakets)]
    IntegerValue    [reduce using rule 252 (IdetifierGodefBrakets)]
    FloatValue      [reduce using rule 252 (IdetifierGodefBrakets)]
    StringValue     [reduce using rule 252 (IdetifierGodefBrakets)]
    ImaginaryValue  [reduce using rule 252 (IdetifierGodefBrakets)]
    BooleanValue    [reduce using rule 252 (IdetifierGodefBrakets)]
    '('             [reduce using rule 252 (IdetifierGodefBrakets)]
    '{'             reduce using rule 242 (ExpressionBrakets)
    $default        reduce using rule 202 (SimpleStmt)

    IdentifierList         go to state 203
    ExpressionList         go to state 204
    ShortVarDecl           go to state 205
    Expression             go to state 290
    UnaryExpr              go to state 149
    PrimaryExpr            go to state 150
    Operand                go to state 151
    OperandName            go to state 152
    Literal                go to state 153
    BasicLit               go to state 154
    unary_op               go to state 155
    SimpleStmt             go to state 291
    ExpressionStmt         go to state 210
    SendStmt               go to state 211
    Channel                go to state 212
    IncDecStmt             go to state 213
    Assignment             go to state 214
    SimpleStmtBrakets      go to state 292
    ExpressionBrakets      go to state 293
    TypeSwitchGuard        go to state 294
    IdetifierGodefBrakets  go to state 295


state 192

  223 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 223 (FallthroughStmt)


state 193

  228 IfStmt: IF . SimpleStmt SEMICOLON Expression Block ELSE IfStmt
  229       | IF . SimpleStmt SEMICOLON Expression Block ELSE Block
  230       | IF . SimpleStmt SEMICOLON Expression Block
  231       | IF . Expression Block ELSE IfStmt
  232       | IF . Expression Block ELSE Block
  233       | IF . Expression Block

    IDENTIFIER      shift, and go to state 177
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 202 (SimpleStmt)

    IdentifierList  go to state 203
    ExpressionList  go to state 204
    ShortVarDecl    go to state 205
    Expression      go to state 296
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155
    SimpleStmt      go to state 297
    ExpressionStmt  go to state 210
    SendStmt        go to state 211
    Channel         go to state 212
    IncDecStmt      go to state 213
    Assignment      go to state 214


state 194

  222 GotoStmt: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 298


state 195

  269 ForStmt: FOR . ForClauseBracket Block

    RANGE           shift, and go to state 299
    IDENTIFIER      shift, and go to state 177
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    SEMICOLON  reduce using rule 202 (SimpleStmt)
    SEMICOLON  [reduce using rule 277 (InitStmtBracket)]
    '{'        reduce using rule 273 (ForClauseBracket)
    $default   reduce using rule 202 (SimpleStmt)

    IdentifierList    go to state 300
    ExpressionList    go to state 301
    ShortVarDecl      go to state 205
    Expression        go to state 302
    UnaryExpr         go to state 149
    PrimaryExpr       go to state 150
    Operand           go to state 151
    OperandName       go to state 152
    Literal           go to state 153
    BasicLit          go to state 154
    unary_op          go to state 155
    SimpleStmt        go to state 303
    ExpressionStmt    go to state 210
    SendStmt          go to state 211
    Channel           go to state 212
    IncDecStmt        go to state 213
    Assignment        go to state 214
    ForClauseBracket  go to state 304
    Condition         go to state 305
    ForClause         go to state 306
    InitStmtBracket   go to state 307
    RangeClause       go to state 308


state 196

  220 ContinueStmt: CONTINUE . IDENTIFIER
  221             | CONTINUE .

    IDENTIFIER  shift, and go to state 309

    $default  reduce using rule 221 (ContinueStmt)


state 197

  285 DeferStmt: DEFER . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 310
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 198

  216 ReturnStmt: RETURN . ExpressionList
  217           | RETURN .

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 217 (ReturnStmt)

    ExpressionList  go to state 311
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 199

  215 GoStmt: GO . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 312
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 200

  101 IdentifierList: IDENTIFIER .
  172 OperandName: IDENTIFIER .
  201 LabeledStmt: IDENTIFIER . COLON Statement

    COLON  shift, and go to state 313

    GODEF     reduce using rule 101 (IdentifierList)
    ','       reduce using rule 101 (IdentifierList)
    ','       [reduce using rule 172 (OperandName)]
    $default  reduce using rule 172 (OperandName)


state 201

  225 Block: '{' '}' .

    $default  reduce using rule 225 (Block)


state 202

  186 Statement: Declaration .

    $default  reduce using rule 186 (Statement)


state 203

  100 IdentifierList: IdentifierList . ',' IDENTIFIER
  118 ShortVarDecl: IdentifierList . GODEF ExpressionList

    GODEF  shift, and go to state 314
    ','    shift, and go to state 100


state 204

  102 ExpressionList: ExpressionList . ',' Expression
  212 Assignment: ExpressionList . assign_op ExpressionList

    ARITH_ASSIGN  shift, and go to state 315
    ','           shift, and go to state 280
    '='           shift, and go to state 316

    assign_op  go to state 317


state 205

  207 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 207 (SimpleStmt)


state 206

  103 ExpressionList: Expression .
  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  208 ExpressionStmt: Expression .
  210 Channel: Expression .
  211 IncDecStmt: Expression . INCRE_DECRE

    INCRE_DECRE  shift, and go to state 318
    LRSHIFT      shift, and go to state 249
    AND          shift, and go to state 250
    OR           shift, and go to state 251
    COMPARE      shift, and go to state 252
    '*'          shift, and go to state 254
    '|'          shift, and go to state 255
    '+'          shift, and go to state 256
    '-'          shift, and go to state 257
    '^'          shift, and go to state 258
    '/'          shift, and go to state 259
    '%'          shift, and go to state 260
    '&'          shift, and go to state 261

    SEMICOLON  reduce using rule 208 (ExpressionStmt)
    CHANNELOP  reduce using rule 210 (Channel)
    '{'        reduce using rule 208 (ExpressionStmt)
    $default   reduce using rule 103 (ExpressionList)


state 207

  226 StatementList: Statement . SEMICOLON StatementList
  227              | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 319


state 208

  187 Statement: LabeledStmt .

    $default  reduce using rule 187 (Statement)


state 209

  188 Statement: SimpleStmt .

    $default  reduce using rule 188 (Statement)


state 210

  203 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 203 (SimpleStmt)


state 211

  204 SimpleStmt: SendStmt .

    $default  reduce using rule 204 (SimpleStmt)


state 212

  209 SendStmt: Channel . CHANNELOP Expression

    CHANNELOP  shift, and go to state 320


state 213

  205 SimpleStmt: IncDecStmt .

    $default  reduce using rule 205 (SimpleStmt)


state 214

  206 SimpleStmt: Assignment .

    $default  reduce using rule 206 (SimpleStmt)


state 215

  189 Statement: GoStmt .

    $default  reduce using rule 189 (Statement)


state 216

  190 Statement: ReturnStmt .

    $default  reduce using rule 190 (Statement)


state 217

  191 Statement: BreakStmt .

    $default  reduce using rule 191 (Statement)


state 218

  192 Statement: ContinueStmt .

    $default  reduce using rule 192 (Statement)


state 219

  193 Statement: GotoStmt .

    $default  reduce using rule 193 (Statement)


state 220

  194 Statement: FallthroughStmt .

    $default  reduce using rule 194 (Statement)


state 221

  195 Statement: Block .

    $default  reduce using rule 195 (Statement)


state 222

  224 Block: '{' StatementList . '}'

    '}'  shift, and go to state 321


state 223

  196 Statement: IfStmt .

    $default  reduce using rule 196 (Statement)


state 224

  197 Statement: SwitchStmt .

    $default  reduce using rule 197 (Statement)


state 225

  234 SwitchStmt: ExprSwitchStmt .

    $default  reduce using rule 234 (SwitchStmt)


state 226

  235 SwitchStmt: TypeSwitchStmt .

    $default  reduce using rule 235 (SwitchStmt)


state 227

  198 Statement: SelectStmt .

    $default  reduce using rule 198 (Statement)


state 228

  199 Statement: ForStmt .

    $default  reduce using rule 199 (Statement)


state 229

  200 Statement: DeferStmt .

    $default  reduce using rule 200 (Statement)


state 230

  119 FunctionDecl: FUNC IDENTIFIER TypeParameters Signature Block .

    $default  reduce using rule 119 (FunctionDecl)


state 231

   14 TypeLit: InterfaceType .
   55 InterfaceType: INTERFACE '{' InterfaceType . '}'

    '}'  shift, and go to state 322

    $default  reduce using rule 14 (TypeLit)


state 232

   77 ChannelType: CHAN . Type
   78            | CHAN . CHANNELOP Type
   79            | CHANNELOP CHAN . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 125
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 323
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 233

   72 TypeElem: Type . TypeElem
   78 ChannelType: CHAN CHANNELOP Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 78 (ChannelType)]
    INTERFACE   [reduce using rule 78 (ChannelType)]
    CHAN        [reduce using rule 78 (ChannelType)]
    MAP         [reduce using rule 78 (ChannelType)]
    STRUCT      [reduce using rule 78 (ChannelType)]
    ANY         [reduce using rule 78 (ChannelType)]
    BOOL        [reduce using rule 78 (ChannelType)]
    BYTE        [reduce using rule 78 (ChannelType)]
    COMPARABLE  [reduce using rule 78 (ChannelType)]
    INT         [reduce using rule 78 (ChannelType)]
    COMPLEX     [reduce using rule 78 (ChannelType)]
    ERROR       [reduce using rule 78 (ChannelType)]
    FLOAT       [reduce using rule 78 (ChannelType)]
    STRING      [reduce using rule 78 (ChannelType)]
    RUNE        [reduce using rule 78 (ChannelType)]
    IDENTIFIER  [reduce using rule 78 (ChannelType)]
    CHANNELOP   [reduce using rule 78 (ChannelType)]
    '('         [reduce using rule 78 (ChannelType)]
    '['         [reduce using rule 78 (ChannelType)]
    '*'         [reduce using rule 78 (ChannelType)]
    '~'         [reduce using rule 78 (ChannelType)]
    '|'         [reduce using rule 78 (ChannelType)]
    $default    reduce using rule 78 (ChannelType)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 234

   72 TypeElem: Type . TypeElem
   76 MapType: MAP '[' Type . ']' Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    ']'         shift, and go to state 324
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 235

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
  101 IdentifierList: IDENTIFIER .

    '.'  shift, and go to state 130

    StringValue  reduce using rule 5 (TypeName)
    SEMICOLON    reduce using rule 5 (TypeName)
    '['          reduce using rule 5 (TypeName)
    '['          [reduce using rule 101 (IdentifierList)]
    $default     reduce using rule 101 (IdentifierList)


state 236

   39 EmbeddedField: '*' . TypeName
   41              | '*' . TypeName TypeArgs

    IDENTIFIER  shift, and go to state 325

    TypeName        go to state 326
    QualifiedIdent  go to state 83


state 237

   38 EmbeddedField: TypeName .
   40              | TypeName . TypeArgs

    '['  shift, and go to state 162

    $default  reduce using rule 38 (EmbeddedField)

    TypeArgs  go to state 327


state 238

   31 StructType: STRUCT '{' StructTypeLoop . '}'

    '}'  shift, and go to state 328


state 239

   32 StructTypeLoop: FieldDecl . SEMICOLON ';' StructTypeLoop
   33               | FieldDecl . SEMICOLON

    SEMICOLON  shift, and go to state 329


state 240

   36 FieldDecl: EmbeddedField .
   37          | EmbeddedField . StringValue

    StringValue  shift, and go to state 330

    $default  reduce using rule 36 (FieldDecl)


state 241

   34 FieldDecl: IdentifierList . Type
   35          | IdentifierList . Type StringValue
  100 IdentifierList: IdentifierList . ',' IDENTIFIER

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 100
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 331
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 242

   56 InterfaceType: IDENTIFIER '(' ')' . SEMICOLON
   59              | IDENTIFIER '(' ')' . '(' ')' SEMICOLON
   62              | IDENTIFIER '(' ')' . '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER '(' ')' . '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER '(' ')' . Type SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 332
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 333
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 334
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 243

   57 InterfaceType: IDENTIFIER '(' ParameterList . ')' SEMICOLON
   58              | IDENTIFIER '(' ParameterList . ',' ')' SEMICOLON
   60              | IDENTIFIER '(' ParameterList . ')' '(' ')' SEMICOLON
   61              | IDENTIFIER '(' ParameterList . ',' ')' '(' ')' SEMICOLON
   63              | IDENTIFIER '(' ParameterList . ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER '(' ParameterList . ',' ')' '(' ParameterList ')' SEMICOLON
   66              | IDENTIFIER '(' ParameterList . ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList . ',' ')' '(' ParameterList ',' ')' SEMICOLON
   69              | IDENTIFIER '(' ParameterList . ')' Type SEMICOLON
   70              | IDENTIFIER '(' ParameterList . ',' ')' Type SEMICOLON

    ')'  shift, and go to state 335
    ','  shift, and go to state 336


state 244

   28 QualifiedIdent: IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 28 (QualifiedIdent)


state 245

   72 TypeElem: Type . TypeElem
   79 ChannelType: CHANNELOP CHAN Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 79 (ChannelType)]
    INTERFACE   [reduce using rule 79 (ChannelType)]
    CHAN        [reduce using rule 79 (ChannelType)]
    MAP         [reduce using rule 79 (ChannelType)]
    STRUCT      [reduce using rule 79 (ChannelType)]
    ANY         [reduce using rule 79 (ChannelType)]
    BOOL        [reduce using rule 79 (ChannelType)]
    BYTE        [reduce using rule 79 (ChannelType)]
    COMPARABLE  [reduce using rule 79 (ChannelType)]
    INT         [reduce using rule 79 (ChannelType)]
    COMPLEX     [reduce using rule 79 (ChannelType)]
    ERROR       [reduce using rule 79 (ChannelType)]
    FLOAT       [reduce using rule 79 (ChannelType)]
    STRING      [reduce using rule 79 (ChannelType)]
    RUNE        [reduce using rule 79 (ChannelType)]
    IDENTIFIER  [reduce using rule 79 (ChannelType)]
    CHANNELOP   [reduce using rule 79 (ChannelType)]
    '('         [reduce using rule 79 (ChannelType)]
    '['         [reduce using rule 79 (ChannelType)]
    '*'         [reduce using rule 79 (ChannelType)]
    '~'         [reduce using rule 79 (ChannelType)]
    '|'         [reduce using rule 79 (ChannelType)]
    $default    reduce using rule 79 (ChannelType)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 246

    3 Type: '(' Type ')' .

    $default  reduce using rule 3 (Type)


state 247

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  171 Operand: '(' Expression . ')'

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    ')'      shift, and go to state 337
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261


state 248

   30 SliceType: '[' ']' Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 30 (SliceType)]
    INTERFACE   [reduce using rule 30 (SliceType)]
    CHAN        [reduce using rule 30 (SliceType)]
    MAP         [reduce using rule 30 (SliceType)]
    STRUCT      [reduce using rule 30 (SliceType)]
    ANY         [reduce using rule 30 (SliceType)]
    BOOL        [reduce using rule 30 (SliceType)]
    BYTE        [reduce using rule 30 (SliceType)]
    COMPARABLE  [reduce using rule 30 (SliceType)]
    INT         [reduce using rule 30 (SliceType)]
    COMPLEX     [reduce using rule 30 (SliceType)]
    ERROR       [reduce using rule 30 (SliceType)]
    FLOAT       [reduce using rule 30 (SliceType)]
    STRING      [reduce using rule 30 (SliceType)]
    RUNE        [reduce using rule 30 (SliceType)]
    IDENTIFIER  [reduce using rule 30 (SliceType)]
    CHANNELOP   [reduce using rule 30 (SliceType)]
    '('         [reduce using rule 30 (SliceType)]
    '['         [reduce using rule 30 (SliceType)]
    '*'         [reduce using rule 30 (SliceType)]
    '~'         [reduce using rule 30 (SliceType)]
    '|'         [reduce using rule 30 (SliceType)]
    $default    reduce using rule 30 (SliceType)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 249

  136 Expression: Expression LRSHIFT . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 338
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 250

  126 Expression: Expression AND . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 339
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 251

  127 Expression: Expression OR . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 340
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 252

  128 Expression: Expression COMPARE . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 341
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 253

   29 ArrayType: '[' Expression ']' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 342
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 254

  133 Expression: Expression '*' . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 343
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 255

  131 Expression: Expression '|' . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 344
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 256

  129 Expression: Expression '+' . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 345
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 257

  130 Expression: Expression '-' . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 346
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 258

  132 Expression: Expression '^' . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 347
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 259

  134 Expression: Expression '/' . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 348
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 260

  135 Expression: Expression '%' . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 349
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 261

  137 Expression: Expression '&' . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 350
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 262

  155 Arguments: '(' . ArgumentsLoop ')'
  156          | '(' . ')'

    FUNC            shift, and go to state 56
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 351
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 352
    '('             shift, and go to state 353
    ')'             shift, and go to state 354
    '['             shift, and go to state 76
    '*'             shift, and go to state 355
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Type            go to state 356
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    ExpressionList  go to state 357
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    ArgumentsLoop   go to state 358
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 263

  147 Index: '[' . Expression ']'
  148 Slice: '[' . Expression COLON Expression ']'
  149      | '[' . Expression COLON ']'
  150      | '[' . COLON Expression ']'
  151      | '[' . COLON ']'
  152      | '[' . Expression COLON Expression COLON Expression ']'
  153      | '[' . COLON Expression COLON Expression ']'

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    COLON           shift, and go to state 359
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 360
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 264

  146 Selector: '.' . IDENTIFIER
  154 TypeAssertion: '.' . '(' Type ')'

    IDENTIFIER  shift, and go to state 361
    '('         shift, and go to state 362


state 265

  141 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 141 (PrimaryExpr)


state 266

  142 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 142 (PrimaryExpr)


state 267

  143 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 143 (PrimaryExpr)


state 268

  144 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 144 (PrimaryExpr)


state 269

  145 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 145 (PrimaryExpr)


state 270

  139 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 139 (UnaryExpr)


state 271

   71 InterfaceType: TypeElem . SEMICOLON
   72 TypeElem: Type TypeElem .
   73         | '~' Type TypeElem .

    SEMICOLON  shift, and go to state 167

    SEMICOLON  [reduce using rule 72 (TypeElem)]
    SEMICOLON  [reduce using rule 73 (TypeElem)]
    $default   reduce using rule 73 (TypeElem)


state 272

   72 TypeElem: Type . TypeElem
   73         | '~' Type . TypeElem
   75         | '|' '~' Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 75 (TypeElem)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 271
    MapType         go to state 93
    ChannelType     go to state 94


state 273

    8 TypeList: Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 8 (TypeList)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 274

    7 TypeList: TypeList . ',' Type
    9 TypeArgs: '[' TypeList . ']'

    ','  shift, and go to state 363
    ']'  shift, and go to state 364


state 275

   48 Parameters: '(' ParameterList ',' ')' .

    $default  reduce using rule 48 (Parameters)


state 276

   50 ParameterList: ParameterDecl ',' ParameterDecl .

    $default  reduce using rule 50 (ParameterList)


state 277

   54 ParameterDecl: IdentifierList ARGS Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 54 (ParameterDecl)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 278

  123 MethodDecl: FUNC Parameters IDENTIFIER Signature Block .

    $default  reduce using rule 123 (MethodDecl)


state 279

   98 ConstSpecLoop: ConstSpec SEMICOLON ConstSpecLoop .

    $default  reduce using rule 98 (ConstSpecLoop)


state 280

  102 ExpressionList: ExpressionList ',' . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 365
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 281

   95 ConstSpec: IdentifierList Type '=' ExpressionList .
  102 ExpressionList: ExpressionList . ',' Expression

    ','  shift, and go to state 280

    $default  reduce using rule 95 (ConstSpec)


state 282

  108 TypeSpecLoop: TypeSpec SEMICOLON TypeSpecLoop .

    $default  reduce using rule 108 (TypeSpecLoop)


state 283

   91 VarSpecList: VarSpec SEMICOLON VarSpecList .

    $default  reduce using rule 91 (VarSpecList)


state 284

   88 VarSpec: IdentifierList Type '=' ExpressionList .
  102 ExpressionList: ExpressionList . ',' Expression

    ','  shift, and go to state 280

    $default  reduce using rule 88 (VarSpec)


state 285

  114 TypeParameters: '[' TypeParamList ',' ']' .

    $default  reduce using rule 114 (TypeParameters)


state 286

  115 TypeParamList: TypeParamList ',' TypeParamDecl .

    $default  reduce using rule 115 (TypeParamList)


state 287

  218 BreakStmt: BREAK IDENTIFIER .

    $default  reduce using rule 218 (BreakStmt)


state 288

  258 SelectStmt: SELECT '{' . CommClauseLoop '}'

    DEFAULT  shift, and go to state 366
    CASE     shift, and go to state 367

    COLON     reduce using rule 262 (CommCase)
    $default  reduce using rule 261 (CommClauseLoop)

    CommClause      go to state 368
    CommClauseLoop  go to state 369
    CommCase        go to state 370


state 289

  101 IdentifierList: IDENTIFIER .
  172 OperandName: IDENTIFIER .
  251 IdetifierGodefBrakets: IDENTIFIER . GODEF

    GODEF  shift, and go to state 371

    GODEF     [reduce using rule 101 (IdentifierList)]
    ','       reduce using rule 101 (IdentifierList)
    ','       [reduce using rule 172 (OperandName)]
    $default  reduce using rule 172 (OperandName)


state 290

  103 ExpressionList: Expression .
  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  208 ExpressionStmt: Expression .
  210 Channel: Expression .
  211 IncDecStmt: Expression . INCRE_DECRE
  241 ExpressionBrakets: Expression .

    INCRE_DECRE  shift, and go to state 318
    LRSHIFT      shift, and go to state 249
    AND          shift, and go to state 250
    OR           shift, and go to state 251
    COMPARE      shift, and go to state 252
    '*'          shift, and go to state 254
    '|'          shift, and go to state 255
    '+'          shift, and go to state 256
    '-'          shift, and go to state 257
    '^'          shift, and go to state 258
    '/'          shift, and go to state 259
    '%'          shift, and go to state 260
    '&'          shift, and go to state 261

    SEMICOLON  reduce using rule 208 (ExpressionStmt)
    CHANNELOP  reduce using rule 210 (Channel)
    '{'        reduce using rule 241 (ExpressionBrakets)
    $default   reduce using rule 103 (ExpressionList)


state 291

  240 SimpleStmtBrakets: SimpleStmt . SEMICOLON

    SEMICOLON  shift, and go to state 372


state 292

  236 ExprSwitchStmt: SWITCH SimpleStmtBrakets . ExpressionBrakets '{' ExprCaseClauseLoop '}'
  237               | SWITCH SimpleStmtBrakets . ExpressionBrakets '{' '}'
  248 TypeSwitchStmt: SWITCH SimpleStmtBrakets . TypeSwitchGuard '{' TypeCaseClauseLoop '}'

    IDENTIFIER      shift, and go to state 373
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    IDENTIFIER      [reduce using rule 252 (IdetifierGodefBrakets)]
    IntegerValue    [reduce using rule 252 (IdetifierGodefBrakets)]
    FloatValue      [reduce using rule 252 (IdetifierGodefBrakets)]
    StringValue     [reduce using rule 252 (IdetifierGodefBrakets)]
    ImaginaryValue  [reduce using rule 252 (IdetifierGodefBrakets)]
    BooleanValue    [reduce using rule 252 (IdetifierGodefBrakets)]
    '('             [reduce using rule 252 (IdetifierGodefBrakets)]
    $default        reduce using rule 242 (ExpressionBrakets)

    Expression             go to state 374
    UnaryExpr              go to state 149
    PrimaryExpr            go to state 150
    Operand                go to state 151
    OperandName            go to state 152
    Literal                go to state 153
    BasicLit               go to state 154
    unary_op               go to state 155
    ExpressionBrakets      go to state 375
    TypeSwitchGuard        go to state 376
    IdetifierGodefBrakets  go to state 295


state 293

  238 ExprSwitchStmt: SWITCH ExpressionBrakets . '{' ExprCaseClauseLoop '}'
  239               | SWITCH ExpressionBrakets . '{' '}'

    '{'  shift, and go to state 377


state 294

  249 TypeSwitchStmt: SWITCH TypeSwitchGuard . '{' TypeCaseClauseLoop '}'

    '{'  shift, and go to state 378


state 295

  250 TypeSwitchGuard: IdetifierGodefBrakets . PrimaryExpr '.' '(' TYPE ')'

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    '('             shift, and go to state 140

    PrimaryExpr  go to state 379
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154


state 296

  103 ExpressionList: Expression .
  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  208 ExpressionStmt: Expression .
  210 Channel: Expression .
  211 IncDecStmt: Expression . INCRE_DECRE
  231 IfStmt: IF Expression . Block ELSE IfStmt
  232       | IF Expression . Block ELSE Block
  233       | IF Expression . Block

    INCRE_DECRE  shift, and go to state 318
    LRSHIFT      shift, and go to state 249
    AND          shift, and go to state 250
    OR           shift, and go to state 251
    COMPARE      shift, and go to state 252
    '{'          shift, and go to state 118
    '*'          shift, and go to state 254
    '|'          shift, and go to state 255
    '+'          shift, and go to state 256
    '-'          shift, and go to state 257
    '^'          shift, and go to state 258
    '/'          shift, and go to state 259
    '%'          shift, and go to state 260
    '&'          shift, and go to state 261

    SEMICOLON  reduce using rule 208 (ExpressionStmt)
    CHANNELOP  reduce using rule 210 (Channel)
    $default   reduce using rule 103 (ExpressionList)

    Block  go to state 380


state 297

  228 IfStmt: IF SimpleStmt . SEMICOLON Expression Block ELSE IfStmt
  229       | IF SimpleStmt . SEMICOLON Expression Block ELSE Block
  230       | IF SimpleStmt . SEMICOLON Expression Block

    SEMICOLON  shift, and go to state 381


state 298

  222 GotoStmt: GOTO IDENTIFIER .

    $default  reduce using rule 222 (GotoStmt)


state 299

  284 RangeClause: RANGE . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 382
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 300

  100 IdentifierList: IdentifierList . ',' IDENTIFIER
  118 ShortVarDecl: IdentifierList . GODEF ExpressionList
  283 RangeClause: IdentifierList . GODEF RANGE Expression

    GODEF  shift, and go to state 383
    ','    shift, and go to state 100


state 301

  102 ExpressionList: ExpressionList . ',' Expression
  212 Assignment: ExpressionList . assign_op ExpressionList
  282 RangeClause: ExpressionList . '=' RANGE Expression

    ARITH_ASSIGN  shift, and go to state 315
    ','           shift, and go to state 280
    '='           shift, and go to state 384

    assign_op  go to state 317


state 302

  103 ExpressionList: Expression .
  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  208 ExpressionStmt: Expression .
  210 Channel: Expression .
  211 IncDecStmt: Expression . INCRE_DECRE
  274 Condition: Expression .

    INCRE_DECRE  shift, and go to state 318
    LRSHIFT      shift, and go to state 249
    AND          shift, and go to state 250
    OR           shift, and go to state 251
    COMPARE      shift, and go to state 252
    '*'          shift, and go to state 254
    '|'          shift, and go to state 255
    '+'          shift, and go to state 256
    '-'          shift, and go to state 257
    '^'          shift, and go to state 258
    '/'          shift, and go to state 259
    '%'          shift, and go to state 260
    '&'          shift, and go to state 261

    SEMICOLON  reduce using rule 208 (ExpressionStmt)
    CHANNELOP  reduce using rule 210 (Channel)
    '{'        reduce using rule 274 (Condition)
    $default   reduce using rule 103 (ExpressionList)


state 303

  276 InitStmtBracket: SimpleStmt .

    $default  reduce using rule 276 (InitStmtBracket)


state 304

  269 ForStmt: FOR ForClauseBracket . Block

    '{'  shift, and go to state 118

    Block  go to state 385


state 305

  270 ForClauseBracket: Condition .

    $default  reduce using rule 270 (ForClauseBracket)


state 306

  271 ForClauseBracket: ForClause .

    $default  reduce using rule 271 (ForClauseBracket)


state 307

  275 ForClause: InitStmtBracket . SEMICOLON ConditionBracket SEMICOLON PostStmtBracket

    SEMICOLON  shift, and go to state 386


state 308

  272 ForClauseBracket: RangeClause .

    $default  reduce using rule 272 (ForClauseBracket)


state 309

  220 ContinueStmt: CONTINUE IDENTIFIER .

    $default  reduce using rule 220 (ContinueStmt)


state 310

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  285 DeferStmt: DEFER Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 285 (DeferStmt)


state 311

  102 ExpressionList: ExpressionList . ',' Expression
  216 ReturnStmt: RETURN ExpressionList .

    ','  shift, and go to state 280

    $default  reduce using rule 216 (ReturnStmt)


state 312

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  215 GoStmt: GO Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 215 (GoStmt)


state 313

  201 LabeledStmt: IDENTIFIER COLON . Statement

    BREAK           shift, and go to state 189
    SELECT          shift, and go to state 190
    SWITCH          shift, and go to state 191
    FALLTHROUGH     shift, and go to state 192
    IF              shift, and go to state 193
    GOTO            shift, and go to state 194
    FOR             shift, and go to state 195
    CONTINUE        shift, and go to state 196
    DEFER           shift, and go to state 197
    RETURN          shift, and go to state 198
    GO              shift, and go to state 199
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    IDENTIFIER      shift, and go to state 200
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '{'             shift, and go to state 118
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 202 (SimpleStmt)

    Declaration      go to state 202
    VarDecl          go to state 22
    ConstDecl        go to state 23
    IdentifierList   go to state 203
    ExpressionList   go to state 204
    TypeDecl         go to state 24
    ShortVarDecl     go to state 205
    Expression       go to state 206
    UnaryExpr        go to state 149
    PrimaryExpr      go to state 150
    Operand          go to state 151
    OperandName      go to state 152
    Literal          go to state 153
    BasicLit         go to state 154
    unary_op         go to state 155
    Statement        go to state 387
    LabeledStmt      go to state 208
    SimpleStmt       go to state 209
    ExpressionStmt   go to state 210
    SendStmt         go to state 211
    Channel          go to state 212
    IncDecStmt       go to state 213
    Assignment       go to state 214
    GoStmt           go to state 215
    ReturnStmt       go to state 216
    BreakStmt        go to state 217
    ContinueStmt     go to state 218
    GotoStmt         go to state 219
    FallthroughStmt  go to state 220
    Block            go to state 221
    IfStmt           go to state 223
    SwitchStmt       go to state 224
    ExprSwitchStmt   go to state 225
    TypeSwitchStmt   go to state 226
    SelectStmt       go to state 227
    ForStmt          go to state 228
    DeferStmt        go to state 229


state 314

  118 ShortVarDecl: IdentifierList GODEF . ExpressionList

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    ExpressionList  go to state 388
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 315

  213 assign_op: ARITH_ASSIGN .

    $default  reduce using rule 213 (assign_op)


state 316

  214 assign_op: '=' .

    $default  reduce using rule 214 (assign_op)


state 317

  212 Assignment: ExpressionList assign_op . ExpressionList

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    ExpressionList  go to state 389
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 318

  211 IncDecStmt: Expression INCRE_DECRE .

    $default  reduce using rule 211 (IncDecStmt)


state 319

  226 StatementList: Statement SEMICOLON . StatementList
  227              | Statement SEMICOLON .

    BREAK           shift, and go to state 189
    SELECT          shift, and go to state 190
    SWITCH          shift, and go to state 191
    FALLTHROUGH     shift, and go to state 192
    IF              shift, and go to state 193
    GOTO            shift, and go to state 194
    FOR             shift, and go to state 195
    CONTINUE        shift, and go to state 196
    DEFER           shift, and go to state 197
    RETURN          shift, and go to state 198
    GO              shift, and go to state 199
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    IDENTIFIER      shift, and go to state 200
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '{'             shift, and go to state 118
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    SEMICOLON  reduce using rule 202 (SimpleStmt)
    $default   reduce using rule 227 (StatementList)

    Declaration      go to state 202
    VarDecl          go to state 22
    ConstDecl        go to state 23
    IdentifierList   go to state 203
    ExpressionList   go to state 204
    TypeDecl         go to state 24
    ShortVarDecl     go to state 205
    Expression       go to state 206
    UnaryExpr        go to state 149
    PrimaryExpr      go to state 150
    Operand          go to state 151
    OperandName      go to state 152
    Literal          go to state 153
    BasicLit         go to state 154
    unary_op         go to state 155
    Statement        go to state 207
    LabeledStmt      go to state 208
    SimpleStmt       go to state 209
    ExpressionStmt   go to state 210
    SendStmt         go to state 211
    Channel          go to state 212
    IncDecStmt       go to state 213
    Assignment       go to state 214
    GoStmt           go to state 215
    ReturnStmt       go to state 216
    BreakStmt        go to state 217
    ContinueStmt     go to state 218
    GotoStmt         go to state 219
    FallthroughStmt  go to state 220
    Block            go to state 221
    StatementList    go to state 390
    IfStmt           go to state 223
    SwitchStmt       go to state 224
    ExprSwitchStmt   go to state 225
    TypeSwitchStmt   go to state 226
    SelectStmt       go to state 227
    ForStmt          go to state 228
    DeferStmt        go to state 229


state 320

  209 SendStmt: Channel CHANNELOP . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 391
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 321

  224 Block: '{' StatementList '}' .

    $default  reduce using rule 224 (Block)


state 322

   55 InterfaceType: INTERFACE '{' InterfaceType '}' .

    $default  reduce using rule 55 (InterfaceType)


state 323

   72 TypeElem: Type . TypeElem
   77 ChannelType: CHAN Type .
   79            | CHANNELOP CHAN Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC         [reduce using rule 77 (ChannelType)]
    FUNC         [reduce using rule 79 (ChannelType)]
    INTERFACE    [reduce using rule 77 (ChannelType)]
    INTERFACE    [reduce using rule 79 (ChannelType)]
    ARGS         reduce using rule 77 (ChannelType)
    ARGS         [reduce using rule 79 (ChannelType)]
    CHAN         [reduce using rule 77 (ChannelType)]
    CHAN         [reduce using rule 79 (ChannelType)]
    MAP          [reduce using rule 77 (ChannelType)]
    MAP          [reduce using rule 79 (ChannelType)]
    STRUCT       [reduce using rule 77 (ChannelType)]
    STRUCT       [reduce using rule 79 (ChannelType)]
    ANY          [reduce using rule 77 (ChannelType)]
    ANY          [reduce using rule 79 (ChannelType)]
    BOOL         [reduce using rule 77 (ChannelType)]
    BOOL         [reduce using rule 79 (ChannelType)]
    BYTE         [reduce using rule 77 (ChannelType)]
    BYTE         [reduce using rule 79 (ChannelType)]
    COMPARABLE   [reduce using rule 77 (ChannelType)]
    COMPARABLE   [reduce using rule 79 (ChannelType)]
    INT          [reduce using rule 77 (ChannelType)]
    INT          [reduce using rule 79 (ChannelType)]
    COMPLEX      [reduce using rule 77 (ChannelType)]
    COMPLEX      [reduce using rule 79 (ChannelType)]
    ERROR        [reduce using rule 77 (ChannelType)]
    ERROR        [reduce using rule 79 (ChannelType)]
    FLOAT        [reduce using rule 77 (ChannelType)]
    FLOAT        [reduce using rule 79 (ChannelType)]
    STRING       [reduce using rule 77 (ChannelType)]
    STRING       [reduce using rule 79 (ChannelType)]
    RUNE         [reduce using rule 77 (ChannelType)]
    RUNE         [reduce using rule 79 (ChannelType)]
    IDENTIFIER   [reduce using rule 77 (ChannelType)]
    IDENTIFIER   [reduce using rule 79 (ChannelType)]
    StringValue  reduce using rule 77 (ChannelType)
    StringValue  [reduce using rule 79 (ChannelType)]
    COLON        reduce using rule 77 (ChannelType)
    COLON        [reduce using rule 79 (ChannelType)]
    SEMICOLON    reduce using rule 77 (ChannelType)
    SEMICOLON    [reduce using rule 79 (ChannelType)]
    CHANNELOP    [reduce using rule 77 (ChannelType)]
    CHANNELOP    [reduce using rule 79 (ChannelType)]
    '('          [reduce using rule 77 (ChannelType)]
    '('          [reduce using rule 79 (ChannelType)]
    ')'          reduce using rule 77 (ChannelType)
    ')'          [reduce using rule 79 (ChannelType)]
    ','          reduce using rule 77 (ChannelType)
    ','          [reduce using rule 79 (ChannelType)]
    '['          [reduce using rule 77 (ChannelType)]
    '['          [reduce using rule 79 (ChannelType)]
    ']'          reduce using rule 77 (ChannelType)
    ']'          [reduce using rule 79 (ChannelType)]
    '{'          reduce using rule 77 (ChannelType)
    '{'          [reduce using rule 79 (ChannelType)]
    '*'          [reduce using rule 77 (ChannelType)]
    '*'          [reduce using rule 79 (ChannelType)]
    '~'          [reduce using rule 77 (ChannelType)]
    '~'          [reduce using rule 79 (ChannelType)]
    '|'          [reduce using rule 77 (ChannelType)]
    '|'          [reduce using rule 79 (ChannelType)]
    '='          reduce using rule 77 (ChannelType)
    '='          [reduce using rule 79 (ChannelType)]
    $default     reduce using rule 77 (ChannelType)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 324

   76 MapType: MAP '[' Type ']' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 392
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 325

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER

    '.'  shift, and go to state 130

    $default  reduce using rule 5 (TypeName)


state 326

   39 EmbeddedField: '*' TypeName .
   41              | '*' TypeName . TypeArgs

    '['  shift, and go to state 162

    $default  reduce using rule 39 (EmbeddedField)

    TypeArgs  go to state 393


state 327

   40 EmbeddedField: TypeName TypeArgs .

    $default  reduce using rule 40 (EmbeddedField)


state 328

   31 StructType: STRUCT '{' StructTypeLoop '}' .

    $default  reduce using rule 31 (StructType)


state 329

   32 StructTypeLoop: FieldDecl SEMICOLON . ';' StructTypeLoop
   33               | FieldDecl SEMICOLON .

    ';'  shift, and go to state 394

    $default  reduce using rule 33 (StructTypeLoop)


state 330

   37 FieldDecl: EmbeddedField StringValue .

    $default  reduce using rule 37 (FieldDecl)


state 331

   34 FieldDecl: IdentifierList Type .
   35          | IdentifierList Type . StringValue
   72 TypeElem: Type . TypeElem

    FUNC         shift, and go to state 56
    INTERFACE    shift, and go to state 57
    CHAN         shift, and go to state 59
    MAP          shift, and go to state 60
    STRUCT       shift, and go to state 61
    ANY          shift, and go to state 62
    BOOL         shift, and go to state 63
    BYTE         shift, and go to state 64
    COMPARABLE   shift, and go to state 65
    INT          shift, and go to state 66
    COMPLEX      shift, and go to state 67
    ERROR        shift, and go to state 68
    FLOAT        shift, and go to state 69
    STRING       shift, and go to state 70
    RUNE         shift, and go to state 71
    IDENTIFIER   shift, and go to state 99
    StringValue  shift, and go to state 395
    CHANNELOP    shift, and go to state 73
    '('          shift, and go to state 74
    '['          shift, and go to state 76
    '*'          shift, and go to state 77
    '~'          shift, and go to state 78
    '|'          shift, and go to state 79

    $default  reduce using rule 34 (FieldDecl)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 332

   56 InterfaceType: IDENTIFIER '(' ')' SEMICOLON .

    $default  reduce using rule 56 (InterfaceType)


state 333

    3 Type: '(' . Type ')'
   59 InterfaceType: IDENTIFIER '(' ')' '(' . ')' SEMICOLON
   62              | IDENTIFIER '(' ')' '(' . ParameterList ')' SEMICOLON
   65              | IDENTIFIER '(' ')' '(' . ParameterList ',' ')' SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 396
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 397
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterList   go to state 398
    ParameterDecl   go to state 90
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 334

   68 InterfaceType: IDENTIFIER '(' ')' Type . SEMICOLON
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 399
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 335

   57 InterfaceType: IDENTIFIER '(' ParameterList ')' . SEMICOLON
   60              | IDENTIFIER '(' ParameterList ')' . '(' ')' SEMICOLON
   63              | IDENTIFIER '(' ParameterList ')' . '(' ParameterList ')' SEMICOLON
   66              | IDENTIFIER '(' ParameterList ')' . '(' ParameterList ',' ')' SEMICOLON
   69              | IDENTIFIER '(' ParameterList ')' . Type SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 400
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 401
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 402
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 336

   58 InterfaceType: IDENTIFIER '(' ParameterList ',' . ')' SEMICOLON
   61              | IDENTIFIER '(' ParameterList ',' . ')' '(' ')' SEMICOLON
   64              | IDENTIFIER '(' ParameterList ',' . ')' '(' ParameterList ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList ',' . ')' '(' ParameterList ',' ')' SEMICOLON
   70              | IDENTIFIER '(' ParameterList ',' . ')' Type SEMICOLON

    ')'  shift, and go to state 403


state 337

  171 Operand: '(' Expression ')' .

    $default  reduce using rule 171 (Operand)


state 338

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  136           | Expression LRSHIFT Expression .
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 136 (Expression)]
    AND       [reduce using rule 136 (Expression)]
    OR        [reduce using rule 136 (Expression)]
    COMPARE   [reduce using rule 136 (Expression)]
    '*'       [reduce using rule 136 (Expression)]
    '|'       [reduce using rule 136 (Expression)]
    '+'       [reduce using rule 136 (Expression)]
    '-'       [reduce using rule 136 (Expression)]
    '^'       [reduce using rule 136 (Expression)]
    '/'       [reduce using rule 136 (Expression)]
    '%'       [reduce using rule 136 (Expression)]
    '&'       [reduce using rule 136 (Expression)]
    $default  reduce using rule 136 (Expression)


state 339

  126 Expression: Expression . AND Expression
  126           | Expression AND Expression .
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 126 (Expression)]
    AND       [reduce using rule 126 (Expression)]
    OR        [reduce using rule 126 (Expression)]
    COMPARE   [reduce using rule 126 (Expression)]
    '*'       [reduce using rule 126 (Expression)]
    '|'       [reduce using rule 126 (Expression)]
    '+'       [reduce using rule 126 (Expression)]
    '-'       [reduce using rule 126 (Expression)]
    '^'       [reduce using rule 126 (Expression)]
    '/'       [reduce using rule 126 (Expression)]
    '%'       [reduce using rule 126 (Expression)]
    '&'       [reduce using rule 126 (Expression)]
    $default  reduce using rule 126 (Expression)


state 340

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  127           | Expression OR Expression .
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 127 (Expression)]
    AND       [reduce using rule 127 (Expression)]
    OR        [reduce using rule 127 (Expression)]
    COMPARE   [reduce using rule 127 (Expression)]
    '*'       [reduce using rule 127 (Expression)]
    '|'       [reduce using rule 127 (Expression)]
    '+'       [reduce using rule 127 (Expression)]
    '-'       [reduce using rule 127 (Expression)]
    '^'       [reduce using rule 127 (Expression)]
    '/'       [reduce using rule 127 (Expression)]
    '%'       [reduce using rule 127 (Expression)]
    '&'       [reduce using rule 127 (Expression)]
    $default  reduce using rule 127 (Expression)


state 341

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  128           | Expression COMPARE Expression .
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 128 (Expression)]
    AND       [reduce using rule 128 (Expression)]
    OR        [reduce using rule 128 (Expression)]
    COMPARE   [reduce using rule 128 (Expression)]
    '*'       [reduce using rule 128 (Expression)]
    '|'       [reduce using rule 128 (Expression)]
    '+'       [reduce using rule 128 (Expression)]
    '-'       [reduce using rule 128 (Expression)]
    '^'       [reduce using rule 128 (Expression)]
    '/'       [reduce using rule 128 (Expression)]
    '%'       [reduce using rule 128 (Expression)]
    '&'       [reduce using rule 128 (Expression)]
    $default  reduce using rule 128 (Expression)


state 342

   29 ArrayType: '[' Expression ']' Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 29 (ArrayType)]
    INTERFACE   [reduce using rule 29 (ArrayType)]
    CHAN        [reduce using rule 29 (ArrayType)]
    MAP         [reduce using rule 29 (ArrayType)]
    STRUCT      [reduce using rule 29 (ArrayType)]
    ANY         [reduce using rule 29 (ArrayType)]
    BOOL        [reduce using rule 29 (ArrayType)]
    BYTE        [reduce using rule 29 (ArrayType)]
    COMPARABLE  [reduce using rule 29 (ArrayType)]
    INT         [reduce using rule 29 (ArrayType)]
    COMPLEX     [reduce using rule 29 (ArrayType)]
    ERROR       [reduce using rule 29 (ArrayType)]
    FLOAT       [reduce using rule 29 (ArrayType)]
    STRING      [reduce using rule 29 (ArrayType)]
    RUNE        [reduce using rule 29 (ArrayType)]
    IDENTIFIER  [reduce using rule 29 (ArrayType)]
    CHANNELOP   [reduce using rule 29 (ArrayType)]
    '('         [reduce using rule 29 (ArrayType)]
    '['         [reduce using rule 29 (ArrayType)]
    '*'         [reduce using rule 29 (ArrayType)]
    '~'         [reduce using rule 29 (ArrayType)]
    '|'         [reduce using rule 29 (ArrayType)]
    $default    reduce using rule 29 (ArrayType)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 343

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  133           | Expression '*' Expression .
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 133 (Expression)]
    AND       [reduce using rule 133 (Expression)]
    OR        [reduce using rule 133 (Expression)]
    COMPARE   [reduce using rule 133 (Expression)]
    '*'       [reduce using rule 133 (Expression)]
    '|'       [reduce using rule 133 (Expression)]
    '+'       [reduce using rule 133 (Expression)]
    '-'       [reduce using rule 133 (Expression)]
    '^'       [reduce using rule 133 (Expression)]
    '/'       [reduce using rule 133 (Expression)]
    '%'       [reduce using rule 133 (Expression)]
    '&'       [reduce using rule 133 (Expression)]
    $default  reduce using rule 133 (Expression)


state 344

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  131           | Expression '|' Expression .
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 131 (Expression)]
    AND       [reduce using rule 131 (Expression)]
    OR        [reduce using rule 131 (Expression)]
    COMPARE   [reduce using rule 131 (Expression)]
    '*'       [reduce using rule 131 (Expression)]
    '|'       [reduce using rule 131 (Expression)]
    '+'       [reduce using rule 131 (Expression)]
    '-'       [reduce using rule 131 (Expression)]
    '^'       [reduce using rule 131 (Expression)]
    '/'       [reduce using rule 131 (Expression)]
    '%'       [reduce using rule 131 (Expression)]
    '&'       [reduce using rule 131 (Expression)]
    $default  reduce using rule 131 (Expression)


state 345

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  129           | Expression '+' Expression .
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 129 (Expression)]
    AND       [reduce using rule 129 (Expression)]
    OR        [reduce using rule 129 (Expression)]
    COMPARE   [reduce using rule 129 (Expression)]
    '*'       [reduce using rule 129 (Expression)]
    '|'       [reduce using rule 129 (Expression)]
    '+'       [reduce using rule 129 (Expression)]
    '-'       [reduce using rule 129 (Expression)]
    '^'       [reduce using rule 129 (Expression)]
    '/'       [reduce using rule 129 (Expression)]
    '%'       [reduce using rule 129 (Expression)]
    '&'       [reduce using rule 129 (Expression)]
    $default  reduce using rule 129 (Expression)


state 346

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  130           | Expression '-' Expression .
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 130 (Expression)]
    AND       [reduce using rule 130 (Expression)]
    OR        [reduce using rule 130 (Expression)]
    COMPARE   [reduce using rule 130 (Expression)]
    '*'       [reduce using rule 130 (Expression)]
    '|'       [reduce using rule 130 (Expression)]
    '+'       [reduce using rule 130 (Expression)]
    '-'       [reduce using rule 130 (Expression)]
    '^'       [reduce using rule 130 (Expression)]
    '/'       [reduce using rule 130 (Expression)]
    '%'       [reduce using rule 130 (Expression)]
    '&'       [reduce using rule 130 (Expression)]
    $default  reduce using rule 130 (Expression)


state 347

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  132           | Expression '^' Expression .
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 132 (Expression)]
    AND       [reduce using rule 132 (Expression)]
    OR        [reduce using rule 132 (Expression)]
    COMPARE   [reduce using rule 132 (Expression)]
    '*'       [reduce using rule 132 (Expression)]
    '|'       [reduce using rule 132 (Expression)]
    '+'       [reduce using rule 132 (Expression)]
    '-'       [reduce using rule 132 (Expression)]
    '^'       [reduce using rule 132 (Expression)]
    '/'       [reduce using rule 132 (Expression)]
    '%'       [reduce using rule 132 (Expression)]
    '&'       [reduce using rule 132 (Expression)]
    $default  reduce using rule 132 (Expression)


state 348

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  134           | Expression '/' Expression .
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 134 (Expression)]
    AND       [reduce using rule 134 (Expression)]
    OR        [reduce using rule 134 (Expression)]
    COMPARE   [reduce using rule 134 (Expression)]
    '*'       [reduce using rule 134 (Expression)]
    '|'       [reduce using rule 134 (Expression)]
    '+'       [reduce using rule 134 (Expression)]
    '-'       [reduce using rule 134 (Expression)]
    '^'       [reduce using rule 134 (Expression)]
    '/'       [reduce using rule 134 (Expression)]
    '%'       [reduce using rule 134 (Expression)]
    '&'       [reduce using rule 134 (Expression)]
    $default  reduce using rule 134 (Expression)


state 349

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  135           | Expression '%' Expression .
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 135 (Expression)]
    AND       [reduce using rule 135 (Expression)]
    OR        [reduce using rule 135 (Expression)]
    COMPARE   [reduce using rule 135 (Expression)]
    '*'       [reduce using rule 135 (Expression)]
    '|'       [reduce using rule 135 (Expression)]
    '+'       [reduce using rule 135 (Expression)]
    '-'       [reduce using rule 135 (Expression)]
    '^'       [reduce using rule 135 (Expression)]
    '/'       [reduce using rule 135 (Expression)]
    '%'       [reduce using rule 135 (Expression)]
    '&'       [reduce using rule 135 (Expression)]
    $default  reduce using rule 135 (Expression)


state 350

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  137           | Expression '&' Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    LRSHIFT   [reduce using rule 137 (Expression)]
    AND       [reduce using rule 137 (Expression)]
    OR        [reduce using rule 137 (Expression)]
    COMPARE   [reduce using rule 137 (Expression)]
    '*'       [reduce using rule 137 (Expression)]
    '|'       [reduce using rule 137 (Expression)]
    '+'       [reduce using rule 137 (Expression)]
    '-'       [reduce using rule 137 (Expression)]
    '^'       [reduce using rule 137 (Expression)]
    '/'       [reduce using rule 137 (Expression)]
    '%'       [reduce using rule 137 (Expression)]
    '&'       [reduce using rule 137 (Expression)]
    $default  reduce using rule 137 (Expression)


state 351

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   56 InterfaceType: IDENTIFIER . '(' ')' SEMICOLON
   57              | IDENTIFIER . '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER . '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER . '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER . '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER . '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER . '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER . '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER . '(' ')' Type SEMICOLON
   69              | IDENTIFIER . '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER . '(' ParameterList ',' ')' Type SEMICOLON
  172 OperandName: IDENTIFIER .

    '('  shift, and go to state 129
    '.'  shift, and go to state 130

    ARGS      reduce using rule 5 (TypeName)
    ARGS      [reduce using rule 172 (OperandName)]
    LRSHIFT   reduce using rule 172 (OperandName)
    AND       reduce using rule 172 (OperandName)
    OR        reduce using rule 172 (OperandName)
    COMPARE   reduce using rule 172 (OperandName)
    '('       [reduce using rule 5 (TypeName)]
    '('       [reduce using rule 172 (OperandName)]
    ')'       reduce using rule 5 (TypeName)
    ')'       [reduce using rule 172 (OperandName)]
    ','       reduce using rule 5 (TypeName)
    ','       [reduce using rule 172 (OperandName)]
    '['       reduce using rule 5 (TypeName)
    '['       [reduce using rule 172 (OperandName)]
    '.'       [reduce using rule 172 (OperandName)]
    '*'       reduce using rule 5 (TypeName)
    '*'       [reduce using rule 172 (OperandName)]
    '|'       reduce using rule 5 (TypeName)
    '|'       [reduce using rule 172 (OperandName)]
    '+'       reduce using rule 172 (OperandName)
    '-'       reduce using rule 172 (OperandName)
    '^'       reduce using rule 172 (OperandName)
    '/'       reduce using rule 172 (OperandName)
    '%'       reduce using rule 172 (OperandName)
    '&'       reduce using rule 172 (OperandName)
    $default  reduce using rule 5 (TypeName)


state 352

   79 ChannelType: CHANNELOP . CHAN Type
  185 unary_op: CHANNELOP .

    CHAN  shift, and go to state 131

    $default  reduce using rule 185 (unary_op)


state 353

    3 Type: '(' . Type ')'
  171 Operand: '(' . Expression ')'

    FUNC            shift, and go to state 56
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 351
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 352
    '('             shift, and go to state 353
    '['             shift, and go to state 76
    '*'             shift, and go to state 355
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Type            go to state 132
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    Expression      go to state 247
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 354

  156 Arguments: '(' ')' .

    $default  reduce using rule 156 (Arguments)


state 355

   42 PointerType: '*' . Type
  183 unary_op: '*' .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    IDENTIFIER  [reduce using rule 183 (unary_op)]
    CHANNELOP   [reduce using rule 183 (unary_op)]
    '('         [reduce using rule 183 (unary_op)]
    '*'         [reduce using rule 183 (unary_op)]
    $default    reduce using rule 183 (unary_op)

    Type            go to state 156
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 356

   72 TypeElem: Type . TypeElem
  161 ArgumentsLoop: Type . ARGS ','
  162              | Type . ARGS
  163              | Type . ','
  164              | Type .
  165              | Type . ',' ExpressionList ARGS ','
  166              | Type . ',' ExpressionList ARGS
  167              | Type . ',' ExpressionList ','
  168              | Type . ',' ExpressionList

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 404
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 405
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 164 (ArgumentsLoop)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 357

  102 ExpressionList: ExpressionList . ',' Expression
  157 ArgumentsLoop: ExpressionList . ARGS ','
  158              | ExpressionList . ARGS
  159              | ExpressionList . ','
  160              | ExpressionList .

    ARGS  shift, and go to state 406
    ','   shift, and go to state 407

    $default  reduce using rule 160 (ArgumentsLoop)


state 358

  155 Arguments: '(' ArgumentsLoop . ')'

    ')'  shift, and go to state 408


state 359

  150 Slice: '[' COLON . Expression ']'
  151      | '[' COLON . ']'
  153      | '[' COLON . Expression COLON Expression ']'

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    ']'             shift, and go to state 409
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 410
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 360

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  147 Index: '[' Expression . ']'
  148 Slice: '[' Expression . COLON Expression ']'
  149      | '[' Expression . COLON ']'
  152      | '[' Expression . COLON Expression COLON Expression ']'

    COLON    shift, and go to state 411
    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    ']'      shift, and go to state 412
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261


state 361

  146 Selector: '.' IDENTIFIER .

    $default  reduce using rule 146 (Selector)


state 362

  154 TypeAssertion: '.' '(' . Type ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 413
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 363

    7 TypeList: TypeList ',' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 414
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 364

    9 TypeArgs: '[' TypeList ']' .

    $default  reduce using rule 9 (TypeArgs)


state 365

  102 ExpressionList: ExpressionList ',' Expression .
  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 102 (ExpressionList)


state 366

  264 CommCase: DEFAULT .

    $default  reduce using rule 264 (CommCase)


state 367

  263 CommCase: CASE . RecvStmt

    IDENTIFIER      shift, and go to state 177
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    IdentifierList  go to state 415
    ExpressionList  go to state 416
    Expression      go to state 417
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155
    RecvStmt        go to state 418
    RecvExpr        go to state 419


state 368

  260 CommClauseLoop: CommClause . CommClauseLoop

    DEFAULT  shift, and go to state 366
    CASE     shift, and go to state 367

    COLON     reduce using rule 262 (CommCase)
    $default  reduce using rule 261 (CommClauseLoop)

    CommClause      go to state 368
    CommClauseLoop  go to state 420
    CommCase        go to state 370


state 369

  258 SelectStmt: SELECT '{' CommClauseLoop . '}'

    '}'  shift, and go to state 421


state 370

  259 CommClause: CommCase . COLON StatementList

    COLON  shift, and go to state 422


state 371

  251 IdetifierGodefBrakets: IDENTIFIER GODEF .

    $default  reduce using rule 251 (IdetifierGodefBrakets)


state 372

  240 SimpleStmtBrakets: SimpleStmt SEMICOLON .

    $default  reduce using rule 240 (SimpleStmtBrakets)


state 373

  172 OperandName: IDENTIFIER .
  251 IdetifierGodefBrakets: IDENTIFIER . GODEF

    GODEF  shift, and go to state 371

    $default  reduce using rule 172 (OperandName)


state 374

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  241 ExpressionBrakets: Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 241 (ExpressionBrakets)


state 375

  236 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets . '{' ExprCaseClauseLoop '}'
  237               | SWITCH SimpleStmtBrakets ExpressionBrakets . '{' '}'

    '{'  shift, and go to state 423


state 376

  248 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard . '{' TypeCaseClauseLoop '}'

    '{'  shift, and go to state 424


state 377

  238 ExprSwitchStmt: SWITCH ExpressionBrakets '{' . ExprCaseClauseLoop '}'
  239               | SWITCH ExpressionBrakets '{' . '}'

    DEFAULT  shift, and go to state 425
    CASE     shift, and go to state 426
    '}'      shift, and go to state 427

    ExprCaseClause      go to state 428
    ExprCaseClauseLoop  go to state 429
    ExprSwitchCase      go to state 430


state 378

  249 TypeSwitchStmt: SWITCH TypeSwitchGuard '{' . TypeCaseClauseLoop '}'

    DEFAULT  shift, and go to state 431
    CASE     shift, and go to state 432

    $default  reduce using rule 255 (TypeCaseClauseLoop)

    TypeCaseClause      go to state 433
    TypeCaseClauseLoop  go to state 434
    TypeSwitchCase      go to state 435


state 379

  141 PrimaryExpr: PrimaryExpr . Selector
  142            | PrimaryExpr . Index
  143            | PrimaryExpr . Slice
  144            | PrimaryExpr . TypeAssertion
  145            | PrimaryExpr . Arguments
  250 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr . '.' '(' TYPE ')'

    '('  shift, and go to state 262
    '['  shift, and go to state 263
    '.'  shift, and go to state 436

    Selector       go to state 265
    Index          go to state 266
    Slice          go to state 267
    TypeAssertion  go to state 268
    Arguments      go to state 269


state 380

  231 IfStmt: IF Expression Block . ELSE IfStmt
  232       | IF Expression Block . ELSE Block
  233       | IF Expression Block .

    ELSE  shift, and go to state 437

    $default  reduce using rule 233 (IfStmt)


state 381

  228 IfStmt: IF SimpleStmt SEMICOLON . Expression Block ELSE IfStmt
  229       | IF SimpleStmt SEMICOLON . Expression Block ELSE Block
  230       | IF SimpleStmt SEMICOLON . Expression Block

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 438
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 382

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  284 RangeClause: RANGE Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 284 (RangeClause)


state 383

  118 ShortVarDecl: IdentifierList GODEF . ExpressionList
  283 RangeClause: IdentifierList GODEF . RANGE Expression

    RANGE           shift, and go to state 439
    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    ExpressionList  go to state 388
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 384

  214 assign_op: '=' .
  282 RangeClause: ExpressionList '=' . RANGE Expression

    RANGE  shift, and go to state 440

    $default  reduce using rule 214 (assign_op)


state 385

  269 ForStmt: FOR ForClauseBracket Block .

    $default  reduce using rule 269 (ForStmt)


state 386

  275 ForClause: InitStmtBracket SEMICOLON . ConditionBracket SEMICOLON PostStmtBracket

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 279 (ConditionBracket)

    Expression        go to state 441
    UnaryExpr         go to state 149
    PrimaryExpr       go to state 150
    Operand           go to state 151
    OperandName       go to state 152
    Literal           go to state 153
    BasicLit          go to state 154
    unary_op          go to state 155
    Condition         go to state 442
    ConditionBracket  go to state 443


state 387

  201 LabeledStmt: IDENTIFIER COLON Statement .

    $default  reduce using rule 201 (LabeledStmt)


state 388

  102 ExpressionList: ExpressionList . ',' Expression
  118 ShortVarDecl: IdentifierList GODEF ExpressionList .

    ','  shift, and go to state 280

    $default  reduce using rule 118 (ShortVarDecl)


state 389

  102 ExpressionList: ExpressionList . ',' Expression
  212 Assignment: ExpressionList assign_op ExpressionList .

    ','  shift, and go to state 280

    $default  reduce using rule 212 (Assignment)


state 390

  226 StatementList: Statement SEMICOLON StatementList .

    $default  reduce using rule 226 (StatementList)


state 391

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  209 SendStmt: Channel CHANNELOP Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 209 (SendStmt)


state 392

   72 TypeElem: Type . TypeElem
   76 MapType: MAP '[' Type ']' Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 76 (MapType)]
    INTERFACE   [reduce using rule 76 (MapType)]
    CHAN        [reduce using rule 76 (MapType)]
    MAP         [reduce using rule 76 (MapType)]
    STRUCT      [reduce using rule 76 (MapType)]
    ANY         [reduce using rule 76 (MapType)]
    BOOL        [reduce using rule 76 (MapType)]
    BYTE        [reduce using rule 76 (MapType)]
    COMPARABLE  [reduce using rule 76 (MapType)]
    INT         [reduce using rule 76 (MapType)]
    COMPLEX     [reduce using rule 76 (MapType)]
    ERROR       [reduce using rule 76 (MapType)]
    FLOAT       [reduce using rule 76 (MapType)]
    STRING      [reduce using rule 76 (MapType)]
    RUNE        [reduce using rule 76 (MapType)]
    IDENTIFIER  [reduce using rule 76 (MapType)]
    CHANNELOP   [reduce using rule 76 (MapType)]
    '('         [reduce using rule 76 (MapType)]
    '['         [reduce using rule 76 (MapType)]
    '*'         [reduce using rule 76 (MapType)]
    '~'         [reduce using rule 76 (MapType)]
    '|'         [reduce using rule 76 (MapType)]
    $default    reduce using rule 76 (MapType)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 393

   41 EmbeddedField: '*' TypeName TypeArgs .

    $default  reduce using rule 41 (EmbeddedField)


state 394

   32 StructTypeLoop: FieldDecl SEMICOLON ';' . StructTypeLoop

    IDENTIFIER  shift, and go to state 235
    '*'         shift, and go to state 236

    TypeName        go to state 237
    QualifiedIdent  go to state 83
    StructTypeLoop  go to state 444
    FieldDecl       go to state 239
    EmbeddedField   go to state 240
    IdentifierList  go to state 241


state 395

   35 FieldDecl: IdentifierList Type StringValue .

    $default  reduce using rule 35 (FieldDecl)


state 396

   59 InterfaceType: IDENTIFIER '(' ')' '(' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 445


state 397

    3 Type: '(' Type . ')'
   51 ParameterDecl: Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 246
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    ')'       [reduce using rule 51 (ParameterDecl)]
    $default  reduce using rule 51 (ParameterDecl)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 398

   62 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList . ')' SEMICOLON
   65              | IDENTIFIER '(' ')' '(' ParameterList . ',' ')' SEMICOLON

    ')'  shift, and go to state 446
    ','  shift, and go to state 447


state 399

   68 InterfaceType: IDENTIFIER '(' ')' Type SEMICOLON .

    $default  reduce using rule 68 (InterfaceType)


state 400

   57 InterfaceType: IDENTIFIER '(' ParameterList ')' SEMICOLON .

    $default  reduce using rule 57 (InterfaceType)


state 401

    3 Type: '(' . Type ')'
   60 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' . ')' SEMICOLON
   63              | IDENTIFIER '(' ParameterList ')' '(' . ParameterList ')' SEMICOLON
   66              | IDENTIFIER '(' ParameterList ')' '(' . ParameterList ',' ')' SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 448
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 397
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterList   go to state 449
    ParameterDecl   go to state 90
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 402

   69 InterfaceType: IDENTIFIER '(' ParameterList ')' Type . SEMICOLON
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 450
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 403

   58 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' . SEMICOLON
   61              | IDENTIFIER '(' ParameterList ',' ')' . '(' ')' SEMICOLON
   64              | IDENTIFIER '(' ParameterList ',' ')' . '(' ParameterList ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList ',' ')' . '(' ParameterList ',' ')' SEMICOLON
   70              | IDENTIFIER '(' ParameterList ',' ')' . Type SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 451
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 452
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 453
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 404

  161 ArgumentsLoop: Type ARGS . ','
  162              | Type ARGS .

    ','  shift, and go to state 454

    $default  reduce using rule 162 (ArgumentsLoop)


state 405

  163 ArgumentsLoop: Type ',' .
  165              | Type ',' . ExpressionList ARGS ','
  166              | Type ',' . ExpressionList ARGS
  167              | Type ',' . ExpressionList ','
  168              | Type ',' . ExpressionList

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 163 (ArgumentsLoop)

    ExpressionList  go to state 455
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 406

  157 ArgumentsLoop: ExpressionList ARGS . ','
  158              | ExpressionList ARGS .

    ','  shift, and go to state 456

    $default  reduce using rule 158 (ArgumentsLoop)


state 407

  102 ExpressionList: ExpressionList ',' . Expression
  159 ArgumentsLoop: ExpressionList ',' .

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 159 (ArgumentsLoop)

    Expression   go to state 365
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 408

  155 Arguments: '(' ArgumentsLoop ')' .

    $default  reduce using rule 155 (Arguments)


state 409

  151 Slice: '[' COLON ']' .

    $default  reduce using rule 151 (Slice)


state 410

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  150 Slice: '[' COLON Expression . ']'
  153      | '[' COLON Expression . COLON Expression ']'

    COLON    shift, and go to state 457
    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    ']'      shift, and go to state 458
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261


state 411

  148 Slice: '[' Expression COLON . Expression ']'
  149      | '[' Expression COLON . ']'
  152      | '[' Expression COLON . Expression COLON Expression ']'

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    ']'             shift, and go to state 459
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 460
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 412

  147 Index: '[' Expression ']' .

    $default  reduce using rule 147 (Index)


state 413

   72 TypeElem: Type . TypeElem
  154 TypeAssertion: '.' '(' Type . ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 461
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 414

    7 TypeList: TypeList ',' Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 7 (TypeList)

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 415

  100 IdentifierList: IdentifierList . ',' IDENTIFIER
  266 RecvStmt: IdentifierList . GODEF RecvExpr

    GODEF  shift, and go to state 462
    ','    shift, and go to state 100


state 416

  102 ExpressionList: ExpressionList . ',' Expression
  265 RecvStmt: ExpressionList . '=' RecvExpr

    ','  shift, and go to state 280
    '='  shift, and go to state 463


state 417

  103 ExpressionList: Expression .
  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  268 RecvExpr: Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    COLON     reduce using rule 268 (RecvExpr)
    $default  reduce using rule 103 (ExpressionList)


state 418

  263 CommCase: CASE RecvStmt .

    $default  reduce using rule 263 (CommCase)


state 419

  267 RecvStmt: RecvExpr .

    $default  reduce using rule 267 (RecvStmt)


state 420

  260 CommClauseLoop: CommClause CommClauseLoop .

    $default  reduce using rule 260 (CommClauseLoop)


state 421

  258 SelectStmt: SELECT '{' CommClauseLoop '}' .

    $default  reduce using rule 258 (SelectStmt)


state 422

  259 CommClause: CommCase COLON . StatementList

    BREAK           shift, and go to state 189
    SELECT          shift, and go to state 190
    SWITCH          shift, and go to state 191
    FALLTHROUGH     shift, and go to state 192
    IF              shift, and go to state 193
    GOTO            shift, and go to state 194
    FOR             shift, and go to state 195
    CONTINUE        shift, and go to state 196
    DEFER           shift, and go to state 197
    RETURN          shift, and go to state 198
    GO              shift, and go to state 199
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    IDENTIFIER      shift, and go to state 200
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '{'             shift, and go to state 118
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 202 (SimpleStmt)

    Declaration      go to state 202
    VarDecl          go to state 22
    ConstDecl        go to state 23
    IdentifierList   go to state 203
    ExpressionList   go to state 204
    TypeDecl         go to state 24
    ShortVarDecl     go to state 205
    Expression       go to state 206
    UnaryExpr        go to state 149
    PrimaryExpr      go to state 150
    Operand          go to state 151
    OperandName      go to state 152
    Literal          go to state 153
    BasicLit         go to state 154
    unary_op         go to state 155
    Statement        go to state 207
    LabeledStmt      go to state 208
    SimpleStmt       go to state 209
    ExpressionStmt   go to state 210
    SendStmt         go to state 211
    Channel          go to state 212
    IncDecStmt       go to state 213
    Assignment       go to state 214
    GoStmt           go to state 215
    ReturnStmt       go to state 216
    BreakStmt        go to state 217
    ContinueStmt     go to state 218
    GotoStmt         go to state 219
    FallthroughStmt  go to state 220
    Block            go to state 221
    StatementList    go to state 464
    IfStmt           go to state 223
    SwitchStmt       go to state 224
    ExprSwitchStmt   go to state 225
    TypeSwitchStmt   go to state 226
    SelectStmt       go to state 227
    ForStmt          go to state 228
    DeferStmt        go to state 229


state 423

  236 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets '{' . ExprCaseClauseLoop '}'
  237               | SWITCH SimpleStmtBrakets ExpressionBrakets '{' . '}'

    DEFAULT  shift, and go to state 425
    CASE     shift, and go to state 426
    '}'      shift, and go to state 465

    ExprCaseClause      go to state 428
    ExprCaseClauseLoop  go to state 466
    ExprSwitchCase      go to state 430


state 424

  248 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard '{' . TypeCaseClauseLoop '}'

    DEFAULT  shift, and go to state 431
    CASE     shift, and go to state 432

    $default  reduce using rule 255 (TypeCaseClauseLoop)

    TypeCaseClause      go to state 433
    TypeCaseClauseLoop  go to state 467
    TypeSwitchCase      go to state 435


state 425

  247 ExprSwitchCase: DEFAULT .

    $default  reduce using rule 247 (ExprSwitchCase)


state 426

  246 ExprSwitchCase: CASE . ExpressionList

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    ExpressionList  go to state 468
    Expression      go to state 175
    UnaryExpr       go to state 149
    PrimaryExpr     go to state 150
    Operand         go to state 151
    OperandName     go to state 152
    Literal         go to state 153
    BasicLit        go to state 154
    unary_op        go to state 155


state 427

  239 ExprSwitchStmt: SWITCH ExpressionBrakets '{' '}' .

    $default  reduce using rule 239 (ExprSwitchStmt)


state 428

  244 ExprCaseClauseLoop: ExprCaseClause . ExprCaseClauseLoop
  245                   | ExprCaseClause .

    DEFAULT  shift, and go to state 425
    CASE     shift, and go to state 426

    $default  reduce using rule 245 (ExprCaseClauseLoop)

    ExprCaseClause      go to state 428
    ExprCaseClauseLoop  go to state 469
    ExprSwitchCase      go to state 430


state 429

  238 ExprSwitchStmt: SWITCH ExpressionBrakets '{' ExprCaseClauseLoop . '}'

    '}'  shift, and go to state 470


state 430

  243 ExprCaseClause: ExprSwitchCase . COLON StatementList

    COLON  shift, and go to state 471


state 431

  257 TypeSwitchCase: DEFAULT .

    $default  reduce using rule 257 (TypeSwitchCase)


state 432

  256 TypeSwitchCase: CASE . TypeList

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 273
    TypeName        go to state 81
    TypeList        go to state 472
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 433

  254 TypeCaseClauseLoop: TypeCaseClause . TypeCaseClauseLoop

    DEFAULT  shift, and go to state 431
    CASE     shift, and go to state 432

    $default  reduce using rule 255 (TypeCaseClauseLoop)

    TypeCaseClause      go to state 433
    TypeCaseClauseLoop  go to state 473
    TypeSwitchCase      go to state 435


state 434

  249 TypeSwitchStmt: SWITCH TypeSwitchGuard '{' TypeCaseClauseLoop . '}'

    '}'  shift, and go to state 474


state 435

  253 TypeCaseClause: TypeSwitchCase . COLON StatementList

    COLON  shift, and go to state 475


state 436

  146 Selector: '.' . IDENTIFIER
  154 TypeAssertion: '.' . '(' Type ')'
  250 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' . '(' TYPE ')'

    IDENTIFIER  shift, and go to state 361
    '('         shift, and go to state 476


state 437

  231 IfStmt: IF Expression Block ELSE . IfStmt
  232       | IF Expression Block ELSE . Block

    IF   shift, and go to state 193
    '{'  shift, and go to state 118

    Block   go to state 477
    IfStmt  go to state 478


state 438

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  228 IfStmt: IF SimpleStmt SEMICOLON Expression . Block ELSE IfStmt
  229       | IF SimpleStmt SEMICOLON Expression . Block ELSE Block
  230       | IF SimpleStmt SEMICOLON Expression . Block

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '{'      shift, and go to state 118
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    Block  go to state 479


state 439

  283 RangeClause: IdentifierList GODEF RANGE . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 480
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 440

  282 RangeClause: ExpressionList '=' RANGE . Expression

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 481
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 441

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  274 Condition: Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 274 (Condition)


state 442

  278 ConditionBracket: Condition .

    $default  reduce using rule 278 (ConditionBracket)


state 443

  275 ForClause: InitStmtBracket SEMICOLON ConditionBracket . SEMICOLON PostStmtBracket

    SEMICOLON  shift, and go to state 482


state 444

   32 StructTypeLoop: FieldDecl SEMICOLON ';' StructTypeLoop .

    $default  reduce using rule 32 (StructTypeLoop)


state 445

   59 InterfaceType: IDENTIFIER '(' ')' '(' ')' SEMICOLON .

    $default  reduce using rule 59 (InterfaceType)


state 446

   62 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList ')' . SEMICOLON

    SEMICOLON  shift, and go to state 483


state 447

   65 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList ',' . ')' SEMICOLON

    ')'  shift, and go to state 484


state 448

   60 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 485


state 449

   63 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList . ')' SEMICOLON
   66              | IDENTIFIER '(' ParameterList ')' '(' ParameterList . ',' ')' SEMICOLON

    ')'  shift, and go to state 486
    ','  shift, and go to state 487


state 450

   69 InterfaceType: IDENTIFIER '(' ParameterList ')' Type SEMICOLON .

    $default  reduce using rule 69 (InterfaceType)


state 451

   58 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' SEMICOLON .

    $default  reduce using rule 58 (InterfaceType)


state 452

    3 Type: '(' . Type ')'
   61 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' . ')' SEMICOLON
   64              | IDENTIFIER '(' ParameterList ',' ')' '(' . ParameterList ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList ',' ')' '(' . ParameterList ',' ')' SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 488
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 397
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterList   go to state 489
    ParameterDecl   go to state 90
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 453

   70 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' Type . SEMICOLON
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 490
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 160
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 161
    MapType         go to state 93
    ChannelType     go to state 94


state 454

  161 ArgumentsLoop: Type ARGS ',' .

    $default  reduce using rule 161 (ArgumentsLoop)


state 455

  102 ExpressionList: ExpressionList . ',' Expression
  165 ArgumentsLoop: Type ',' ExpressionList . ARGS ','
  166              | Type ',' ExpressionList . ARGS
  167              | Type ',' ExpressionList . ','
  168              | Type ',' ExpressionList .

    ARGS  shift, and go to state 491
    ','   shift, and go to state 492

    $default  reduce using rule 168 (ArgumentsLoop)


state 456

  157 ArgumentsLoop: ExpressionList ARGS ',' .

    $default  reduce using rule 157 (ArgumentsLoop)


state 457

  153 Slice: '[' COLON Expression COLON . Expression ']'

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 493
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 458

  150 Slice: '[' COLON Expression ']' .

    $default  reduce using rule 150 (Slice)


state 459

  149 Slice: '[' Expression COLON ']' .

    $default  reduce using rule 149 (Slice)


state 460

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  148 Slice: '[' Expression COLON Expression . ']'
  152      | '[' Expression COLON Expression . COLON Expression ']'

    COLON    shift, and go to state 494
    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    ']'      shift, and go to state 495
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261


state 461

  154 TypeAssertion: '.' '(' Type ')' .

    $default  reduce using rule 154 (TypeAssertion)


state 462

  266 RecvStmt: IdentifierList GODEF . RecvExpr

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 496
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155
    RecvExpr     go to state 497


state 463

  265 RecvStmt: ExpressionList '=' . RecvExpr

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 496
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155
    RecvExpr     go to state 498


state 464

  259 CommClause: CommCase COLON StatementList .

    $default  reduce using rule 259 (CommClause)


state 465

  237 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets '{' '}' .

    $default  reduce using rule 237 (ExprSwitchStmt)


state 466

  236 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets '{' ExprCaseClauseLoop . '}'

    '}'  shift, and go to state 499


state 467

  248 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard '{' TypeCaseClauseLoop . '}'

    '}'  shift, and go to state 500


state 468

  102 ExpressionList: ExpressionList . ',' Expression
  246 ExprSwitchCase: CASE ExpressionList .

    ','  shift, and go to state 280

    $default  reduce using rule 246 (ExprSwitchCase)


state 469

  244 ExprCaseClauseLoop: ExprCaseClause ExprCaseClauseLoop .

    $default  reduce using rule 244 (ExprCaseClauseLoop)


state 470

  238 ExprSwitchStmt: SWITCH ExpressionBrakets '{' ExprCaseClauseLoop '}' .

    $default  reduce using rule 238 (ExprSwitchStmt)


state 471

  243 ExprCaseClause: ExprSwitchCase COLON . StatementList

    BREAK           shift, and go to state 189
    SELECT          shift, and go to state 190
    SWITCH          shift, and go to state 191
    FALLTHROUGH     shift, and go to state 192
    IF              shift, and go to state 193
    GOTO            shift, and go to state 194
    FOR             shift, and go to state 195
    CONTINUE        shift, and go to state 196
    DEFER           shift, and go to state 197
    RETURN          shift, and go to state 198
    GO              shift, and go to state 199
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    IDENTIFIER      shift, and go to state 200
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '{'             shift, and go to state 118
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 202 (SimpleStmt)

    Declaration      go to state 202
    VarDecl          go to state 22
    ConstDecl        go to state 23
    IdentifierList   go to state 203
    ExpressionList   go to state 204
    TypeDecl         go to state 24
    ShortVarDecl     go to state 205
    Expression       go to state 206
    UnaryExpr        go to state 149
    PrimaryExpr      go to state 150
    Operand          go to state 151
    OperandName      go to state 152
    Literal          go to state 153
    BasicLit         go to state 154
    unary_op         go to state 155
    Statement        go to state 207
    LabeledStmt      go to state 208
    SimpleStmt       go to state 209
    ExpressionStmt   go to state 210
    SendStmt         go to state 211
    Channel          go to state 212
    IncDecStmt       go to state 213
    Assignment       go to state 214
    GoStmt           go to state 215
    ReturnStmt       go to state 216
    BreakStmt        go to state 217
    ContinueStmt     go to state 218
    GotoStmt         go to state 219
    FallthroughStmt  go to state 220
    Block            go to state 221
    StatementList    go to state 501
    IfStmt           go to state 223
    SwitchStmt       go to state 224
    ExprSwitchStmt   go to state 225
    TypeSwitchStmt   go to state 226
    SelectStmt       go to state 227
    ForStmt          go to state 228
    DeferStmt        go to state 229


state 472

    7 TypeList: TypeList . ',' Type
  256 TypeSwitchCase: CASE TypeList .

    ','  shift, and go to state 363

    $default  reduce using rule 256 (TypeSwitchCase)


state 473

  254 TypeCaseClauseLoop: TypeCaseClause TypeCaseClauseLoop .

    $default  reduce using rule 254 (TypeCaseClauseLoop)


state 474

  249 TypeSwitchStmt: SWITCH TypeSwitchGuard '{' TypeCaseClauseLoop '}' .

    $default  reduce using rule 249 (TypeSwitchStmt)


state 475

  253 TypeCaseClause: TypeSwitchCase COLON . StatementList

    BREAK           shift, and go to state 189
    SELECT          shift, and go to state 190
    SWITCH          shift, and go to state 191
    FALLTHROUGH     shift, and go to state 192
    IF              shift, and go to state 193
    GOTO            shift, and go to state 194
    FOR             shift, and go to state 195
    CONTINUE        shift, and go to state 196
    DEFER           shift, and go to state 197
    RETURN          shift, and go to state 198
    GO              shift, and go to state 199
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    IDENTIFIER      shift, and go to state 200
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '{'             shift, and go to state 118
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 202 (SimpleStmt)

    Declaration      go to state 202
    VarDecl          go to state 22
    ConstDecl        go to state 23
    IdentifierList   go to state 203
    ExpressionList   go to state 204
    TypeDecl         go to state 24
    ShortVarDecl     go to state 205
    Expression       go to state 206
    UnaryExpr        go to state 149
    PrimaryExpr      go to state 150
    Operand          go to state 151
    OperandName      go to state 152
    Literal          go to state 153
    BasicLit         go to state 154
    unary_op         go to state 155
    Statement        go to state 207
    LabeledStmt      go to state 208
    SimpleStmt       go to state 209
    ExpressionStmt   go to state 210
    SendStmt         go to state 211
    Channel          go to state 212
    IncDecStmt       go to state 213
    Assignment       go to state 214
    GoStmt           go to state 215
    ReturnStmt       go to state 216
    BreakStmt        go to state 217
    ContinueStmt     go to state 218
    GotoStmt         go to state 219
    FallthroughStmt  go to state 220
    Block            go to state 221
    StatementList    go to state 502
    IfStmt           go to state 223
    SwitchStmt       go to state 224
    ExprSwitchStmt   go to state 225
    TypeSwitchStmt   go to state 226
    SelectStmt       go to state 227
    ForStmt          go to state 228
    DeferStmt        go to state 229


state 476

  154 TypeAssertion: '.' '(' . Type ')'
  250 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' '(' . TYPE ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    TYPE        shift, and go to state 503
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 413
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 477

  232 IfStmt: IF Expression Block ELSE Block .

    $default  reduce using rule 232 (IfStmt)


state 478

  231 IfStmt: IF Expression Block ELSE IfStmt .

    $default  reduce using rule 231 (IfStmt)


state 479

  228 IfStmt: IF SimpleStmt SEMICOLON Expression Block . ELSE IfStmt
  229       | IF SimpleStmt SEMICOLON Expression Block . ELSE Block
  230       | IF SimpleStmt SEMICOLON Expression Block .

    ELSE  shift, and go to state 504

    $default  reduce using rule 230 (IfStmt)


state 480

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  283 RangeClause: IdentifierList GODEF RANGE Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 283 (RangeClause)


state 481

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  282 RangeClause: ExpressionList '=' RANGE Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 282 (RangeClause)


state 482

  275 ForClause: InitStmtBracket SEMICOLON ConditionBracket SEMICOLON . PostStmtBracket

    IDENTIFIER      shift, and go to state 177
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 202 (SimpleStmt)

    IdentifierList   go to state 203
    ExpressionList   go to state 204
    ShortVarDecl     go to state 205
    Expression       go to state 206
    UnaryExpr        go to state 149
    PrimaryExpr      go to state 150
    Operand          go to state 151
    OperandName      go to state 152
    Literal          go to state 153
    BasicLit         go to state 154
    unary_op         go to state 155
    SimpleStmt       go to state 505
    ExpressionStmt   go to state 210
    SendStmt         go to state 211
    Channel          go to state 212
    IncDecStmt       go to state 213
    Assignment       go to state 214
    PostStmt         go to state 506
    PostStmtBracket  go to state 507


state 483

   62 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList ')' SEMICOLON .

    $default  reduce using rule 62 (InterfaceType)


state 484

   65 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList ',' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 508


state 485

   60 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ')' SEMICOLON .

    $default  reduce using rule 60 (InterfaceType)


state 486

   63 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList ')' . SEMICOLON

    SEMICOLON  shift, and go to state 509


state 487

   66 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList ',' . ')' SEMICOLON

    ')'  shift, and go to state 510


state 488

   61 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 511


state 489

   64 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList . ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList . ',' ')' SEMICOLON

    ')'  shift, and go to state 512
    ','  shift, and go to state 513


state 490

   70 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' Type SEMICOLON .

    $default  reduce using rule 70 (InterfaceType)


state 491

  165 ArgumentsLoop: Type ',' ExpressionList ARGS . ','
  166              | Type ',' ExpressionList ARGS .

    ','  shift, and go to state 514

    $default  reduce using rule 166 (ArgumentsLoop)


state 492

  102 ExpressionList: ExpressionList ',' . Expression
  167 ArgumentsLoop: Type ',' ExpressionList ',' .

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    $default  reduce using rule 167 (ArgumentsLoop)

    Expression   go to state 365
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 493

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  153 Slice: '[' COLON Expression COLON Expression . ']'

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    ']'      shift, and go to state 515
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261


state 494

  152 Slice: '[' Expression COLON Expression COLON . Expression ']'

    IDENTIFIER      shift, and go to state 133
    IntegerValue    shift, and go to state 134
    FloatValue      shift, and go to state 135
    StringValue     shift, and go to state 136
    ImaginaryValue  shift, and go to state 137
    BooleanValue    shift, and go to state 138
    CHANNELOP       shift, and go to state 139
    '('             shift, and go to state 140
    '*'             shift, and go to state 142
    '+'             shift, and go to state 143
    '-'             shift, and go to state 144
    '^'             shift, and go to state 145
    '&'             shift, and go to state 146
    '!'             shift, and go to state 147

    Expression   go to state 516
    UnaryExpr    go to state 149
    PrimaryExpr  go to state 150
    Operand      go to state 151
    OperandName  go to state 152
    Literal      go to state 153
    BasicLit     go to state 154
    unary_op     go to state 155


state 495

  148 Slice: '[' Expression COLON Expression ']' .

    $default  reduce using rule 148 (Slice)


state 496

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  268 RecvExpr: Expression .

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261

    $default  reduce using rule 268 (RecvExpr)


state 497

  266 RecvStmt: IdentifierList GODEF RecvExpr .

    $default  reduce using rule 266 (RecvStmt)


state 498

  265 RecvStmt: ExpressionList '=' RecvExpr .

    $default  reduce using rule 265 (RecvStmt)


state 499

  236 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets '{' ExprCaseClauseLoop '}' .

    $default  reduce using rule 236 (ExprSwitchStmt)


state 500

  248 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard '{' TypeCaseClauseLoop '}' .

    $default  reduce using rule 248 (TypeSwitchStmt)


state 501

  243 ExprCaseClause: ExprSwitchCase COLON StatementList .

    $default  reduce using rule 243 (ExprCaseClause)


state 502

  253 TypeCaseClause: TypeSwitchCase COLON StatementList .

    $default  reduce using rule 253 (TypeCaseClause)


state 503

  250 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' '(' TYPE . ')'

    ')'  shift, and go to state 517


state 504

  228 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE . IfStmt
  229       | IF SimpleStmt SEMICOLON Expression Block ELSE . Block

    IF   shift, and go to state 193
    '{'  shift, and go to state 118

    Block   go to state 518
    IfStmt  go to state 519


state 505

  280 PostStmt: SimpleStmt .

    $default  reduce using rule 280 (PostStmt)


state 506

  281 PostStmtBracket: PostStmt .

    $default  reduce using rule 281 (PostStmtBracket)


state 507

  275 ForClause: InitStmtBracket SEMICOLON ConditionBracket SEMICOLON PostStmtBracket .

    $default  reduce using rule 275 (ForClause)


state 508

   65 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList ',' ')' SEMICOLON .

    $default  reduce using rule 65 (InterfaceType)


state 509

   63 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList ')' SEMICOLON .

    $default  reduce using rule 63 (InterfaceType)


state 510

   66 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList ',' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 520


state 511

   61 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ')' SEMICOLON .

    $default  reduce using rule 61 (InterfaceType)


state 512

   64 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ')' . SEMICOLON

    SEMICOLON  shift, and go to state 521


state 513

   67 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ',' . ')' SEMICOLON

    ')'  shift, and go to state 522


state 514

  165 ArgumentsLoop: Type ',' ExpressionList ARGS ',' .

    $default  reduce using rule 165 (ArgumentsLoop)


state 515

  153 Slice: '[' COLON Expression COLON Expression ']' .

    $default  reduce using rule 153 (Slice)


state 516

  126 Expression: Expression . AND Expression
  127           | Expression . OR Expression
  128           | Expression . COMPARE Expression
  129           | Expression . '+' Expression
  130           | Expression . '-' Expression
  131           | Expression . '|' Expression
  132           | Expression . '^' Expression
  133           | Expression . '*' Expression
  134           | Expression . '/' Expression
  135           | Expression . '%' Expression
  136           | Expression . LRSHIFT Expression
  137           | Expression . '&' Expression
  152 Slice: '[' Expression COLON Expression COLON Expression . ']'

    LRSHIFT  shift, and go to state 249
    AND      shift, and go to state 250
    OR       shift, and go to state 251
    COMPARE  shift, and go to state 252
    ']'      shift, and go to state 523
    '*'      shift, and go to state 254
    '|'      shift, and go to state 255
    '+'      shift, and go to state 256
    '-'      shift, and go to state 257
    '^'      shift, and go to state 258
    '/'      shift, and go to state 259
    '%'      shift, and go to state 260
    '&'      shift, and go to state 261


state 517

  250 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' '(' TYPE ')' .

    $default  reduce using rule 250 (TypeSwitchGuard)


state 518

  229 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE Block .

    $default  reduce using rule 229 (IfStmt)


state 519

  228 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt .

    $default  reduce using rule 228 (IfStmt)


state 520

   66 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON .

    $default  reduce using rule 66 (InterfaceType)


state 521

   64 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON .

    $default  reduce using rule 64 (InterfaceType)


state 522

   67 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ',' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 524


state 523

  152 Slice: '[' Expression COLON Expression COLON Expression ']' .

    $default  reduce using rule 152 (Slice)


state 524

   67 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON .

    $default  reduce using rule 67 (InterfaceType)
