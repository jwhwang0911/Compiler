Nonterminals useless in grammar

   Result


Terminals unused in grammar

   BooleanValue
   BIT_ASSIGN


Rules useless in grammar

  330 Result: Parameters
  331       | Type


Rules useless in parser due to conflicts

  281 IdetifierGodefBrakets: /* empty */

  307 InitStmtBracket: /* empty */


State 54 conflicts: 22 shift/reduce
State 72 conflicts: 1 shift/reduce, 23 reduce/reduce
State 81 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 99 conflicts: 2 shift/reduce
State 121 conflicts: 22 shift/reduce
State 127 conflicts: 22 shift/reduce
State 135 conflicts: 2 shift/reduce, 10 reduce/reduce
State 140 conflicts: 1 shift/reduce
State 144 conflicts: 22 shift/reduce
State 151 conflicts: 1 shift/reduce
State 152 conflicts: 10 reduce/reduce
State 163 conflicts: 1 shift/reduce
State 171 conflicts: 22 shift/reduce
State 176 conflicts: 1 shift/reduce
State 192 conflicts: 2 shift/reduce, 25 reduce/reduce
State 206 conflicts: 31 shift/reduce
State 210 conflicts: 1 reduce/reduce
State 215 conflicts: 2 shift/reduce, 7 reduce/reduce
State 248 conflicts: 22 shift/reduce
State 250 conflicts: 1 reduce/reduce
State 260 conflicts: 22 shift/reduce
State 266 conflicts: 22 shift/reduce
State 299 conflicts: 1 shift/reduce, 1 reduce/reduce
State 318 conflicts: 26 shift/reduce
State 347 conflicts: 22 shift/reduce, 32 reduce/reduce
State 365 conflicts: 2 shift/reduce, 6 reduce/reduce
State 381 conflicts: 22 shift/reduce
State 382 conflicts: 12 shift/reduce
State 392 conflicts: 2 shift/reduce, 6 reduce/reduce
State 409 conflicts: 22 shift/reduce
State 414 conflicts: 1 shift/reduce


Grammar

    0 $accept: SourceFile $end

    1 Type: TypeName
    2     | TypeName TypeArgs
    3     | '(' Type ')'
    4     | TypeLit

    5 TypeName: IDENTIFIER
    6         | QualifiedIdent

    7 TypeList: TypeList ',' Type
    8         | Type

    9 TypeArgs: '[' TypeList ']'

   10 TypeLit: ArrayType
   11        | StructType
   12        | PointerType
   13        | FunctionType
   14        | InterfaceType
   15        | SliceType
   16        | MapType
   17        | ChannelType
   18        | ANY
   19        | FLOAT
   20        | BOOL
   21        | BYTE
   22        | COMPARABLE
   23        | COMPLEX
   24        | ERROR
   25        | INT
   26        | RUNE
   27        | STRING

   28 QualifiedIdent: IDENTIFIER '.' IDENTIFIER

   29 ArrayType: '[' Expression ']' Type

   30 SliceType: '[' ']' Type

   31 StructType: STRUCT '{' StructTypeLoop '}'

   32 StructTypeLoop: FieldDecl SEMICOLON ';' StructTypeLoop
   33               | /* empty */

   34 FieldDecl: IdentifierList Type
   35          | IdentifierList Type StringValue
   36          | EmbeddedField
   37          | EmbeddedField StringValue

   38 EmbeddedField: TypeName
   39              | '*' TypeName
   40              | TypeName TypeArgs
   41              | '*' TypeName TypeArgs

   42 PointerType: '*' Type

   43 FunctionType: FUNC Signature

   44 Signature: Parameters
   45          | Parameters Type

   46 Parameters: '(' ')'
   47           | '(' ParameterList ')'
   48           | '(' ParameterList ',' ')'

   49 ParameterList: ParameterDecl
   50              | ParameterDecl ',' ParameterDecl

   51 ParameterDecl: Type
   52              | IdentifierList Type
   53              | ARGS Type
   54              | IdentifierList ARGS Type

   55 InterfaceType: INTERFACE '{' InterfaceType '}'
   56              | IDENTIFIER '(' ')' SEMICOLON
   57              | IDENTIFIER '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER '(' ')' Type SEMICOLON
   69              | IDENTIFIER '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER '(' ParameterList ',' ')' Type SEMICOLON
   71              | TypeElem SEMICOLON

   72 TypeElem: Type TypeElem
   73         | '~' Type TypeElem
   74         | '|' Type
   75         | '|' '~' Type

   76 MapType: MAP '[' Type ']' Type

   77 ChannelType: CHAN Type
   78            | CHAN CHANNELOP Type
   79            | CHANNELOP CHAN Type

   80 Declaration: ConstDecl
   81            | TypeDecl
   82            | VarDecl

   83 TopLevelDecl: Declaration
   84             | FunctionDecl
   85             | MethodDecl

   86 ConstDecl: CONST ConstSpec
   87          | CONST '(' ConstSpecLoop ')'

   88 ConstSpec: IdentifierList Type '=' ExpressionList
   89          | IdentifierList '=' ExpressionList
   90          | IdentifierList

   91 ConstSpecLoop: ConstSpec SEMICOLON ConstSpecLoop
   92              | /* empty */

   93 IdentifierList: IdentifierList ',' IDENTIFIER
   94               | IDENTIFIER

   95 ExpressionList: ExpressionList ',' Expression
   96               | Expression

   97 TypeDecl: TYPE TypeSpec
   98         | TYPE '(' TypeSpecLoop ')'

   99 TypeSpec: AliasDecl
  100         | TypeDef

  101 TypeSpecLoop: TypeSpec SEMICOLON TypeSpecLoop
  102             | /* empty */

  103 AliasDecl: IDENTIFIER '=' Type

  104 TypeDef: IDENTIFIER Type
  105        | IDENTIFIER TypeParameters Type

  106 TypeParameters: '[' TypeParamList ']'
  107               | '[' TypeParamList ',' ']'

  108 TypeParamList: TypeParamList ',' TypeParamDecl
  109              | TypeParamDecl

  110 TypeParamDecl: IdentifierList TypeElem

  111 VarDecl: VAR VarSpec
  112        | VAR '(' VarSpecLoop ')'

  113 VarSpec: IdentifierList Type '=' ExpressionList
  114        | IdentifierList Type
  115        | IdentifierList '=' ExpressionList

  116 VarSpecLoop: VarSpec SEMICOLON VarSpecLoop
  117            | /* empty */

  118 ShortVarDecl: IdentifierList GODEF ExpressionList

  119 FunctionDecl: FUNC IDENTIFIER TypeParameters Signature FunctionBody
  120             | FUNC IDENTIFIER Signature FunctionBody
  121             | FUNC IDENTIFIER TypeParameters Signature
  122             | FUNC IDENTIFIER Signature

  123 FunctionBody: Block

  124 MethodDecl: FUNC Parameters IDENTIFIER Signature FunctionBody
  125           | FUNC Parameters IDENTIFIER Signature

  126 Operand: Literal
  127        | OperandName TypeArgs
  128        | OperandName
  129        | '(' Expression ')'

  130 Literal: BasicLit
  131        | CompositeLit
  132        | FunctionLit

  133 BasicLit: IntegerValue
  134         | FloatValue
  135         | ImaginaryValue
  136         | StringValue

  137 CompositeLit: LiteralType LiteralValue

  138 LiteralType: StructType
  139            | ArrayType
  140            | '[' ARGS ']' Type
  141            | SliceType
  142            | MapType
  143            | TypeName
  144            | TypeName TypeArgs

  145 LiteralValue: '{' ElementList ',' '}'
  146             | '{' ElementList '}'
  147             | '{' '}'

  148 KeyedElement: Key ':' Element
  149             | Element

  150 ElementList: ElementList ',' KeyedElement
  151            | KeyedElement

  152 Key: IDENTIFIER
  153    | Expression
  154    | LiteralValue

  155 Element: Expression
  156        | LiteralValue

  157 FunctionLit: FUNC Signature FunctionBody

  158 OperandName: IDENTIFIER
  159            | QualifiedIdent

  160 PrimaryExpr: Operand
  161            | Conversion
  162            | MethodExpr
  163            | PrimaryExpr Selector
  164            | PrimaryExpr Index
  165            | PrimaryExpr Slice
  166            | PrimaryExpr TypeAssertion
  167            | PrimaryExpr Arguments

  168 Selector: '.' IDENTIFIER

  169 Index: '[' Expression ']'

  170 Slice: '[' ExpressionLoop COLON ExpressionLoop ']'
  171      | '[' ExpressionLoop COLON Expression COLON Expression ']'

  172 ExpressionLoop: Expression
  173               | /* empty */

  174 TypeAssertion: '.' '(' Type ')'

  175 Arguments: '(' ArgumentsLoop ')'

  176 ArgumentsLoop: ExpressionList ARGS ','
  177              | ExpressionList ARGS
  178              | ExpressionList ','
  179              | ExpressionList
  180              | Type ARGS ','
  181              | Type ARGS
  182              | Type ','
  183              | Type
  184              | Type ',' ExpressionList ARGS ','
  185              | Type ',' ExpressionList ARGS
  186              | Type ',' ExpressionList ','
  187              | Type ',' ExpressionList
  188              | /* empty */

  189 MethodExpr: ParametersType '.' IDENTIFIER

  190 ParametersType: Type

  191 Expression: UnaryExpr
  192           | Expression binary_op Expression

  193 UnaryExpr: PrimaryExpr
  194          | unary_op UnaryExpr

  195 binary_op: AND
  196          | OR
  197          | rel_op
  198          | add_op
  199          | mul_op

  200 rel_op: COMPARE

  201 add_op: '+'
  202       | '-'
  203       | '|'
  204       | '^'

  205 mul_op: '*'
  206       | '/'
  207       | '%'
  208       | LRSHIFT
  209       | '&'

  210 unary_op: '+'
  211         | '-'
  212         | '!'
  213         | '^'
  214         | '*'
  215         | '&'
  216         | CHANNELOP

  217 Conversion: Type '(' Expression ',' ')'
  218           | Type '(' Expression ')'

  219 Statement: Declaration
  220          | LabeledStmt
  221          | SimpleStmt
  222          | GoStmt
  223          | ReturnStmt
  224          | BreakStmt
  225          | ContinueStmt
  226          | GotoStmt
  227          | FallthroughStmt
  228          | Block
  229          | IfStmt
  230          | SwitchStmt
  231          | SelectStmt
  232          | ForStmt
  233          | DeferStmt

  234 LabeledStmt: IDENTIFIER COLON Statement

  235 SimpleStmt: EmptyStmt
  236           | ExpressionStmt
  237           | SendStmt
  238           | IncDecStmt
  239           | Assignment
  240           | ShortVarDecl

  241 EmptyStmt: /* empty */

  242 ExpressionStmt: Expression

  243 SendStmt: Channel CHANNELOP Expression

  244 Channel: Expression

  245 IncDecStmt: Expression INCRE_DECRE

  246 Assignment: ExpressionList assign_op ExpressionList

  247 assign_op: ARITH_ASSIGN
  248          | '='

  249 GoStmt: GO Expression

  250 ReturnStmt: RETURN ExpressionList
  251           | RETURN

  252 BreakStmt: BREAK IDENTIFIER
  253          | BREAK

  254 ContinueStmt: CONTINUE IDENTIFIER
  255             | CONTINUE

  256 GotoStmt: GOTO IDENTIFIER

  257 FallthroughStmt: FALLTHROUGH

  258 Block: '{' StatementList '}'

  259 StatementList: Statement SEMICOLON StatementList
  260              | /* empty */

  261 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt
  262       | IF SimpleStmt SEMICOLON Expression Block ELSE Block
  263       | IF Expression Block ELSE IfStmt
  264       | IF Expression Block ELSE Block
  265       | IF Expression Block

  266 SwitchStmt: ExprSwitchStmt
  267           | TypeSwitchStmt

  268 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets '{' ExprCaseClauseLoop '}'

  269 SimpleStmtBrakets: SimpleStmt SEMICOLON
  270                  | /* empty */

  271 ExpressionBrakets: Expression
  272                  | /* empty */

  273 ExprCaseClause: ExprSwitchCase COLON StatementList

  274 ExprCaseClauseLoop: ExprCaseClause ExprCaseClauseLoop
  275                   | /* empty */

  276 ExprSwitchCase: CASE ExpressionList
  277               | DEFAULT

  278 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard '{' TypeCaseClauseLoop '}'

  279 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' '(' Type ')'

  280 IdetifierGodefBrakets: IDENTIFIER GODEF
  281                      | /* empty */

  282 TypeCaseClause: TypeSwitchCase COLON StatementList

  283 TypeCaseClauseLoop: TypeCaseClause TypeCaseClauseLoop
  284                   | /* empty */

  285 TypeSwitchCase: CASE TypeList
  286               | DEFAULT

  287 SelectStmt: SELECT '{' CommClauseLoop '}'

  288 CommClause: CommCase COLON StatementList

  289 CommClauseLoop: CommClause CommClauseLoop
  290               | /* empty */

  291 CommCase: /* empty */
  292         | CASE RecvStmt
  293         | DEFAULT

  294 RecvStmt: ExpressionList '=' RecvExpr
  295         | IdentifierList GODEF RecvExpr
  296         | RecvExpr

  297 RecvExpr: Expression

  298 ForStmt: FOR ForClauseBracket Block

  299 ForClauseBracket: Condition
  300                 | ForClause
  301                 | RangeClause
  302                 | /* empty */

  303 Condition: Expression

  304 ForClause: InitStmtBracket SEMICOLON ConditionBracket SEMICOLON PostStmtBracket

  305 InitStmt: SimpleStmt

  306 InitStmtBracket: InitStmt
  307                | /* empty */

  308 ConditionBracket: Condition
  309                 | /* empty */

  310 PostStmt: SimpleStmt

  311 PostStmtBracket: PostStmt

  312 RangeClause: ExpressionList '=' RANGE Expression
  313            | IdentifierList GODEF RANGE Expression
  314            | RANGE Expression

  315 DeferStmt: DEFER Expression

  316 SourceFile: PackageClause SEMICOLON ImportLoop TopLevelLoop

  317 ImportLoop: ImportDecl SEMICOLON ImportLoop
  318           | /* empty */

  319 TopLevelLoop: TopLevelDecl SEMICOLON TopLevelLoop
  320             | /* empty */

  321 PackageClause: PACKAGE IDENTIFIER

  322 ImportDecl: IMPORT ImportSpec
  323           | IMPORT '(' ImportSpecLoop ')'

  324 ImportSpec: '.' ImportPath
  325           | IDENTIFIER ImportPath
  326           | ImportPath

  327 ImportSpecLoop: ImportSpec SEMICOLON ImportSpecLoop
  328               | /* empty */

  329 ImportPath: StringValue


Terminals, with rules where they appear

$end (0) 0
'!' (33) 212
'%' (37) 207
'&' (38) 209 215
'(' (40) 3 46 47 48 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 87
    98 112 129 174 175 217 218 279 323
')' (41) 3 46 47 48 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 87
    98 112 129 174 175 217 218 279 323
'*' (42) 39 41 42 205 214
'+' (43) 201 210
',' (44) 7 48 50 58 61 64 65 66 67 70 93 95 107 108 145 150 176 178
    180 182 184 185 186 187 217
'-' (45) 202 211
'.' (46) 28 168 174 189 279 324
'/' (47) 206
':' (58) 148
';' (59) 32
'=' (61) 88 89 103 113 115 248 294 312
'[' (91) 9 29 30 76 106 107 140 169 170 171
']' (93) 9 29 30 76 106 107 140 169 170 171
'^' (94) 204 213
'{' (123) 31 55 145 146 147 258 268 278 287
'|' (124) 74 75 203
'}' (125) 31 55 145 146 147 258 268 278 287
'~' (126) 73 75
error (256)
BREAK (258) 252 253
DEFAULT (259) 277 286 293
SELECT (260) 287
SWITCH (261) 268 278
CASE (262) 276 285 292
FALLTHROUGH (263) 257
IF (264) 261 262 263 264 265
ELSE (265) 261 262 263 264
GOTO (266) 256
RANGE (267) 312 313 314
FOR (268) 298
CONTINUE (269) 254 255
FUNC (270) 43 119 120 121 122 124 125 157
INTERFACE (271) 55
DEFER (272) 315
RETURN (273) 250 251
ARGS (274) 53 54 140 176 177 180 181 184 185
GO (275) 249
CHAN (276) 77 78 79
MAP (277) 76
STRUCT (278) 31
CONST (279) 86 87
TYPE (280) 97 98
VAR (281) 111 112
ANY (282) 18
BOOL (283) 20
BYTE (284) 21
COMPARABLE (285) 22
INT (286) 25
COMPLEX (287) 23
ERROR (288) 24
FLOAT (289) 19
STRING (290) 27
RUNE (291) 26
PACKAGE (292) 321
IMPORT (293) 322 323
IDENTIFIER (294) 5 28 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    93 94 103 104 105 119 120 121 122 124 125 152 158 168 189 234 252
    254 256 280 321 325
IntegerValue (295) 133
FloatValue (296) 134
StringValue (297) 35 37 136 329
ImaginaryValue (298) 135
BooleanValue (299)
COLON (300) 170 171 234 273 282 288
SEMICOLON (301) 32 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
    91 101 116 259 261 262 269 304 316 317 319 327
GODEF (302) 118 280 295 313
INCRE_DECRE (303) 245
LRSHIFT (304) 208
ARITH_ASSIGN (305) 247
BIT_ASSIGN (306)
AND (307) 195
OR (308) 196
COMPARE (309) 200
CHANNELOP (310) 78 79 216 243


Nonterminals, with rules where they appear

$accept (77)
    on left: 0
Type (78)
    on left: 1 2 3 4, on right: 3 7 8 29 30 34 35 42 45 51 52 53 54
    68 69 70 72 73 74 75 76 77 78 79 88 103 104 105 113 114 140 174
    180 181 182 183 184 185 186 187 190 217 218 279
TypeName (79)
    on left: 5 6, on right: 1 2 38 39 40 41 143 144
TypeList (80)
    on left: 7 8, on right: 7 9 285
TypeArgs (81)
    on left: 9, on right: 2 40 41 127 144
TypeLit (82)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27,
    on right: 4
QualifiedIdent (83)
    on left: 28, on right: 6 159
ArrayType (84)
    on left: 29, on right: 10 139
SliceType (85)
    on left: 30, on right: 15 141
StructType (86)
    on left: 31, on right: 11 138
StructTypeLoop (87)
    on left: 32 33, on right: 31 32
FieldDecl (88)
    on left: 34 35 36 37, on right: 32
EmbeddedField (89)
    on left: 38 39 40 41, on right: 36 37
PointerType (90)
    on left: 42, on right: 12
FunctionType (91)
    on left: 43, on right: 13
Signature (92)
    on left: 44 45, on right: 43 119 120 121 122 124 125 157
Parameters (93)
    on left: 46 47 48, on right: 44 45 124 125
ParameterList (94)
    on left: 49 50, on right: 47 48 57 58 60 61 62 63 64 65 66 67 69
    70
ParameterDecl (95)
    on left: 51 52 53 54, on right: 49 50
InterfaceType (96)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71, on right:
    14 55
TypeElem (97)
    on left: 72 73 74 75, on right: 71 72 73 110
MapType (98)
    on left: 76, on right: 16 142
ChannelType (99)
    on left: 77 78 79, on right: 17
Declaration (100)
    on left: 80 81 82, on right: 83 219
TopLevelDecl (101)
    on left: 83 84 85, on right: 319
ConstDecl (102)
    on left: 86 87, on right: 80
ConstSpec (103)
    on left: 88 89 90, on right: 86 91
ConstSpecLoop (104)
    on left: 91 92, on right: 87 91
IdentifierList (105)
    on left: 93 94, on right: 34 35 52 54 88 89 90 93 110 113 114 115
    118 295 313
ExpressionList (106)
    on left: 95 96, on right: 88 89 95 113 115 118 176 177 178 179
    184 185 186 187 246 250 276 294 312
TypeDecl (107)
    on left: 97 98, on right: 81
TypeSpec (108)
    on left: 99 100, on right: 97 101
TypeSpecLoop (109)
    on left: 101 102, on right: 98 101
AliasDecl (110)
    on left: 103, on right: 99
TypeDef (111)
    on left: 104 105, on right: 100
TypeParameters (112)
    on left: 106 107, on right: 105 119 121
TypeParamList (113)
    on left: 108 109, on right: 106 107 108
TypeParamDecl (114)
    on left: 110, on right: 108 109
VarDecl (115)
    on left: 111 112, on right: 82
VarSpec (116)
    on left: 113 114 115, on right: 111 116
VarSpecLoop (117)
    on left: 116 117, on right: 112 116
ShortVarDecl (118)
    on left: 118, on right: 240
FunctionDecl (119)
    on left: 119 120 121 122, on right: 84
FunctionBody (120)
    on left: 123, on right: 119 120 124 157
MethodDecl (121)
    on left: 124 125, on right: 85
Operand (122)
    on left: 126 127 128 129, on right: 160
Literal (123)
    on left: 130 131 132, on right: 126
BasicLit (124)
    on left: 133 134 135 136, on right: 130
CompositeLit (125)
    on left: 137, on right: 131
LiteralType (126)
    on left: 138 139 140 141 142 143 144, on right: 137
LiteralValue (127)
    on left: 145 146 147, on right: 137 154 156
KeyedElement (128)
    on left: 148 149, on right: 150 151
ElementList (129)
    on left: 150 151, on right: 145 146 150
Key (130)
    on left: 152 153 154, on right: 148
Element (131)
    on left: 155 156, on right: 148 149
FunctionLit (132)
    on left: 157, on right: 132
OperandName (133)
    on left: 158 159, on right: 127 128
PrimaryExpr (134)
    on left: 160 161 162 163 164 165 166 167, on right: 163 164 165
    166 167 193 279
Selector (135)
    on left: 168, on right: 163
Index (136)
    on left: 169, on right: 164
Slice (137)
    on left: 170 171, on right: 165
ExpressionLoop (138)
    on left: 172 173, on right: 170 171
TypeAssertion (139)
    on left: 174, on right: 166
Arguments (140)
    on left: 175, on right: 167
ArgumentsLoop (141)
    on left: 176 177 178 179 180 181 182 183 184 185 186 187 188, on right:
    175
MethodExpr (142)
    on left: 189, on right: 162
ParametersType (143)
    on left: 190, on right: 189
Expression (144)
    on left: 191 192, on right: 29 95 96 129 153 155 169 171 172 192
    217 218 242 243 244 245 249 261 262 263 264 265 271 297 303 312
    313 314 315
UnaryExpr (145)
    on left: 193 194, on right: 191 194
binary_op (146)
    on left: 195 196 197 198 199, on right: 192
rel_op (147)
    on left: 200, on right: 197
add_op (148)
    on left: 201 202 203 204, on right: 198
mul_op (149)
    on left: 205 206 207 208 209, on right: 199
unary_op (150)
    on left: 210 211 212 213 214 215 216, on right: 194
Conversion (151)
    on left: 217 218, on right: 161
Statement (152)
    on left: 219 220 221 222 223 224 225 226 227 228 229 230 231 232
    233, on right: 234 259
LabeledStmt (153)
    on left: 234, on right: 220
SimpleStmt (154)
    on left: 235 236 237 238 239 240, on right: 221 261 262 269 305
    310
EmptyStmt (155)
    on left: 241, on right: 235
ExpressionStmt (156)
    on left: 242, on right: 236
SendStmt (157)
    on left: 243, on right: 237
Channel (158)
    on left: 244, on right: 243
IncDecStmt (159)
    on left: 245, on right: 238
Assignment (160)
    on left: 246, on right: 239
assign_op (161)
    on left: 247 248, on right: 246
GoStmt (162)
    on left: 249, on right: 222
ReturnStmt (163)
    on left: 250 251, on right: 223
BreakStmt (164)
    on left: 252 253, on right: 224
ContinueStmt (165)
    on left: 254 255, on right: 225
GotoStmt (166)
    on left: 256, on right: 226
FallthroughStmt (167)
    on left: 257, on right: 227
Block (168)
    on left: 258, on right: 123 228 261 262 263 264 265 298
StatementList (169)
    on left: 259 260, on right: 258 259 273 282 288
IfStmt (170)
    on left: 261 262 263 264 265, on right: 229 261 263
SwitchStmt (171)
    on left: 266 267, on right: 230
ExprSwitchStmt (172)
    on left: 268, on right: 266
SimpleStmtBrakets (173)
    on left: 269 270, on right: 268 278
ExpressionBrakets (174)
    on left: 271 272, on right: 268
ExprCaseClause (175)
    on left: 273, on right: 274
ExprCaseClauseLoop (176)
    on left: 274 275, on right: 268 274
ExprSwitchCase (177)
    on left: 276 277, on right: 273
TypeSwitchStmt (178)
    on left: 278, on right: 267
TypeSwitchGuard (179)
    on left: 279, on right: 278
IdetifierGodefBrakets (180)
    on left: 280 281, on right: 279
TypeCaseClause (181)
    on left: 282, on right: 283
TypeCaseClauseLoop (182)
    on left: 283 284, on right: 278 283
TypeSwitchCase (183)
    on left: 285 286, on right: 282
SelectStmt (184)
    on left: 287, on right: 231
CommClause (185)
    on left: 288, on right: 289
CommClauseLoop (186)
    on left: 289 290, on right: 287 289
CommCase (187)
    on left: 291 292 293, on right: 288
RecvStmt (188)
    on left: 294 295 296, on right: 292
RecvExpr (189)
    on left: 297, on right: 294 295 296
ForStmt (190)
    on left: 298, on right: 232
ForClauseBracket (191)
    on left: 299 300 301 302, on right: 298
Condition (192)
    on left: 303, on right: 299 308
ForClause (193)
    on left: 304, on right: 300
InitStmt (194)
    on left: 305, on right: 306
InitStmtBracket (195)
    on left: 306 307, on right: 304
ConditionBracket (196)
    on left: 308 309, on right: 304
PostStmt (197)
    on left: 310, on right: 311
PostStmtBracket (198)
    on left: 311, on right: 304
RangeClause (199)
    on left: 312 313 314, on right: 301
DeferStmt (200)
    on left: 315, on right: 233
SourceFile (201)
    on left: 316, on right: 0
ImportLoop (202)
    on left: 317 318, on right: 316 317
TopLevelLoop (203)
    on left: 319 320, on right: 316 319
PackageClause (204)
    on left: 321, on right: 316
ImportDecl (205)
    on left: 322 323, on right: 317
ImportSpec (206)
    on left: 324 325 326, on right: 322 327
ImportSpecLoop (207)
    on left: 327 328, on right: 323 327
ImportPath (208)
    on left: 329, on right: 324 325 326


state 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


state 1

  321 PackageClause: PACKAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 5


state 3

  316 SourceFile: PackageClause . SEMICOLON ImportLoop TopLevelLoop

    SEMICOLON  shift, and go to state 6


state 4

  321 PackageClause: PACKAGE IDENTIFIER .

    $default  reduce using rule 321 (PackageClause)


state 5

    0 $accept: SourceFile $end .

    $default  accept


state 6

  316 SourceFile: PackageClause SEMICOLON . ImportLoop TopLevelLoop

    IMPORT  shift, and go to state 7

    $default  reduce using rule 318 (ImportLoop)

    ImportLoop  go to state 8
    ImportDecl  go to state 9


state 7

  322 ImportDecl: IMPORT . ImportSpec
  323           | IMPORT . '(' ImportSpecLoop ')'

    IDENTIFIER   shift, and go to state 10
    StringValue  shift, and go to state 11
    '('          shift, and go to state 12
    '.'          shift, and go to state 13

    ImportSpec  go to state 14
    ImportPath  go to state 15


state 8

  316 SourceFile: PackageClause SEMICOLON ImportLoop . TopLevelLoop

    FUNC   shift, and go to state 16
    CONST  shift, and go to state 17
    TYPE   shift, and go to state 18
    VAR    shift, and go to state 19

    $default  reduce using rule 320 (TopLevelLoop)

    Declaration   go to state 20
    TopLevelDecl  go to state 21
    ConstDecl     go to state 22
    TypeDecl      go to state 23
    VarDecl       go to state 24
    FunctionDecl  go to state 25
    MethodDecl    go to state 26
    TopLevelLoop  go to state 27


state 9

  317 ImportLoop: ImportDecl . SEMICOLON ImportLoop

    SEMICOLON  shift, and go to state 28


state 10

  325 ImportSpec: IDENTIFIER . ImportPath

    StringValue  shift, and go to state 11

    ImportPath  go to state 29


state 11

  329 ImportPath: StringValue .

    $default  reduce using rule 329 (ImportPath)


state 12

  323 ImportDecl: IMPORT '(' . ImportSpecLoop ')'

    IDENTIFIER   shift, and go to state 10
    StringValue  shift, and go to state 11
    '.'          shift, and go to state 13

    $default  reduce using rule 328 (ImportSpecLoop)

    ImportSpec      go to state 30
    ImportSpecLoop  go to state 31
    ImportPath      go to state 15


state 13

  324 ImportSpec: '.' . ImportPath

    StringValue  shift, and go to state 11

    ImportPath  go to state 32


state 14

  322 ImportDecl: IMPORT ImportSpec .

    $default  reduce using rule 322 (ImportDecl)


state 15

  326 ImportSpec: ImportPath .

    $default  reduce using rule 326 (ImportSpec)


state 16

  119 FunctionDecl: FUNC . IDENTIFIER TypeParameters Signature FunctionBody
  120             | FUNC . IDENTIFIER Signature FunctionBody
  121             | FUNC . IDENTIFIER TypeParameters Signature
  122             | FUNC . IDENTIFIER Signature
  124 MethodDecl: FUNC . Parameters IDENTIFIER Signature FunctionBody
  125           | FUNC . Parameters IDENTIFIER Signature

    IDENTIFIER  shift, and go to state 33
    '('         shift, and go to state 34

    Parameters  go to state 35


state 17

   86 ConstDecl: CONST . ConstSpec
   87          | CONST . '(' ConstSpecLoop ')'

    IDENTIFIER  shift, and go to state 36
    '('         shift, and go to state 37

    ConstSpec       go to state 38
    IdentifierList  go to state 39


state 18

   97 TypeDecl: TYPE . TypeSpec
   98         | TYPE . '(' TypeSpecLoop ')'

    IDENTIFIER  shift, and go to state 40
    '('         shift, and go to state 41

    TypeSpec   go to state 42
    AliasDecl  go to state 43
    TypeDef    go to state 44


state 19

  111 VarDecl: VAR . VarSpec
  112        | VAR . '(' VarSpecLoop ')'

    IDENTIFIER  shift, and go to state 36
    '('         shift, and go to state 45

    IdentifierList  go to state 46
    VarSpec         go to state 47


state 20

   83 TopLevelDecl: Declaration .

    $default  reduce using rule 83 (TopLevelDecl)


state 21

  319 TopLevelLoop: TopLevelDecl . SEMICOLON TopLevelLoop

    SEMICOLON  shift, and go to state 48


state 22

   80 Declaration: ConstDecl .

    $default  reduce using rule 80 (Declaration)


state 23

   81 Declaration: TypeDecl .

    $default  reduce using rule 81 (Declaration)


state 24

   82 Declaration: VarDecl .

    $default  reduce using rule 82 (Declaration)


state 25

   84 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 84 (TopLevelDecl)


state 26

   85 TopLevelDecl: MethodDecl .

    $default  reduce using rule 85 (TopLevelDecl)


state 27

  316 SourceFile: PackageClause SEMICOLON ImportLoop TopLevelLoop .

    $default  reduce using rule 316 (SourceFile)


state 28

  317 ImportLoop: ImportDecl SEMICOLON . ImportLoop

    IMPORT  shift, and go to state 7

    $default  reduce using rule 318 (ImportLoop)

    ImportLoop  go to state 49
    ImportDecl  go to state 9


state 29

  325 ImportSpec: IDENTIFIER ImportPath .

    $default  reduce using rule 325 (ImportSpec)


state 30

  327 ImportSpecLoop: ImportSpec . SEMICOLON ImportSpecLoop

    SEMICOLON  shift, and go to state 50


state 31

  323 ImportDecl: IMPORT '(' ImportSpecLoop . ')'

    ')'  shift, and go to state 51


state 32

  324 ImportSpec: '.' ImportPath .

    $default  reduce using rule 324 (ImportSpec)


state 33

  119 FunctionDecl: FUNC IDENTIFIER . TypeParameters Signature FunctionBody
  120             | FUNC IDENTIFIER . Signature FunctionBody
  121             | FUNC IDENTIFIER . TypeParameters Signature
  122             | FUNC IDENTIFIER . Signature

    '('  shift, and go to state 34
    '['  shift, and go to state 52

    Signature       go to state 53
    Parameters      go to state 54
    TypeParameters  go to state 55


state 34

   46 Parameters: '(' . ')'
   47           | '(' . ParameterList ')'
   48           | '(' . ParameterList ',' ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 75
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 80
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterList   go to state 89
    ParameterDecl   go to state 90
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 35

  124 MethodDecl: FUNC Parameters . IDENTIFIER Signature FunctionBody
  125           | FUNC Parameters . IDENTIFIER Signature

    IDENTIFIER  shift, and go to state 96


state 36

   94 IdentifierList: IDENTIFIER .

    $default  reduce using rule 94 (IdentifierList)


state 37

   87 ConstDecl: CONST '(' . ConstSpecLoop ')'

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 92 (ConstSpecLoop)

    ConstSpec       go to state 97
    ConstSpecLoop   go to state 98
    IdentifierList  go to state 39


state 38

   86 ConstDecl: CONST ConstSpec .

    $default  reduce using rule 86 (ConstDecl)


state 39

   88 ConstSpec: IdentifierList . Type '=' ExpressionList
   89          | IdentifierList . '=' ExpressionList
   90          | IdentifierList .
   93 IdentifierList: IdentifierList . ',' IDENTIFIER

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 100
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79
    '='         shift, and go to state 101

    $default  reduce using rule 90 (ConstSpec)

    Type            go to state 102
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 40

  103 AliasDecl: IDENTIFIER . '=' Type
  104 TypeDef: IDENTIFIER . Type
  105        | IDENTIFIER . TypeParameters Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 103
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79
    '='         shift, and go to state 104

    Type            go to state 105
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    TypeParameters  go to state 106


state 41

   98 TypeDecl: TYPE '(' . TypeSpecLoop ')'

    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 102 (TypeSpecLoop)

    TypeSpec      go to state 107
    TypeSpecLoop  go to state 108
    AliasDecl     go to state 43
    TypeDef       go to state 44


state 42

   97 TypeDecl: TYPE TypeSpec .

    $default  reduce using rule 97 (TypeDecl)


state 43

   99 TypeSpec: AliasDecl .

    $default  reduce using rule 99 (TypeSpec)


state 44

  100 TypeSpec: TypeDef .

    $default  reduce using rule 100 (TypeSpec)


state 45

  112 VarDecl: VAR '(' . VarSpecLoop ')'

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 117 (VarSpecLoop)

    IdentifierList  go to state 46
    VarSpec         go to state 109
    VarSpecLoop     go to state 110


state 46

   93 IdentifierList: IdentifierList . ',' IDENTIFIER
  113 VarSpec: IdentifierList . Type '=' ExpressionList
  114        | IdentifierList . Type
  115        | IdentifierList . '=' ExpressionList

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 100
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79
    '='         shift, and go to state 111

    Type            go to state 112
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 47

  111 VarDecl: VAR VarSpec .

    $default  reduce using rule 111 (VarDecl)


state 48

  319 TopLevelLoop: TopLevelDecl SEMICOLON . TopLevelLoop

    FUNC   shift, and go to state 16
    CONST  shift, and go to state 17
    TYPE   shift, and go to state 18
    VAR    shift, and go to state 19

    $default  reduce using rule 320 (TopLevelLoop)

    Declaration   go to state 20
    TopLevelDecl  go to state 21
    ConstDecl     go to state 22
    TypeDecl      go to state 23
    VarDecl       go to state 24
    FunctionDecl  go to state 25
    MethodDecl    go to state 26
    TopLevelLoop  go to state 113


state 49

  317 ImportLoop: ImportDecl SEMICOLON ImportLoop .

    $default  reduce using rule 317 (ImportLoop)


state 50

  327 ImportSpecLoop: ImportSpec SEMICOLON . ImportSpecLoop

    IDENTIFIER   shift, and go to state 10
    StringValue  shift, and go to state 11
    '.'          shift, and go to state 13

    $default  reduce using rule 328 (ImportSpecLoop)

    ImportSpec      go to state 30
    ImportSpecLoop  go to state 114
    ImportPath      go to state 15


state 51

  323 ImportDecl: IMPORT '(' ImportSpecLoop ')' .

    $default  reduce using rule 323 (ImportDecl)


state 52

  106 TypeParameters: '[' . TypeParamList ']'
  107               | '[' . TypeParamList ',' ']'

    IDENTIFIER  shift, and go to state 36

    IdentifierList  go to state 115
    TypeParamList   go to state 116
    TypeParamDecl   go to state 117


state 53

  120 FunctionDecl: FUNC IDENTIFIER Signature . FunctionBody
  122             | FUNC IDENTIFIER Signature .

    '{'  shift, and go to state 118

    $default  reduce using rule 122 (FunctionDecl)

    FunctionBody  go to state 119
    Block         go to state 120


state 54

   44 Signature: Parameters .
   45          | Parameters . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 44 (Signature)]
    INTERFACE   [reduce using rule 44 (Signature)]
    CHAN        [reduce using rule 44 (Signature)]
    MAP         [reduce using rule 44 (Signature)]
    STRUCT      [reduce using rule 44 (Signature)]
    ANY         [reduce using rule 44 (Signature)]
    BOOL        [reduce using rule 44 (Signature)]
    BYTE        [reduce using rule 44 (Signature)]
    COMPARABLE  [reduce using rule 44 (Signature)]
    INT         [reduce using rule 44 (Signature)]
    COMPLEX     [reduce using rule 44 (Signature)]
    ERROR       [reduce using rule 44 (Signature)]
    FLOAT       [reduce using rule 44 (Signature)]
    STRING      [reduce using rule 44 (Signature)]
    RUNE        [reduce using rule 44 (Signature)]
    IDENTIFIER  [reduce using rule 44 (Signature)]
    CHANNELOP   [reduce using rule 44 (Signature)]
    '('         [reduce using rule 44 (Signature)]
    '['         [reduce using rule 44 (Signature)]
    '*'         [reduce using rule 44 (Signature)]
    '~'         [reduce using rule 44 (Signature)]
    '|'         [reduce using rule 44 (Signature)]
    $default    reduce using rule 44 (Signature)

    Type            go to state 121
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 55

  119 FunctionDecl: FUNC IDENTIFIER TypeParameters . Signature FunctionBody
  121             | FUNC IDENTIFIER TypeParameters . Signature

    '('  shift, and go to state 34

    Signature   go to state 122
    Parameters  go to state 54


state 56

   43 FunctionType: FUNC . Signature

    '('  shift, and go to state 34

    Signature   go to state 123
    Parameters  go to state 54


state 57

   55 InterfaceType: INTERFACE . '{' InterfaceType '}'

    '{'  shift, and go to state 124


state 58

   53 ParameterDecl: ARGS . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 125
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 59

   77 ChannelType: CHAN . Type
   78            | CHAN . CHANNELOP Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 126
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 127
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 60

   76 MapType: MAP . '[' Type ']' Type

    '['  shift, and go to state 128


state 61

   31 StructType: STRUCT . '{' StructTypeLoop '}'

    '{'  shift, and go to state 129


state 62

   18 TypeLit: ANY .

    $default  reduce using rule 18 (TypeLit)


state 63

   20 TypeLit: BOOL .

    $default  reduce using rule 20 (TypeLit)


state 64

   21 TypeLit: BYTE .

    $default  reduce using rule 21 (TypeLit)


state 65

   22 TypeLit: COMPARABLE .

    $default  reduce using rule 22 (TypeLit)


state 66

   25 TypeLit: INT .

    $default  reduce using rule 25 (TypeLit)


state 67

   23 TypeLit: COMPLEX .

    $default  reduce using rule 23 (TypeLit)


state 68

   24 TypeLit: ERROR .

    $default  reduce using rule 24 (TypeLit)


state 69

   19 TypeLit: FLOAT .

    $default  reduce using rule 19 (TypeLit)


state 70

   27 TypeLit: STRING .

    $default  reduce using rule 27 (TypeLit)


state 71

   26 TypeLit: RUNE .

    $default  reduce using rule 26 (TypeLit)


state 72

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   56 InterfaceType: IDENTIFIER . '(' ')' SEMICOLON
   57              | IDENTIFIER . '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER . '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER . '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER . '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER . '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER . '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER . '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER . '(' ')' Type SEMICOLON
   69              | IDENTIFIER . '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER . '(' ParameterList ',' ')' Type SEMICOLON
   94 IdentifierList: IDENTIFIER .

    '('  shift, and go to state 130
    '.'  shift, and go to state 131

    FUNC        reduce using rule 5 (TypeName)
    FUNC        [reduce using rule 94 (IdentifierList)]
    INTERFACE   reduce using rule 5 (TypeName)
    INTERFACE   [reduce using rule 94 (IdentifierList)]
    ARGS        reduce using rule 94 (IdentifierList)
    CHAN        reduce using rule 5 (TypeName)
    CHAN        [reduce using rule 94 (IdentifierList)]
    MAP         reduce using rule 5 (TypeName)
    MAP         [reduce using rule 94 (IdentifierList)]
    STRUCT      reduce using rule 5 (TypeName)
    STRUCT      [reduce using rule 94 (IdentifierList)]
    ANY         reduce using rule 5 (TypeName)
    ANY         [reduce using rule 94 (IdentifierList)]
    BOOL        reduce using rule 5 (TypeName)
    BOOL        [reduce using rule 94 (IdentifierList)]
    BYTE        reduce using rule 5 (TypeName)
    BYTE        [reduce using rule 94 (IdentifierList)]
    COMPARABLE  reduce using rule 5 (TypeName)
    COMPARABLE  [reduce using rule 94 (IdentifierList)]
    INT         reduce using rule 5 (TypeName)
    INT         [reduce using rule 94 (IdentifierList)]
    COMPLEX     reduce using rule 5 (TypeName)
    COMPLEX     [reduce using rule 94 (IdentifierList)]
    ERROR       reduce using rule 5 (TypeName)
    ERROR       [reduce using rule 94 (IdentifierList)]
    FLOAT       reduce using rule 5 (TypeName)
    FLOAT       [reduce using rule 94 (IdentifierList)]
    STRING      reduce using rule 5 (TypeName)
    STRING      [reduce using rule 94 (IdentifierList)]
    RUNE        reduce using rule 5 (TypeName)
    RUNE        [reduce using rule 94 (IdentifierList)]
    IDENTIFIER  reduce using rule 5 (TypeName)
    IDENTIFIER  [reduce using rule 94 (IdentifierList)]
    CHANNELOP   reduce using rule 5 (TypeName)
    CHANNELOP   [reduce using rule 94 (IdentifierList)]
    '('         [reduce using rule 5 (TypeName)]
    '('         [reduce using rule 94 (IdentifierList)]
    ','         reduce using rule 5 (TypeName)
    ','         [reduce using rule 94 (IdentifierList)]
    '['         reduce using rule 5 (TypeName)
    '['         [reduce using rule 94 (IdentifierList)]
    '*'         reduce using rule 5 (TypeName)
    '*'         [reduce using rule 94 (IdentifierList)]
    '~'         reduce using rule 5 (TypeName)
    '~'         [reduce using rule 94 (IdentifierList)]
    '|'         reduce using rule 5 (TypeName)
    '|'         [reduce using rule 94 (IdentifierList)]
    $default    reduce using rule 5 (TypeName)


state 73

   79 ChannelType: CHANNELOP . CHAN Type

    CHAN  shift, and go to state 132


state 74

    3 Type: '(' . Type ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 133
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 75

   46 Parameters: '(' ')' .

    $default  reduce using rule 46 (Parameters)


state 76

   29 ArrayType: '[' . Expression ']' Type
   30 SliceType: '[' . ']' Type

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    ']'             shift, and go to state 143
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 167
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 77

   42 PointerType: '*' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 171
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 78

   73 TypeElem: '~' . Type TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 172
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 79

   74 TypeElem: '|' . Type
   75         | '|' . '~' Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 173
    '|'         shift, and go to state 79

    Type            go to state 174
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 80

   51 ParameterDecl: Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 51 (ParameterDecl)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 81

    1 Type: TypeName .
    2     | TypeName . TypeArgs

    '['  shift, and go to state 177

    '['       [reduce using rule 1 (Type)]
    $default  reduce using rule 1 (Type)

    TypeArgs  go to state 178


state 82

    4 Type: TypeLit .

    $default  reduce using rule 4 (Type)


state 83

    6 TypeName: QualifiedIdent .

    $default  reduce using rule 6 (TypeName)


state 84

   10 TypeLit: ArrayType .

    $default  reduce using rule 10 (TypeLit)


state 85

   15 TypeLit: SliceType .

    $default  reduce using rule 15 (TypeLit)


state 86

   11 TypeLit: StructType .

    $default  reduce using rule 11 (TypeLit)


state 87

   12 TypeLit: PointerType .

    $default  reduce using rule 12 (TypeLit)


state 88

   13 TypeLit: FunctionType .

    $default  reduce using rule 13 (TypeLit)


state 89

   47 Parameters: '(' ParameterList . ')'
   48           | '(' ParameterList . ',' ')'

    ')'  shift, and go to state 179
    ','  shift, and go to state 180


state 90

   49 ParameterList: ParameterDecl .
   50              | ParameterDecl . ',' ParameterDecl

    ','  shift, and go to state 181

    ','       [reduce using rule 49 (ParameterList)]
    $default  reduce using rule 49 (ParameterList)


state 91

   14 TypeLit: InterfaceType .

    $default  reduce using rule 14 (TypeLit)


state 92

   71 InterfaceType: TypeElem . SEMICOLON

    SEMICOLON  shift, and go to state 182


state 93

   16 TypeLit: MapType .

    $default  reduce using rule 16 (TypeLit)


state 94

   17 TypeLit: ChannelType .

    $default  reduce using rule 17 (TypeLit)


state 95

   52 ParameterDecl: IdentifierList . Type
   54              | IdentifierList . ARGS Type
   93 IdentifierList: IdentifierList . ',' IDENTIFIER

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 183
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 100
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 184
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 96

  124 MethodDecl: FUNC Parameters IDENTIFIER . Signature FunctionBody
  125           | FUNC Parameters IDENTIFIER . Signature

    '('  shift, and go to state 34

    Signature   go to state 185
    Parameters  go to state 54


state 97

   91 ConstSpecLoop: ConstSpec . SEMICOLON ConstSpecLoop

    SEMICOLON  shift, and go to state 186


state 98

   87 ConstDecl: CONST '(' ConstSpecLoop . ')'

    ')'  shift, and go to state 187


state 99

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   56 InterfaceType: IDENTIFIER . '(' ')' SEMICOLON
   57              | IDENTIFIER . '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER . '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER . '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER . '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER . '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER . '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER . '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER . '(' ')' Type SEMICOLON
   69              | IDENTIFIER . '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER . '(' ParameterList ',' ')' Type SEMICOLON

    '('  shift, and go to state 130
    '.'  shift, and go to state 131

    '('       [reduce using rule 5 (TypeName)]
    '.'       [reduce using rule 5 (TypeName)]
    $default  reduce using rule 5 (TypeName)


state 100

   93 IdentifierList: IdentifierList ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 188


state 101

   89 ConstSpec: IdentifierList '=' . ExpressionList

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 189
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 102

   72 TypeElem: Type . TypeElem
   88 ConstSpec: IdentifierList Type . '=' ExpressionList

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79
    '='         shift, and go to state 191

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 103

   29 ArrayType: '[' . Expression ']' Type
   30 SliceType: '[' . ']' Type
  106 TypeParameters: '[' . TypeParamList ']'
  107               | '[' . TypeParamList ',' ']'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 192
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    ']'             shift, and go to state 143
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    IdentifierList  go to state 115
    TypeParamList   go to state 116
    TypeParamDecl   go to state 117
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 167
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 104

  103 AliasDecl: IDENTIFIER '=' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 193
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 105

   72 TypeElem: Type . TypeElem
  104 TypeDef: IDENTIFIER Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 104 (TypeDef)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 106

  105 TypeDef: IDENTIFIER TypeParameters . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 194
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 107

  101 TypeSpecLoop: TypeSpec . SEMICOLON TypeSpecLoop

    SEMICOLON  shift, and go to state 195


state 108

   98 TypeDecl: TYPE '(' TypeSpecLoop . ')'

    ')'  shift, and go to state 196


state 109

  116 VarSpecLoop: VarSpec . SEMICOLON VarSpecLoop

    SEMICOLON  shift, and go to state 197


state 110

  112 VarDecl: VAR '(' VarSpecLoop . ')'

    ')'  shift, and go to state 198


state 111

  115 VarSpec: IdentifierList '=' . ExpressionList

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 199
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 112

   72 TypeElem: Type . TypeElem
  113 VarSpec: IdentifierList Type . '=' ExpressionList
  114        | IdentifierList Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79
    '='         shift, and go to state 200

    $default  reduce using rule 114 (VarSpec)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 113

  319 TopLevelLoop: TopLevelDecl SEMICOLON TopLevelLoop .

    $default  reduce using rule 319 (TopLevelLoop)


state 114

  327 ImportSpecLoop: ImportSpec SEMICOLON ImportSpecLoop .

    $default  reduce using rule 327 (ImportSpecLoop)


state 115

   93 IdentifierList: IdentifierList . ',' IDENTIFIER
  110 TypeParamDecl: IdentifierList . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 100
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 201
    MapType         go to state 93
    ChannelType     go to state 94


state 116

  106 TypeParameters: '[' TypeParamList . ']'
  107               | '[' TypeParamList . ',' ']'
  108 TypeParamList: TypeParamList . ',' TypeParamDecl

    ','  shift, and go to state 202
    ']'  shift, and go to state 203


state 117

  109 TypeParamList: TypeParamDecl .

    $default  reduce using rule 109 (TypeParamList)


state 118

  258 Block: '{' . StatementList '}'

    BREAK           shift, and go to state 204
    SELECT          shift, and go to state 205
    SWITCH          shift, and go to state 206
    FALLTHROUGH     shift, and go to state 207
    IF              shift, and go to state 208
    GOTO            shift, and go to state 209
    FOR             shift, and go to state 210
    CONTINUE        shift, and go to state 211
    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    DEFER           shift, and go to state 212
    RETURN          shift, and go to state 213
    GO              shift, and go to state 214
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 215
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '{'             shift, and go to state 118
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    '}'       reduce using rule 260 (StatementList)
    $default  reduce using rule 241 (EmptyStmt)

    Type             go to state 150
    TypeName         go to state 151
    TypeLit          go to state 82
    QualifiedIdent   go to state 152
    ArrayType        go to state 153
    SliceType        go to state 154
    StructType       go to state 155
    PointerType      go to state 87
    FunctionType     go to state 88
    InterfaceType    go to state 91
    TypeElem         go to state 92
    MapType          go to state 156
    ChannelType      go to state 94
    Declaration      go to state 216
    ConstDecl        go to state 22
    IdentifierList   go to state 217
    ExpressionList   go to state 218
    TypeDecl         go to state 23
    VarDecl          go to state 24
    ShortVarDecl     go to state 219
    Operand          go to state 157
    Literal          go to state 158
    BasicLit         go to state 159
    CompositeLit     go to state 160
    LiteralType      go to state 161
    FunctionLit      go to state 162
    OperandName      go to state 163
    PrimaryExpr      go to state 164
    MethodExpr       go to state 165
    ParametersType   go to state 166
    Expression       go to state 220
    UnaryExpr        go to state 168
    unary_op         go to state 169
    Conversion       go to state 170
    Statement        go to state 221
    LabeledStmt      go to state 222
    SimpleStmt       go to state 223
    EmptyStmt        go to state 224
    ExpressionStmt   go to state 225
    SendStmt         go to state 226
    Channel          go to state 227
    IncDecStmt       go to state 228
    Assignment       go to state 229
    GoStmt           go to state 230
    ReturnStmt       go to state 231
    BreakStmt        go to state 232
    ContinueStmt     go to state 233
    GotoStmt         go to state 234
    FallthroughStmt  go to state 235
    Block            go to state 236
    StatementList    go to state 237
    IfStmt           go to state 238
    SwitchStmt       go to state 239
    ExprSwitchStmt   go to state 240
    TypeSwitchStmt   go to state 241
    SelectStmt       go to state 242
    ForStmt          go to state 243
    DeferStmt        go to state 244


state 119

  120 FunctionDecl: FUNC IDENTIFIER Signature FunctionBody .

    $default  reduce using rule 120 (FunctionDecl)


state 120

  123 FunctionBody: Block .

    $default  reduce using rule 123 (FunctionBody)


state 121

   45 Signature: Parameters Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 45 (Signature)]
    INTERFACE   [reduce using rule 45 (Signature)]
    CHAN        [reduce using rule 45 (Signature)]
    MAP         [reduce using rule 45 (Signature)]
    STRUCT      [reduce using rule 45 (Signature)]
    ANY         [reduce using rule 45 (Signature)]
    BOOL        [reduce using rule 45 (Signature)]
    BYTE        [reduce using rule 45 (Signature)]
    COMPARABLE  [reduce using rule 45 (Signature)]
    INT         [reduce using rule 45 (Signature)]
    COMPLEX     [reduce using rule 45 (Signature)]
    ERROR       [reduce using rule 45 (Signature)]
    FLOAT       [reduce using rule 45 (Signature)]
    STRING      [reduce using rule 45 (Signature)]
    RUNE        [reduce using rule 45 (Signature)]
    IDENTIFIER  [reduce using rule 45 (Signature)]
    CHANNELOP   [reduce using rule 45 (Signature)]
    '('         [reduce using rule 45 (Signature)]
    '['         [reduce using rule 45 (Signature)]
    '*'         [reduce using rule 45 (Signature)]
    '~'         [reduce using rule 45 (Signature)]
    '|'         [reduce using rule 45 (Signature)]
    $default    reduce using rule 45 (Signature)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 122

  119 FunctionDecl: FUNC IDENTIFIER TypeParameters Signature . FunctionBody
  121             | FUNC IDENTIFIER TypeParameters Signature .

    '{'  shift, and go to state 118

    $default  reduce using rule 121 (FunctionDecl)

    FunctionBody  go to state 245
    Block         go to state 120


state 123

   43 FunctionType: FUNC Signature .

    $default  reduce using rule 43 (FunctionType)


state 124

   55 InterfaceType: INTERFACE '{' . InterfaceType '}'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 246
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 125

   53 ParameterDecl: ARGS Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 53 (ParameterDecl)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 126

   78 ChannelType: CHAN CHANNELOP . Type
   79            | CHANNELOP . CHAN Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 247
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 248
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 127

   72 TypeElem: Type . TypeElem
   77 ChannelType: CHAN Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 77 (ChannelType)]
    INTERFACE   [reduce using rule 77 (ChannelType)]
    CHAN        [reduce using rule 77 (ChannelType)]
    MAP         [reduce using rule 77 (ChannelType)]
    STRUCT      [reduce using rule 77 (ChannelType)]
    ANY         [reduce using rule 77 (ChannelType)]
    BOOL        [reduce using rule 77 (ChannelType)]
    BYTE        [reduce using rule 77 (ChannelType)]
    COMPARABLE  [reduce using rule 77 (ChannelType)]
    INT         [reduce using rule 77 (ChannelType)]
    COMPLEX     [reduce using rule 77 (ChannelType)]
    ERROR       [reduce using rule 77 (ChannelType)]
    FLOAT       [reduce using rule 77 (ChannelType)]
    STRING      [reduce using rule 77 (ChannelType)]
    RUNE        [reduce using rule 77 (ChannelType)]
    IDENTIFIER  [reduce using rule 77 (ChannelType)]
    CHANNELOP   [reduce using rule 77 (ChannelType)]
    '('         [reduce using rule 77 (ChannelType)]
    '['         [reduce using rule 77 (ChannelType)]
    '*'         [reduce using rule 77 (ChannelType)]
    '~'         [reduce using rule 77 (ChannelType)]
    '|'         [reduce using rule 77 (ChannelType)]
    $default    reduce using rule 77 (ChannelType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 128

   76 MapType: MAP '[' . Type ']' Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 249
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 129

   31 StructType: STRUCT '{' . StructTypeLoop '}'

    IDENTIFIER  shift, and go to state 250
    '*'         shift, and go to state 251

    $default  reduce using rule 33 (StructTypeLoop)

    TypeName        go to state 252
    QualifiedIdent  go to state 83
    StructTypeLoop  go to state 253
    FieldDecl       go to state 254
    EmbeddedField   go to state 255
    IdentifierList  go to state 256


state 130

   56 InterfaceType: IDENTIFIER '(' . ')' SEMICOLON
   57              | IDENTIFIER '(' . ParameterList ')' SEMICOLON
   58              | IDENTIFIER '(' . ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER '(' . ')' '(' ')' SEMICOLON
   60              | IDENTIFIER '(' . ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER '(' . ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER '(' . ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER '(' . ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER '(' . ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER '(' . ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER '(' . ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER '(' . ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER '(' . ')' Type SEMICOLON
   69              | IDENTIFIER '(' . ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER '(' . ParameterList ',' ')' Type SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 257
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 80
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterList   go to state 258
    ParameterDecl   go to state 90
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 131

   28 QualifiedIdent: IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 259


state 132

   79 ChannelType: CHANNELOP CHAN . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 260
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 133

    3 Type: '(' Type . ')'
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 261
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 134

   43 FunctionType: FUNC . Signature
  157 FunctionLit: FUNC . Signature FunctionBody

    '('  shift, and go to state 34

    Signature   go to state 262
    Parameters  go to state 54


state 135

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   56 InterfaceType: IDENTIFIER . '(' ')' SEMICOLON
   57              | IDENTIFIER . '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER . '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER . '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER . '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER . '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER . '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER . '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER . '(' ')' Type SEMICOLON
   69              | IDENTIFIER . '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER . '(' ParameterList ',' ')' Type SEMICOLON
  158 OperandName: IDENTIFIER .

    '('  shift, and go to state 130
    '.'  shift, and go to state 131

    ARGS          reduce using rule 5 (TypeName)
    ARGS          [reduce using rule 158 (OperandName)]
    COLON         reduce using rule 158 (OperandName)
    SEMICOLON     reduce using rule 158 (OperandName)
    INCRE_DECRE   reduce using rule 158 (OperandName)
    LRSHIFT       reduce using rule 158 (OperandName)
    ARITH_ASSIGN  reduce using rule 158 (OperandName)
    AND           reduce using rule 158 (OperandName)
    OR            reduce using rule 158 (OperandName)
    COMPARE       reduce using rule 158 (OperandName)
    CHANNELOP     reduce using rule 5 (TypeName)
    CHANNELOP     [reduce using rule 158 (OperandName)]
    '('           [reduce using rule 5 (TypeName)]
    '('           [reduce using rule 158 (OperandName)]
    ')'           reduce using rule 5 (TypeName)
    ')'           [reduce using rule 158 (OperandName)]
    ','           reduce using rule 5 (TypeName)
    ','           [reduce using rule 158 (OperandName)]
    '['           reduce using rule 5 (TypeName)
    '['           [reduce using rule 158 (OperandName)]
    ']'           reduce using rule 158 (OperandName)
    '.'           [reduce using rule 5 (TypeName)]
    '.'           [reduce using rule 158 (OperandName)]
    '{'           reduce using rule 5 (TypeName)
    '{'           [reduce using rule 158 (OperandName)]
    '}'           reduce using rule 158 (OperandName)
    '*'           reduce using rule 5 (TypeName)
    '*'           [reduce using rule 158 (OperandName)]
    '|'           reduce using rule 5 (TypeName)
    '|'           [reduce using rule 158 (OperandName)]
    '='           reduce using rule 158 (OperandName)
    ':'           reduce using rule 158 (OperandName)
    '+'           reduce using rule 158 (OperandName)
    '-'           reduce using rule 158 (OperandName)
    '^'           reduce using rule 158 (OperandName)
    '/'           reduce using rule 158 (OperandName)
    '%'           reduce using rule 158 (OperandName)
    '&'           reduce using rule 158 (OperandName)
    $default      reduce using rule 5 (TypeName)


state 136

  133 BasicLit: IntegerValue .

    $default  reduce using rule 133 (BasicLit)


state 137

  134 BasicLit: FloatValue .

    $default  reduce using rule 134 (BasicLit)


state 138

  136 BasicLit: StringValue .

    $default  reduce using rule 136 (BasicLit)


state 139

  135 BasicLit: ImaginaryValue .

    $default  reduce using rule 135 (BasicLit)


state 140

   79 ChannelType: CHANNELOP . CHAN Type
  216 unary_op: CHANNELOP .

    CHAN  shift, and go to state 132

    CHAN      [reduce using rule 216 (unary_op)]
    $default  reduce using rule 216 (unary_op)


state 141

    3 Type: '(' . Type ')'
  129 Operand: '(' . Expression ')'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 263
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 264
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 142

   29 ArrayType: '[' . Expression ']' Type
   30 SliceType: '[' . ']' Type
  140 LiteralType: '[' . ARGS ']' Type

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    ARGS            shift, and go to state 265
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    ']'             shift, and go to state 143
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 167
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 143

   30 SliceType: '[' ']' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 266
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 144

   42 PointerType: '*' . Type
  214 unary_op: '*' .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 214 (unary_op)]
    INTERFACE   [reduce using rule 214 (unary_op)]
    CHAN        [reduce using rule 214 (unary_op)]
    MAP         [reduce using rule 214 (unary_op)]
    STRUCT      [reduce using rule 214 (unary_op)]
    ANY         [reduce using rule 214 (unary_op)]
    BOOL        [reduce using rule 214 (unary_op)]
    BYTE        [reduce using rule 214 (unary_op)]
    COMPARABLE  [reduce using rule 214 (unary_op)]
    INT         [reduce using rule 214 (unary_op)]
    COMPLEX     [reduce using rule 214 (unary_op)]
    ERROR       [reduce using rule 214 (unary_op)]
    FLOAT       [reduce using rule 214 (unary_op)]
    STRING      [reduce using rule 214 (unary_op)]
    RUNE        [reduce using rule 214 (unary_op)]
    IDENTIFIER  [reduce using rule 214 (unary_op)]
    CHANNELOP   [reduce using rule 214 (unary_op)]
    '('         [reduce using rule 214 (unary_op)]
    '['         [reduce using rule 214 (unary_op)]
    '*'         [reduce using rule 214 (unary_op)]
    '~'         [reduce using rule 214 (unary_op)]
    '|'         [reduce using rule 214 (unary_op)]
    $default    reduce using rule 214 (unary_op)

    Type            go to state 171
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 145

  210 unary_op: '+' .

    $default  reduce using rule 210 (unary_op)


state 146

  211 unary_op: '-' .

    $default  reduce using rule 211 (unary_op)


state 147

  213 unary_op: '^' .

    $default  reduce using rule 213 (unary_op)


state 148

  215 unary_op: '&' .

    $default  reduce using rule 215 (unary_op)


state 149

  212 unary_op: '!' .

    $default  reduce using rule 212 (unary_op)


state 150

   72 TypeElem: Type . TypeElem
  190 ParametersType: Type .
  217 Conversion: Type . '(' Expression ',' ')'
  218           | Type . '(' Expression ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 267
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 190 (ParametersType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 151

    1 Type: TypeName .
    2     | TypeName . TypeArgs
  143 LiteralType: TypeName .
  144            | TypeName . TypeArgs

    '['  shift, and go to state 177

    '['       [reduce using rule 1 (Type)]
    '{'       reduce using rule 143 (LiteralType)
    $default  reduce using rule 1 (Type)

    TypeArgs  go to state 268


state 152

    6 TypeName: QualifiedIdent .
  159 OperandName: QualifiedIdent .

    ARGS          reduce using rule 6 (TypeName)
    ARGS          [reduce using rule 159 (OperandName)]
    COLON         reduce using rule 159 (OperandName)
    SEMICOLON     reduce using rule 159 (OperandName)
    INCRE_DECRE   reduce using rule 159 (OperandName)
    LRSHIFT       reduce using rule 159 (OperandName)
    ARITH_ASSIGN  reduce using rule 159 (OperandName)
    AND           reduce using rule 159 (OperandName)
    OR            reduce using rule 159 (OperandName)
    COMPARE       reduce using rule 159 (OperandName)
    CHANNELOP     reduce using rule 6 (TypeName)
    CHANNELOP     [reduce using rule 159 (OperandName)]
    '('           reduce using rule 6 (TypeName)
    '('           [reduce using rule 159 (OperandName)]
    ')'           reduce using rule 6 (TypeName)
    ')'           [reduce using rule 159 (OperandName)]
    ','           reduce using rule 6 (TypeName)
    ','           [reduce using rule 159 (OperandName)]
    '['           reduce using rule 6 (TypeName)
    '['           [reduce using rule 159 (OperandName)]
    ']'           reduce using rule 159 (OperandName)
    '.'           reduce using rule 6 (TypeName)
    '.'           [reduce using rule 159 (OperandName)]
    '{'           reduce using rule 6 (TypeName)
    '{'           [reduce using rule 159 (OperandName)]
    '}'           reduce using rule 159 (OperandName)
    '*'           reduce using rule 6 (TypeName)
    '*'           [reduce using rule 159 (OperandName)]
    '|'           reduce using rule 6 (TypeName)
    '|'           [reduce using rule 159 (OperandName)]
    '='           reduce using rule 159 (OperandName)
    ':'           reduce using rule 159 (OperandName)
    '+'           reduce using rule 159 (OperandName)
    '-'           reduce using rule 159 (OperandName)
    '^'           reduce using rule 159 (OperandName)
    '/'           reduce using rule 159 (OperandName)
    '%'           reduce using rule 159 (OperandName)
    '&'           reduce using rule 159 (OperandName)
    $default      reduce using rule 6 (TypeName)


state 153

   10 TypeLit: ArrayType .
  139 LiteralType: ArrayType .

    '{'       reduce using rule 139 (LiteralType)
    $default  reduce using rule 10 (TypeLit)


state 154

   15 TypeLit: SliceType .
  141 LiteralType: SliceType .

    '{'       reduce using rule 141 (LiteralType)
    $default  reduce using rule 15 (TypeLit)


state 155

   11 TypeLit: StructType .
  138 LiteralType: StructType .

    '{'       reduce using rule 138 (LiteralType)
    $default  reduce using rule 11 (TypeLit)


state 156

   16 TypeLit: MapType .
  142 LiteralType: MapType .

    '{'       reduce using rule 142 (LiteralType)
    $default  reduce using rule 16 (TypeLit)


state 157

  160 PrimaryExpr: Operand .

    $default  reduce using rule 160 (PrimaryExpr)


state 158

  126 Operand: Literal .

    $default  reduce using rule 126 (Operand)


state 159

  130 Literal: BasicLit .

    $default  reduce using rule 130 (Literal)


state 160

  131 Literal: CompositeLit .

    $default  reduce using rule 131 (Literal)


state 161

  137 CompositeLit: LiteralType . LiteralValue

    '{'  shift, and go to state 269

    LiteralValue  go to state 270


state 162

  132 Literal: FunctionLit .

    $default  reduce using rule 132 (Literal)


state 163

  127 Operand: OperandName . TypeArgs
  128        | OperandName .

    '['  shift, and go to state 177

    '['       [reduce using rule 128 (Operand)]
    $default  reduce using rule 128 (Operand)

    TypeArgs  go to state 271


state 164

  163 PrimaryExpr: PrimaryExpr . Selector
  164            | PrimaryExpr . Index
  165            | PrimaryExpr . Slice
  166            | PrimaryExpr . TypeAssertion
  167            | PrimaryExpr . Arguments
  193 UnaryExpr: PrimaryExpr .

    '('  shift, and go to state 272
    '['  shift, and go to state 273
    '.'  shift, and go to state 274

    $default  reduce using rule 193 (UnaryExpr)

    Selector       go to state 275
    Index          go to state 276
    Slice          go to state 277
    TypeAssertion  go to state 278
    Arguments      go to state 279


state 165

  162 PrimaryExpr: MethodExpr .

    $default  reduce using rule 162 (PrimaryExpr)


state 166

  189 MethodExpr: ParametersType . '.' IDENTIFIER

    '.'  shift, and go to state 280


state 167

   29 ArrayType: '[' Expression . ']' Type
  192 Expression: Expression . binary_op Expression

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    ']'      shift, and go to state 285
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 168

  191 Expression: UnaryExpr .

    $default  reduce using rule 191 (Expression)


state 169

  194 UnaryExpr: unary_op . UnaryExpr

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    UnaryExpr       go to state 298
    unary_op        go to state 169
    Conversion      go to state 170


state 170

  161 PrimaryExpr: Conversion .

    $default  reduce using rule 161 (PrimaryExpr)


state 171

   42 PointerType: '*' Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 42 (PointerType)]
    INTERFACE   [reduce using rule 42 (PointerType)]
    CHAN        [reduce using rule 42 (PointerType)]
    MAP         [reduce using rule 42 (PointerType)]
    STRUCT      [reduce using rule 42 (PointerType)]
    ANY         [reduce using rule 42 (PointerType)]
    BOOL        [reduce using rule 42 (PointerType)]
    BYTE        [reduce using rule 42 (PointerType)]
    COMPARABLE  [reduce using rule 42 (PointerType)]
    INT         [reduce using rule 42 (PointerType)]
    COMPLEX     [reduce using rule 42 (PointerType)]
    ERROR       [reduce using rule 42 (PointerType)]
    FLOAT       [reduce using rule 42 (PointerType)]
    STRING      [reduce using rule 42 (PointerType)]
    RUNE        [reduce using rule 42 (PointerType)]
    IDENTIFIER  [reduce using rule 42 (PointerType)]
    CHANNELOP   [reduce using rule 42 (PointerType)]
    '('         [reduce using rule 42 (PointerType)]
    '['         [reduce using rule 42 (PointerType)]
    '*'         [reduce using rule 42 (PointerType)]
    '~'         [reduce using rule 42 (PointerType)]
    '|'         [reduce using rule 42 (PointerType)]
    $default    reduce using rule 42 (PointerType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 172

   72 TypeElem: Type . TypeElem
   73         | '~' Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 299
    MapType         go to state 93
    ChannelType     go to state 94


state 173

   73 TypeElem: '~' . Type TypeElem
   75         | '|' '~' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 300
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 174

   72 TypeElem: Type . TypeElem
   74         | '|' Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 74 (TypeElem)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 175

   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 176

   71 InterfaceType: TypeElem . SEMICOLON
   72 TypeElem: Type TypeElem .

    SEMICOLON  shift, and go to state 182

    SEMICOLON  [reduce using rule 72 (TypeElem)]
    $default   reduce using rule 72 (TypeElem)


state 177

    9 TypeArgs: '[' . TypeList ']'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 301
    TypeName        go to state 81
    TypeList        go to state 302
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 178

    2 Type: TypeName TypeArgs .

    $default  reduce using rule 2 (Type)


state 179

   47 Parameters: '(' ParameterList ')' .

    $default  reduce using rule 47 (Parameters)


state 180

   48 Parameters: '(' ParameterList ',' . ')'

    ')'  shift, and go to state 303


state 181

   50 ParameterList: ParameterDecl ',' . ParameterDecl

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 80
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterDecl   go to state 304
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 182

   71 InterfaceType: TypeElem SEMICOLON .

    $default  reduce using rule 71 (InterfaceType)


state 183

   54 ParameterDecl: IdentifierList ARGS . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 305
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 184

   52 ParameterDecl: IdentifierList Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 52 (ParameterDecl)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 185

  124 MethodDecl: FUNC Parameters IDENTIFIER Signature . FunctionBody
  125           | FUNC Parameters IDENTIFIER Signature .

    '{'  shift, and go to state 118

    $default  reduce using rule 125 (MethodDecl)

    FunctionBody  go to state 306
    Block         go to state 120


state 186

   91 ConstSpecLoop: ConstSpec SEMICOLON . ConstSpecLoop

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 92 (ConstSpecLoop)

    ConstSpec       go to state 97
    ConstSpecLoop   go to state 307
    IdentifierList  go to state 39


state 187

   87 ConstDecl: CONST '(' ConstSpecLoop ')' .

    $default  reduce using rule 87 (ConstDecl)


state 188

   93 IdentifierList: IdentifierList ',' IDENTIFIER .

    $default  reduce using rule 93 (IdentifierList)


state 189

   89 ConstSpec: IdentifierList '=' ExpressionList .
   95 ExpressionList: ExpressionList . ',' Expression

    ','  shift, and go to state 308

    $default  reduce using rule 89 (ConstSpec)


state 190

   96 ExpressionList: Expression .
  192 Expression: Expression . binary_op Expression

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 96 (ExpressionList)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 191

   88 ConstSpec: IdentifierList Type '=' . ExpressionList

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 309
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 192

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   56 InterfaceType: IDENTIFIER . '(' ')' SEMICOLON
   57              | IDENTIFIER . '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER . '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER . '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER . '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER . '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER . '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER . '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER . '(' ')' Type SEMICOLON
   69              | IDENTIFIER . '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER . '(' ParameterList ',' ')' Type SEMICOLON
   94 IdentifierList: IDENTIFIER .
  158 OperandName: IDENTIFIER .

    '('  shift, and go to state 130
    '.'  shift, and go to state 131

    FUNC          reduce using rule 5 (TypeName)
    FUNC          [reduce using rule 94 (IdentifierList)]
    INTERFACE     reduce using rule 5 (TypeName)
    INTERFACE     [reduce using rule 94 (IdentifierList)]
    CHAN          reduce using rule 5 (TypeName)
    CHAN          [reduce using rule 94 (IdentifierList)]
    MAP           reduce using rule 5 (TypeName)
    MAP           [reduce using rule 94 (IdentifierList)]
    STRUCT        reduce using rule 5 (TypeName)
    STRUCT        [reduce using rule 94 (IdentifierList)]
    ANY           reduce using rule 5 (TypeName)
    ANY           [reduce using rule 94 (IdentifierList)]
    BOOL          reduce using rule 5 (TypeName)
    BOOL          [reduce using rule 94 (IdentifierList)]
    BYTE          reduce using rule 5 (TypeName)
    BYTE          [reduce using rule 94 (IdentifierList)]
    COMPARABLE    reduce using rule 5 (TypeName)
    COMPARABLE    [reduce using rule 94 (IdentifierList)]
    INT           reduce using rule 5 (TypeName)
    INT           [reduce using rule 94 (IdentifierList)]
    COMPLEX       reduce using rule 5 (TypeName)
    COMPLEX       [reduce using rule 94 (IdentifierList)]
    ERROR         reduce using rule 5 (TypeName)
    ERROR         [reduce using rule 94 (IdentifierList)]
    FLOAT         reduce using rule 5 (TypeName)
    FLOAT         [reduce using rule 94 (IdentifierList)]
    STRING        reduce using rule 5 (TypeName)
    STRING        [reduce using rule 94 (IdentifierList)]
    RUNE          reduce using rule 5 (TypeName)
    RUNE          [reduce using rule 94 (IdentifierList)]
    IDENTIFIER    reduce using rule 5 (TypeName)
    IDENTIFIER    [reduce using rule 94 (IdentifierList)]
    COLON         reduce using rule 158 (OperandName)
    SEMICOLON     reduce using rule 158 (OperandName)
    GODEF         reduce using rule 94 (IdentifierList)
    INCRE_DECRE   reduce using rule 158 (OperandName)
    LRSHIFT       reduce using rule 158 (OperandName)
    ARITH_ASSIGN  reduce using rule 158 (OperandName)
    AND           reduce using rule 158 (OperandName)
    OR            reduce using rule 158 (OperandName)
    COMPARE       reduce using rule 158 (OperandName)
    CHANNELOP     reduce using rule 5 (TypeName)
    CHANNELOP     [reduce using rule 94 (IdentifierList)]
    CHANNELOP     [reduce using rule 158 (OperandName)]
    '('           [reduce using rule 5 (TypeName)]
    '('           [reduce using rule 94 (IdentifierList)]
    '('           [reduce using rule 158 (OperandName)]
    ','           reduce using rule 94 (IdentifierList)
    ','           [reduce using rule 158 (OperandName)]
    '['           reduce using rule 5 (TypeName)
    '['           [reduce using rule 94 (IdentifierList)]
    '['           [reduce using rule 158 (OperandName)]
    ']'           reduce using rule 158 (OperandName)
    '.'           [reduce using rule 5 (TypeName)]
    '.'           [reduce using rule 158 (OperandName)]
    '{'           reduce using rule 5 (TypeName)
    '{'           [reduce using rule 158 (OperandName)]
    '*'           reduce using rule 5 (TypeName)
    '*'           [reduce using rule 94 (IdentifierList)]
    '*'           [reduce using rule 158 (OperandName)]
    '~'           reduce using rule 5 (TypeName)
    '~'           [reduce using rule 94 (IdentifierList)]
    '|'           reduce using rule 5 (TypeName)
    '|'           [reduce using rule 94 (IdentifierList)]
    '|'           [reduce using rule 158 (OperandName)]
    '='           reduce using rule 158 (OperandName)
    '+'           reduce using rule 158 (OperandName)
    '-'           reduce using rule 158 (OperandName)
    '^'           reduce using rule 158 (OperandName)
    '/'           reduce using rule 158 (OperandName)
    '%'           reduce using rule 158 (OperandName)
    '&'           reduce using rule 158 (OperandName)
    $default      reduce using rule 5 (TypeName)


state 193

   72 TypeElem: Type . TypeElem
  103 AliasDecl: IDENTIFIER '=' Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 103 (AliasDecl)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 194

   72 TypeElem: Type . TypeElem
  105 TypeDef: IDENTIFIER TypeParameters Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 105 (TypeDef)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 195

  101 TypeSpecLoop: TypeSpec SEMICOLON . TypeSpecLoop

    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 102 (TypeSpecLoop)

    TypeSpec      go to state 107
    TypeSpecLoop  go to state 310
    AliasDecl     go to state 43
    TypeDef       go to state 44


state 196

   98 TypeDecl: TYPE '(' TypeSpecLoop ')' .

    $default  reduce using rule 98 (TypeDecl)


state 197

  116 VarSpecLoop: VarSpec SEMICOLON . VarSpecLoop

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 117 (VarSpecLoop)

    IdentifierList  go to state 46
    VarSpec         go to state 109
    VarSpecLoop     go to state 311


state 198

  112 VarDecl: VAR '(' VarSpecLoop ')' .

    $default  reduce using rule 112 (VarDecl)


state 199

   95 ExpressionList: ExpressionList . ',' Expression
  115 VarSpec: IdentifierList '=' ExpressionList .

    ','  shift, and go to state 308

    $default  reduce using rule 115 (VarSpec)


state 200

  113 VarSpec: IdentifierList Type '=' . ExpressionList

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 312
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 201

   71 InterfaceType: TypeElem . SEMICOLON
  110 TypeParamDecl: IdentifierList TypeElem .

    SEMICOLON  shift, and go to state 182

    $default  reduce using rule 110 (TypeParamDecl)


state 202

  107 TypeParameters: '[' TypeParamList ',' . ']'
  108 TypeParamList: TypeParamList ',' . TypeParamDecl

    IDENTIFIER  shift, and go to state 36
    ']'         shift, and go to state 313

    IdentifierList  go to state 115
    TypeParamDecl   go to state 314


state 203

  106 TypeParameters: '[' TypeParamList ']' .

    $default  reduce using rule 106 (TypeParameters)


state 204

  252 BreakStmt: BREAK . IDENTIFIER
  253          | BREAK .

    IDENTIFIER  shift, and go to state 315

    $default  reduce using rule 253 (BreakStmt)


state 205

  287 SelectStmt: SELECT . '{' CommClauseLoop '}'

    '{'  shift, and go to state 316


state 206

  268 ExprSwitchStmt: SWITCH . SimpleStmtBrakets ExpressionBrakets '{' ExprCaseClauseLoop '}'
  278 TypeSwitchStmt: SWITCH . SimpleStmtBrakets TypeSwitchGuard '{' TypeCaseClauseLoop '}'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 192
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    FUNC            [reduce using rule 270 (SimpleStmtBrakets)]
    INTERFACE       [reduce using rule 270 (SimpleStmtBrakets)]
    CHAN            [reduce using rule 270 (SimpleStmtBrakets)]
    MAP             [reduce using rule 270 (SimpleStmtBrakets)]
    STRUCT          [reduce using rule 270 (SimpleStmtBrakets)]
    ANY             [reduce using rule 270 (SimpleStmtBrakets)]
    BOOL            [reduce using rule 270 (SimpleStmtBrakets)]
    BYTE            [reduce using rule 270 (SimpleStmtBrakets)]
    COMPARABLE      [reduce using rule 270 (SimpleStmtBrakets)]
    INT             [reduce using rule 270 (SimpleStmtBrakets)]
    COMPLEX         [reduce using rule 270 (SimpleStmtBrakets)]
    ERROR           [reduce using rule 270 (SimpleStmtBrakets)]
    FLOAT           [reduce using rule 270 (SimpleStmtBrakets)]
    STRING          [reduce using rule 270 (SimpleStmtBrakets)]
    RUNE            [reduce using rule 270 (SimpleStmtBrakets)]
    IDENTIFIER      [reduce using rule 270 (SimpleStmtBrakets)]
    IntegerValue    [reduce using rule 270 (SimpleStmtBrakets)]
    FloatValue      [reduce using rule 270 (SimpleStmtBrakets)]
    StringValue     [reduce using rule 270 (SimpleStmtBrakets)]
    ImaginaryValue  [reduce using rule 270 (SimpleStmtBrakets)]
    CHANNELOP       [reduce using rule 270 (SimpleStmtBrakets)]
    '('             [reduce using rule 270 (SimpleStmtBrakets)]
    '['             [reduce using rule 270 (SimpleStmtBrakets)]
    '{'             reduce using rule 270 (SimpleStmtBrakets)
    '*'             [reduce using rule 270 (SimpleStmtBrakets)]
    '~'             [reduce using rule 270 (SimpleStmtBrakets)]
    '|'             [reduce using rule 270 (SimpleStmtBrakets)]
    '+'             [reduce using rule 270 (SimpleStmtBrakets)]
    '-'             [reduce using rule 270 (SimpleStmtBrakets)]
    '^'             [reduce using rule 270 (SimpleStmtBrakets)]
    '&'             [reduce using rule 270 (SimpleStmtBrakets)]
    '!'             [reduce using rule 270 (SimpleStmtBrakets)]
    $default        reduce using rule 241 (EmptyStmt)

    Type               go to state 150
    TypeName           go to state 151
    TypeLit            go to state 82
    QualifiedIdent     go to state 152
    ArrayType          go to state 153
    SliceType          go to state 154
    StructType         go to state 155
    PointerType        go to state 87
    FunctionType       go to state 88
    InterfaceType      go to state 91
    TypeElem           go to state 92
    MapType            go to state 156
    ChannelType        go to state 94
    IdentifierList     go to state 217
    ExpressionList     go to state 218
    ShortVarDecl       go to state 219
    Operand            go to state 157
    Literal            go to state 158
    BasicLit           go to state 159
    CompositeLit       go to state 160
    LiteralType        go to state 161
    FunctionLit        go to state 162
    OperandName        go to state 163
    PrimaryExpr        go to state 164
    MethodExpr         go to state 165
    ParametersType     go to state 166
    Expression         go to state 220
    UnaryExpr          go to state 168
    unary_op           go to state 169
    Conversion         go to state 170
    SimpleStmt         go to state 317
    EmptyStmt          go to state 224
    ExpressionStmt     go to state 225
    SendStmt           go to state 226
    Channel            go to state 227
    IncDecStmt         go to state 228
    Assignment         go to state 229
    SimpleStmtBrakets  go to state 318


state 207

  257 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 257 (FallthroughStmt)


state 208

  261 IfStmt: IF . SimpleStmt SEMICOLON Expression Block ELSE IfStmt
  262       | IF . SimpleStmt SEMICOLON Expression Block ELSE Block
  263       | IF . Expression Block ELSE IfStmt
  264       | IF . Expression Block ELSE Block
  265       | IF . Expression Block

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 192
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 241 (EmptyStmt)

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    IdentifierList  go to state 217
    ExpressionList  go to state 218
    ShortVarDecl    go to state 219
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 319
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170
    SimpleStmt      go to state 320
    EmptyStmt       go to state 224
    ExpressionStmt  go to state 225
    SendStmt        go to state 226
    Channel         go to state 227
    IncDecStmt      go to state 228
    Assignment      go to state 229


state 209

  256 GotoStmt: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 321


state 210

  298 ForStmt: FOR . ForClauseBracket Block

    RANGE           shift, and go to state 322
    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 192
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    SEMICOLON  reduce using rule 241 (EmptyStmt)
    SEMICOLON  [reduce using rule 307 (InitStmtBracket)]
    '{'        reduce using rule 302 (ForClauseBracket)
    $default   reduce using rule 241 (EmptyStmt)

    Type              go to state 150
    TypeName          go to state 151
    TypeLit           go to state 82
    QualifiedIdent    go to state 152
    ArrayType         go to state 153
    SliceType         go to state 154
    StructType        go to state 155
    PointerType       go to state 87
    FunctionType      go to state 88
    InterfaceType     go to state 91
    TypeElem          go to state 92
    MapType           go to state 156
    ChannelType       go to state 94
    IdentifierList    go to state 323
    ExpressionList    go to state 324
    ShortVarDecl      go to state 219
    Operand           go to state 157
    Literal           go to state 158
    BasicLit          go to state 159
    CompositeLit      go to state 160
    LiteralType       go to state 161
    FunctionLit       go to state 162
    OperandName       go to state 163
    PrimaryExpr       go to state 164
    MethodExpr        go to state 165
    ParametersType    go to state 166
    Expression        go to state 325
    UnaryExpr         go to state 168
    unary_op          go to state 169
    Conversion        go to state 170
    SimpleStmt        go to state 326
    EmptyStmt         go to state 224
    ExpressionStmt    go to state 225
    SendStmt          go to state 226
    Channel           go to state 227
    IncDecStmt        go to state 228
    Assignment        go to state 229
    ForClauseBracket  go to state 327
    Condition         go to state 328
    ForClause         go to state 329
    InitStmt          go to state 330
    InitStmtBracket   go to state 331
    RangeClause       go to state 332


state 211

  254 ContinueStmt: CONTINUE . IDENTIFIER
  255             | CONTINUE .

    IDENTIFIER  shift, and go to state 333

    $default  reduce using rule 255 (ContinueStmt)


state 212

  315 DeferStmt: DEFER . Expression

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 334
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 213

  250 ReturnStmt: RETURN . ExpressionList
  251           | RETURN .

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 251 (ReturnStmt)

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 335
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 214

  249 GoStmt: GO . Expression

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 336
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 215

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   56 InterfaceType: IDENTIFIER . '(' ')' SEMICOLON
   57              | IDENTIFIER . '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER . '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER . '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER . '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER . '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER . '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER . '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER . '(' ')' Type SEMICOLON
   69              | IDENTIFIER . '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER . '(' ParameterList ',' ')' Type SEMICOLON
   94 IdentifierList: IDENTIFIER .
  158 OperandName: IDENTIFIER .
  234 LabeledStmt: IDENTIFIER . COLON Statement

    COLON  shift, and go to state 337
    '('    shift, and go to state 130
    '.'    shift, and go to state 131

    SEMICOLON     reduce using rule 158 (OperandName)
    GODEF         reduce using rule 94 (IdentifierList)
    INCRE_DECRE   reduce using rule 158 (OperandName)
    LRSHIFT       reduce using rule 158 (OperandName)
    ARITH_ASSIGN  reduce using rule 158 (OperandName)
    AND           reduce using rule 158 (OperandName)
    OR            reduce using rule 158 (OperandName)
    COMPARE       reduce using rule 158 (OperandName)
    CHANNELOP     reduce using rule 5 (TypeName)
    CHANNELOP     [reduce using rule 158 (OperandName)]
    '('           [reduce using rule 5 (TypeName)]
    '('           [reduce using rule 158 (OperandName)]
    ','           reduce using rule 94 (IdentifierList)
    ','           [reduce using rule 158 (OperandName)]
    '['           reduce using rule 5 (TypeName)
    '['           [reduce using rule 158 (OperandName)]
    '.'           [reduce using rule 5 (TypeName)]
    '.'           [reduce using rule 158 (OperandName)]
    '*'           reduce using rule 5 (TypeName)
    '*'           [reduce using rule 158 (OperandName)]
    '|'           reduce using rule 5 (TypeName)
    '|'           [reduce using rule 158 (OperandName)]
    '='           reduce using rule 158 (OperandName)
    '+'           reduce using rule 158 (OperandName)
    '-'           reduce using rule 158 (OperandName)
    '^'           reduce using rule 158 (OperandName)
    '/'           reduce using rule 158 (OperandName)
    '%'           reduce using rule 158 (OperandName)
    '&'           reduce using rule 158 (OperandName)
    $default      reduce using rule 5 (TypeName)


state 216

  219 Statement: Declaration .

    $default  reduce using rule 219 (Statement)


state 217

   93 IdentifierList: IdentifierList . ',' IDENTIFIER
  118 ShortVarDecl: IdentifierList . GODEF ExpressionList

    GODEF  shift, and go to state 338
    ','    shift, and go to state 100


state 218

   95 ExpressionList: ExpressionList . ',' Expression
  246 Assignment: ExpressionList . assign_op ExpressionList

    ARITH_ASSIGN  shift, and go to state 339
    ','           shift, and go to state 308
    '='           shift, and go to state 340

    assign_op  go to state 341


state 219

  240 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 240 (SimpleStmt)


state 220

   96 ExpressionList: Expression .
  192 Expression: Expression . binary_op Expression
  242 ExpressionStmt: Expression .
  244 Channel: Expression .
  245 IncDecStmt: Expression . INCRE_DECRE

    INCRE_DECRE  shift, and go to state 342
    LRSHIFT      shift, and go to state 281
    AND          shift, and go to state 282
    OR           shift, and go to state 283
    COMPARE      shift, and go to state 284
    '*'          shift, and go to state 286
    '|'          shift, and go to state 287
    '+'          shift, and go to state 288
    '-'          shift, and go to state 289
    '^'          shift, and go to state 290
    '/'          shift, and go to state 291
    '%'          shift, and go to state 292
    '&'          shift, and go to state 293

    SEMICOLON  reduce using rule 242 (ExpressionStmt)
    CHANNELOP  reduce using rule 244 (Channel)
    '{'        reduce using rule 242 (ExpressionStmt)
    $default   reduce using rule 96 (ExpressionList)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 221

  259 StatementList: Statement . SEMICOLON StatementList

    SEMICOLON  shift, and go to state 343


state 222

  220 Statement: LabeledStmt .

    $default  reduce using rule 220 (Statement)


state 223

  221 Statement: SimpleStmt .

    $default  reduce using rule 221 (Statement)


state 224

  235 SimpleStmt: EmptyStmt .

    $default  reduce using rule 235 (SimpleStmt)


state 225

  236 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 236 (SimpleStmt)


state 226

  237 SimpleStmt: SendStmt .

    $default  reduce using rule 237 (SimpleStmt)


state 227

  243 SendStmt: Channel . CHANNELOP Expression

    CHANNELOP  shift, and go to state 344


state 228

  238 SimpleStmt: IncDecStmt .

    $default  reduce using rule 238 (SimpleStmt)


state 229

  239 SimpleStmt: Assignment .

    $default  reduce using rule 239 (SimpleStmt)


state 230

  222 Statement: GoStmt .

    $default  reduce using rule 222 (Statement)


state 231

  223 Statement: ReturnStmt .

    $default  reduce using rule 223 (Statement)


state 232

  224 Statement: BreakStmt .

    $default  reduce using rule 224 (Statement)


state 233

  225 Statement: ContinueStmt .

    $default  reduce using rule 225 (Statement)


state 234

  226 Statement: GotoStmt .

    $default  reduce using rule 226 (Statement)


state 235

  227 Statement: FallthroughStmt .

    $default  reduce using rule 227 (Statement)


state 236

  228 Statement: Block .

    $default  reduce using rule 228 (Statement)


state 237

  258 Block: '{' StatementList . '}'

    '}'  shift, and go to state 345


state 238

  229 Statement: IfStmt .

    $default  reduce using rule 229 (Statement)


state 239

  230 Statement: SwitchStmt .

    $default  reduce using rule 230 (Statement)


state 240

  266 SwitchStmt: ExprSwitchStmt .

    $default  reduce using rule 266 (SwitchStmt)


state 241

  267 SwitchStmt: TypeSwitchStmt .

    $default  reduce using rule 267 (SwitchStmt)


state 242

  231 Statement: SelectStmt .

    $default  reduce using rule 231 (Statement)


state 243

  232 Statement: ForStmt .

    $default  reduce using rule 232 (Statement)


state 244

  233 Statement: DeferStmt .

    $default  reduce using rule 233 (Statement)


state 245

  119 FunctionDecl: FUNC IDENTIFIER TypeParameters Signature FunctionBody .

    $default  reduce using rule 119 (FunctionDecl)


state 246

   14 TypeLit: InterfaceType .
   55 InterfaceType: INTERFACE '{' InterfaceType . '}'

    '}'  shift, and go to state 346

    $default  reduce using rule 14 (TypeLit)


state 247

   77 ChannelType: CHAN . Type
   78            | CHAN . CHANNELOP Type
   79            | CHANNELOP CHAN . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 126
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 347
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 248

   72 TypeElem: Type . TypeElem
   78 ChannelType: CHAN CHANNELOP Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 78 (ChannelType)]
    INTERFACE   [reduce using rule 78 (ChannelType)]
    CHAN        [reduce using rule 78 (ChannelType)]
    MAP         [reduce using rule 78 (ChannelType)]
    STRUCT      [reduce using rule 78 (ChannelType)]
    ANY         [reduce using rule 78 (ChannelType)]
    BOOL        [reduce using rule 78 (ChannelType)]
    BYTE        [reduce using rule 78 (ChannelType)]
    COMPARABLE  [reduce using rule 78 (ChannelType)]
    INT         [reduce using rule 78 (ChannelType)]
    COMPLEX     [reduce using rule 78 (ChannelType)]
    ERROR       [reduce using rule 78 (ChannelType)]
    FLOAT       [reduce using rule 78 (ChannelType)]
    STRING      [reduce using rule 78 (ChannelType)]
    RUNE        [reduce using rule 78 (ChannelType)]
    IDENTIFIER  [reduce using rule 78 (ChannelType)]
    CHANNELOP   [reduce using rule 78 (ChannelType)]
    '('         [reduce using rule 78 (ChannelType)]
    '['         [reduce using rule 78 (ChannelType)]
    '*'         [reduce using rule 78 (ChannelType)]
    '~'         [reduce using rule 78 (ChannelType)]
    '|'         [reduce using rule 78 (ChannelType)]
    $default    reduce using rule 78 (ChannelType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 249

   72 TypeElem: Type . TypeElem
   76 MapType: MAP '[' Type . ']' Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    ']'         shift, and go to state 348
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 250

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   94 IdentifierList: IDENTIFIER .

    '.'  shift, and go to state 131

    StringValue  reduce using rule 5 (TypeName)
    SEMICOLON    reduce using rule 5 (TypeName)
    '['          reduce using rule 5 (TypeName)
    '['          [reduce using rule 94 (IdentifierList)]
    $default     reduce using rule 94 (IdentifierList)


state 251

   39 EmbeddedField: '*' . TypeName
   41              | '*' . TypeName TypeArgs

    IDENTIFIER  shift, and go to state 349

    TypeName        go to state 350
    QualifiedIdent  go to state 83


state 252

   38 EmbeddedField: TypeName .
   40              | TypeName . TypeArgs

    '['  shift, and go to state 177

    $default  reduce using rule 38 (EmbeddedField)

    TypeArgs  go to state 351


state 253

   31 StructType: STRUCT '{' StructTypeLoop . '}'

    '}'  shift, and go to state 352


state 254

   32 StructTypeLoop: FieldDecl . SEMICOLON ';' StructTypeLoop

    SEMICOLON  shift, and go to state 353


state 255

   36 FieldDecl: EmbeddedField .
   37          | EmbeddedField . StringValue

    StringValue  shift, and go to state 354

    $default  reduce using rule 36 (FieldDecl)


state 256

   34 FieldDecl: IdentifierList . Type
   35          | IdentifierList . Type StringValue
   93 IdentifierList: IdentifierList . ',' IDENTIFIER

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ','         shift, and go to state 100
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 355
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 257

   56 InterfaceType: IDENTIFIER '(' ')' . SEMICOLON
   59              | IDENTIFIER '(' ')' . '(' ')' SEMICOLON
   62              | IDENTIFIER '(' ')' . '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER '(' ')' . '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER '(' ')' . Type SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 356
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 357
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 358
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 258

   57 InterfaceType: IDENTIFIER '(' ParameterList . ')' SEMICOLON
   58              | IDENTIFIER '(' ParameterList . ',' ')' SEMICOLON
   60              | IDENTIFIER '(' ParameterList . ')' '(' ')' SEMICOLON
   61              | IDENTIFIER '(' ParameterList . ',' ')' '(' ')' SEMICOLON
   63              | IDENTIFIER '(' ParameterList . ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER '(' ParameterList . ',' ')' '(' ParameterList ')' SEMICOLON
   66              | IDENTIFIER '(' ParameterList . ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList . ',' ')' '(' ParameterList ',' ')' SEMICOLON
   69              | IDENTIFIER '(' ParameterList . ')' Type SEMICOLON
   70              | IDENTIFIER '(' ParameterList . ',' ')' Type SEMICOLON

    ')'  shift, and go to state 359
    ','  shift, and go to state 360


state 259

   28 QualifiedIdent: IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 28 (QualifiedIdent)


state 260

   72 TypeElem: Type . TypeElem
   79 ChannelType: CHANNELOP CHAN Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 79 (ChannelType)]
    INTERFACE   [reduce using rule 79 (ChannelType)]
    CHAN        [reduce using rule 79 (ChannelType)]
    MAP         [reduce using rule 79 (ChannelType)]
    STRUCT      [reduce using rule 79 (ChannelType)]
    ANY         [reduce using rule 79 (ChannelType)]
    BOOL        [reduce using rule 79 (ChannelType)]
    BYTE        [reduce using rule 79 (ChannelType)]
    COMPARABLE  [reduce using rule 79 (ChannelType)]
    INT         [reduce using rule 79 (ChannelType)]
    COMPLEX     [reduce using rule 79 (ChannelType)]
    ERROR       [reduce using rule 79 (ChannelType)]
    FLOAT       [reduce using rule 79 (ChannelType)]
    STRING      [reduce using rule 79 (ChannelType)]
    RUNE        [reduce using rule 79 (ChannelType)]
    IDENTIFIER  [reduce using rule 79 (ChannelType)]
    CHANNELOP   [reduce using rule 79 (ChannelType)]
    '('         [reduce using rule 79 (ChannelType)]
    '['         [reduce using rule 79 (ChannelType)]
    '*'         [reduce using rule 79 (ChannelType)]
    '~'         [reduce using rule 79 (ChannelType)]
    '|'         [reduce using rule 79 (ChannelType)]
    $default    reduce using rule 79 (ChannelType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 261

    3 Type: '(' Type ')' .

    $default  reduce using rule 3 (Type)


state 262

   43 FunctionType: FUNC Signature .
  157 FunctionLit: FUNC Signature . FunctionBody

    '{'  shift, and go to state 118

    $default  reduce using rule 43 (FunctionType)

    FunctionBody  go to state 361
    Block         go to state 120


state 263

    3 Type: '(' Type . ')'
   72 TypeElem: Type . TypeElem
  190 ParametersType: Type .
  217 Conversion: Type . '(' Expression ',' ')'
  218           | Type . '(' Expression ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 267
    ')'         shift, and go to state 261
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 190 (ParametersType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 264

  129 Operand: '(' Expression . ')'
  192 Expression: Expression . binary_op Expression

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    ')'      shift, and go to state 362
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 265

  140 LiteralType: '[' ARGS . ']' Type

    ']'  shift, and go to state 363


state 266

   30 SliceType: '[' ']' Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 30 (SliceType)]
    INTERFACE   [reduce using rule 30 (SliceType)]
    CHAN        [reduce using rule 30 (SliceType)]
    MAP         [reduce using rule 30 (SliceType)]
    STRUCT      [reduce using rule 30 (SliceType)]
    ANY         [reduce using rule 30 (SliceType)]
    BOOL        [reduce using rule 30 (SliceType)]
    BYTE        [reduce using rule 30 (SliceType)]
    COMPARABLE  [reduce using rule 30 (SliceType)]
    INT         [reduce using rule 30 (SliceType)]
    COMPLEX     [reduce using rule 30 (SliceType)]
    ERROR       [reduce using rule 30 (SliceType)]
    FLOAT       [reduce using rule 30 (SliceType)]
    STRING      [reduce using rule 30 (SliceType)]
    RUNE        [reduce using rule 30 (SliceType)]
    IDENTIFIER  [reduce using rule 30 (SliceType)]
    CHANNELOP   [reduce using rule 30 (SliceType)]
    '('         [reduce using rule 30 (SliceType)]
    '['         [reduce using rule 30 (SliceType)]
    '*'         [reduce using rule 30 (SliceType)]
    '~'         [reduce using rule 30 (SliceType)]
    '|'         [reduce using rule 30 (SliceType)]
    $default    reduce using rule 30 (SliceType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 267

    3 Type: '(' . Type ')'
  217 Conversion: Type '(' . Expression ',' ')'
  218           | Type '(' . Expression ')'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 263
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 364
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 268

    2 Type: TypeName TypeArgs .
  144 LiteralType: TypeName TypeArgs .

    '{'       reduce using rule 144 (LiteralType)
    $default  reduce using rule 2 (Type)


state 269

  145 LiteralValue: '{' . ElementList ',' '}'
  146             | '{' . ElementList '}'
  147             | '{' . '}'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 365
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '{'             shift, and go to state 269
    '}'             shift, and go to state 366
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    LiteralValue    go to state 367
    KeyedElement    go to state 368
    ElementList     go to state 369
    Key             go to state 370
    Element         go to state 371
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 372
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 270

  137 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 137 (CompositeLit)


state 271

  127 Operand: OperandName TypeArgs .

    $default  reduce using rule 127 (Operand)


state 272

  175 Arguments: '(' . ArgumentsLoop ')'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 188 (ArgumentsLoop)

    Type            go to state 373
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 374
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    ArgumentsLoop   go to state 375
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 273

  169 Index: '[' . Expression ']'
  170 Slice: '[' . ExpressionLoop COLON ExpressionLoop ']'
  171      | '[' . ExpressionLoop COLON Expression COLON Expression ']'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 173 (ExpressionLoop)

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    ExpressionLoop  go to state 376
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 377
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 274

  168 Selector: '.' . IDENTIFIER
  174 TypeAssertion: '.' . '(' Type ')'

    IDENTIFIER  shift, and go to state 378
    '('         shift, and go to state 379


state 275

  163 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 163 (PrimaryExpr)


state 276

  164 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 164 (PrimaryExpr)


state 277

  165 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 165 (PrimaryExpr)


state 278

  166 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 166 (PrimaryExpr)


state 279

  167 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 167 (PrimaryExpr)


state 280

  189 MethodExpr: ParametersType '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 380


state 281

  208 mul_op: LRSHIFT .

    $default  reduce using rule 208 (mul_op)


state 282

  195 binary_op: AND .

    $default  reduce using rule 195 (binary_op)


state 283

  196 binary_op: OR .

    $default  reduce using rule 196 (binary_op)


state 284

  200 rel_op: COMPARE .

    $default  reduce using rule 200 (rel_op)


state 285

   29 ArrayType: '[' Expression ']' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 381
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 286

  205 mul_op: '*' .

    $default  reduce using rule 205 (mul_op)


state 287

  203 add_op: '|' .

    $default  reduce using rule 203 (add_op)


state 288

  201 add_op: '+' .

    $default  reduce using rule 201 (add_op)


state 289

  202 add_op: '-' .

    $default  reduce using rule 202 (add_op)


state 290

  204 add_op: '^' .

    $default  reduce using rule 204 (add_op)


state 291

  206 mul_op: '/' .

    $default  reduce using rule 206 (mul_op)


state 292

  207 mul_op: '%' .

    $default  reduce using rule 207 (mul_op)


state 293

  209 mul_op: '&' .

    $default  reduce using rule 209 (mul_op)


state 294

  192 Expression: Expression binary_op . Expression

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 382
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 295

  197 binary_op: rel_op .

    $default  reduce using rule 197 (binary_op)


state 296

  198 binary_op: add_op .

    $default  reduce using rule 198 (binary_op)


state 297

  199 binary_op: mul_op .

    $default  reduce using rule 199 (binary_op)


state 298

  194 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 194 (UnaryExpr)


state 299

   71 InterfaceType: TypeElem . SEMICOLON
   72 TypeElem: Type TypeElem .
   73         | '~' Type TypeElem .

    SEMICOLON  shift, and go to state 182

    SEMICOLON  [reduce using rule 72 (TypeElem)]
    SEMICOLON  [reduce using rule 73 (TypeElem)]
    $default   reduce using rule 73 (TypeElem)


state 300

   72 TypeElem: Type . TypeElem
   73         | '~' Type . TypeElem
   75         | '|' '~' Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 75 (TypeElem)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 299
    MapType         go to state 93
    ChannelType     go to state 94


state 301

    8 TypeList: Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 8 (TypeList)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 302

    7 TypeList: TypeList . ',' Type
    9 TypeArgs: '[' TypeList . ']'

    ','  shift, and go to state 383
    ']'  shift, and go to state 384


state 303

   48 Parameters: '(' ParameterList ',' ')' .

    $default  reduce using rule 48 (Parameters)


state 304

   50 ParameterList: ParameterDecl ',' ParameterDecl .

    $default  reduce using rule 50 (ParameterList)


state 305

   54 ParameterDecl: IdentifierList ARGS Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 54 (ParameterDecl)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 306

  124 MethodDecl: FUNC Parameters IDENTIFIER Signature FunctionBody .

    $default  reduce using rule 124 (MethodDecl)


state 307

   91 ConstSpecLoop: ConstSpec SEMICOLON ConstSpecLoop .

    $default  reduce using rule 91 (ConstSpecLoop)


state 308

   95 ExpressionList: ExpressionList ',' . Expression

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 385
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 309

   88 ConstSpec: IdentifierList Type '=' ExpressionList .
   95 ExpressionList: ExpressionList . ',' Expression

    ','  shift, and go to state 308

    $default  reduce using rule 88 (ConstSpec)


state 310

  101 TypeSpecLoop: TypeSpec SEMICOLON TypeSpecLoop .

    $default  reduce using rule 101 (TypeSpecLoop)


state 311

  116 VarSpecLoop: VarSpec SEMICOLON VarSpecLoop .

    $default  reduce using rule 116 (VarSpecLoop)


state 312

   95 ExpressionList: ExpressionList . ',' Expression
  113 VarSpec: IdentifierList Type '=' ExpressionList .

    ','  shift, and go to state 308

    $default  reduce using rule 113 (VarSpec)


state 313

  107 TypeParameters: '[' TypeParamList ',' ']' .

    $default  reduce using rule 107 (TypeParameters)


state 314

  108 TypeParamList: TypeParamList ',' TypeParamDecl .

    $default  reduce using rule 108 (TypeParamList)


state 315

  252 BreakStmt: BREAK IDENTIFIER .

    $default  reduce using rule 252 (BreakStmt)


state 316

  287 SelectStmt: SELECT '{' . CommClauseLoop '}'

    DEFAULT  shift, and go to state 386
    CASE     shift, and go to state 387

    COLON     reduce using rule 291 (CommCase)
    $default  reduce using rule 290 (CommClauseLoop)

    CommClause      go to state 388
    CommClauseLoop  go to state 389
    CommCase        go to state 390


state 317

  269 SimpleStmtBrakets: SimpleStmt . SEMICOLON

    SEMICOLON  shift, and go to state 391


state 318

  268 ExprSwitchStmt: SWITCH SimpleStmtBrakets . ExpressionBrakets '{' ExprCaseClauseLoop '}'
  278 TypeSwitchStmt: SWITCH SimpleStmtBrakets . TypeSwitchGuard '{' TypeCaseClauseLoop '}'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 392
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    FUNC            [reduce using rule 281 (IdetifierGodefBrakets)]
    INTERFACE       [reduce using rule 281 (IdetifierGodefBrakets)]
    CHAN            [reduce using rule 281 (IdetifierGodefBrakets)]
    MAP             [reduce using rule 281 (IdetifierGodefBrakets)]
    STRUCT          [reduce using rule 281 (IdetifierGodefBrakets)]
    ANY             [reduce using rule 281 (IdetifierGodefBrakets)]
    BOOL            [reduce using rule 281 (IdetifierGodefBrakets)]
    BYTE            [reduce using rule 281 (IdetifierGodefBrakets)]
    COMPARABLE      [reduce using rule 281 (IdetifierGodefBrakets)]
    INT             [reduce using rule 281 (IdetifierGodefBrakets)]
    COMPLEX         [reduce using rule 281 (IdetifierGodefBrakets)]
    ERROR           [reduce using rule 281 (IdetifierGodefBrakets)]
    FLOAT           [reduce using rule 281 (IdetifierGodefBrakets)]
    STRING          [reduce using rule 281 (IdetifierGodefBrakets)]
    RUNE            [reduce using rule 281 (IdetifierGodefBrakets)]
    IDENTIFIER      [reduce using rule 281 (IdetifierGodefBrakets)]
    IntegerValue    [reduce using rule 281 (IdetifierGodefBrakets)]
    FloatValue      [reduce using rule 281 (IdetifierGodefBrakets)]
    StringValue     [reduce using rule 281 (IdetifierGodefBrakets)]
    ImaginaryValue  [reduce using rule 281 (IdetifierGodefBrakets)]
    CHANNELOP       [reduce using rule 281 (IdetifierGodefBrakets)]
    '('             [reduce using rule 281 (IdetifierGodefBrakets)]
    '['             [reduce using rule 281 (IdetifierGodefBrakets)]
    '*'             [reduce using rule 281 (IdetifierGodefBrakets)]
    '~'             [reduce using rule 281 (IdetifierGodefBrakets)]
    '|'             [reduce using rule 281 (IdetifierGodefBrakets)]
    $default        reduce using rule 272 (ExpressionBrakets)

    Type                   go to state 150
    TypeName               go to state 151
    TypeLit                go to state 82
    QualifiedIdent         go to state 152
    ArrayType              go to state 153
    SliceType              go to state 154
    StructType             go to state 155
    PointerType            go to state 87
    FunctionType           go to state 88
    InterfaceType          go to state 91
    TypeElem               go to state 92
    MapType                go to state 156
    ChannelType            go to state 94
    Operand                go to state 157
    Literal                go to state 158
    BasicLit               go to state 159
    CompositeLit           go to state 160
    LiteralType            go to state 161
    FunctionLit            go to state 162
    OperandName            go to state 163
    PrimaryExpr            go to state 164
    MethodExpr             go to state 165
    ParametersType         go to state 166
    Expression             go to state 393
    UnaryExpr              go to state 168
    unary_op               go to state 169
    Conversion             go to state 170
    ExpressionBrakets      go to state 394
    TypeSwitchGuard        go to state 395
    IdetifierGodefBrakets  go to state 396


state 319

   96 ExpressionList: Expression .
  192 Expression: Expression . binary_op Expression
  242 ExpressionStmt: Expression .
  244 Channel: Expression .
  245 IncDecStmt: Expression . INCRE_DECRE
  263 IfStmt: IF Expression . Block ELSE IfStmt
  264       | IF Expression . Block ELSE Block
  265       | IF Expression . Block

    INCRE_DECRE  shift, and go to state 342
    LRSHIFT      shift, and go to state 281
    AND          shift, and go to state 282
    OR           shift, and go to state 283
    COMPARE      shift, and go to state 284
    '{'          shift, and go to state 118
    '*'          shift, and go to state 286
    '|'          shift, and go to state 287
    '+'          shift, and go to state 288
    '-'          shift, and go to state 289
    '^'          shift, and go to state 290
    '/'          shift, and go to state 291
    '%'          shift, and go to state 292
    '&'          shift, and go to state 293

    SEMICOLON  reduce using rule 242 (ExpressionStmt)
    CHANNELOP  reduce using rule 244 (Channel)
    $default   reduce using rule 96 (ExpressionList)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297
    Block      go to state 397


state 320

  261 IfStmt: IF SimpleStmt . SEMICOLON Expression Block ELSE IfStmt
  262       | IF SimpleStmt . SEMICOLON Expression Block ELSE Block

    SEMICOLON  shift, and go to state 398


state 321

  256 GotoStmt: GOTO IDENTIFIER .

    $default  reduce using rule 256 (GotoStmt)


state 322

  314 RangeClause: RANGE . Expression

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 399
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 323

   93 IdentifierList: IdentifierList . ',' IDENTIFIER
  118 ShortVarDecl: IdentifierList . GODEF ExpressionList
  313 RangeClause: IdentifierList . GODEF RANGE Expression

    GODEF  shift, and go to state 400
    ','    shift, and go to state 100


state 324

   95 ExpressionList: ExpressionList . ',' Expression
  246 Assignment: ExpressionList . assign_op ExpressionList
  312 RangeClause: ExpressionList . '=' RANGE Expression

    ARITH_ASSIGN  shift, and go to state 339
    ','           shift, and go to state 308
    '='           shift, and go to state 401

    assign_op  go to state 341


state 325

   96 ExpressionList: Expression .
  192 Expression: Expression . binary_op Expression
  242 ExpressionStmt: Expression .
  244 Channel: Expression .
  245 IncDecStmt: Expression . INCRE_DECRE
  303 Condition: Expression .

    INCRE_DECRE  shift, and go to state 342
    LRSHIFT      shift, and go to state 281
    AND          shift, and go to state 282
    OR           shift, and go to state 283
    COMPARE      shift, and go to state 284
    '*'          shift, and go to state 286
    '|'          shift, and go to state 287
    '+'          shift, and go to state 288
    '-'          shift, and go to state 289
    '^'          shift, and go to state 290
    '/'          shift, and go to state 291
    '%'          shift, and go to state 292
    '&'          shift, and go to state 293

    SEMICOLON  reduce using rule 242 (ExpressionStmt)
    CHANNELOP  reduce using rule 244 (Channel)
    '{'        reduce using rule 303 (Condition)
    $default   reduce using rule 96 (ExpressionList)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 326

  305 InitStmt: SimpleStmt .

    $default  reduce using rule 305 (InitStmt)


state 327

  298 ForStmt: FOR ForClauseBracket . Block

    '{'  shift, and go to state 118

    Block  go to state 402


state 328

  299 ForClauseBracket: Condition .

    $default  reduce using rule 299 (ForClauseBracket)


state 329

  300 ForClauseBracket: ForClause .

    $default  reduce using rule 300 (ForClauseBracket)


state 330

  306 InitStmtBracket: InitStmt .

    $default  reduce using rule 306 (InitStmtBracket)


state 331

  304 ForClause: InitStmtBracket . SEMICOLON ConditionBracket SEMICOLON PostStmtBracket

    SEMICOLON  shift, and go to state 403


state 332

  301 ForClauseBracket: RangeClause .

    $default  reduce using rule 301 (ForClauseBracket)


state 333

  254 ContinueStmt: CONTINUE IDENTIFIER .

    $default  reduce using rule 254 (ContinueStmt)


state 334

  192 Expression: Expression . binary_op Expression
  315 DeferStmt: DEFER Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 315 (DeferStmt)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 335

   95 ExpressionList: ExpressionList . ',' Expression
  250 ReturnStmt: RETURN ExpressionList .

    ','  shift, and go to state 308

    $default  reduce using rule 250 (ReturnStmt)


state 336

  192 Expression: Expression . binary_op Expression
  249 GoStmt: GO Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 249 (GoStmt)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 337

  234 LabeledStmt: IDENTIFIER COLON . Statement

    BREAK           shift, and go to state 204
    SELECT          shift, and go to state 205
    SWITCH          shift, and go to state 206
    FALLTHROUGH     shift, and go to state 207
    IF              shift, and go to state 208
    GOTO            shift, and go to state 209
    FOR             shift, and go to state 210
    CONTINUE        shift, and go to state 211
    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    DEFER           shift, and go to state 212
    RETURN          shift, and go to state 213
    GO              shift, and go to state 214
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 215
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '{'             shift, and go to state 118
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 241 (EmptyStmt)

    Type             go to state 150
    TypeName         go to state 151
    TypeLit          go to state 82
    QualifiedIdent   go to state 152
    ArrayType        go to state 153
    SliceType        go to state 154
    StructType       go to state 155
    PointerType      go to state 87
    FunctionType     go to state 88
    InterfaceType    go to state 91
    TypeElem         go to state 92
    MapType          go to state 156
    ChannelType      go to state 94
    Declaration      go to state 216
    ConstDecl        go to state 22
    IdentifierList   go to state 217
    ExpressionList   go to state 218
    TypeDecl         go to state 23
    VarDecl          go to state 24
    ShortVarDecl     go to state 219
    Operand          go to state 157
    Literal          go to state 158
    BasicLit         go to state 159
    CompositeLit     go to state 160
    LiteralType      go to state 161
    FunctionLit      go to state 162
    OperandName      go to state 163
    PrimaryExpr      go to state 164
    MethodExpr       go to state 165
    ParametersType   go to state 166
    Expression       go to state 220
    UnaryExpr        go to state 168
    unary_op         go to state 169
    Conversion       go to state 170
    Statement        go to state 404
    LabeledStmt      go to state 222
    SimpleStmt       go to state 223
    EmptyStmt        go to state 224
    ExpressionStmt   go to state 225
    SendStmt         go to state 226
    Channel          go to state 227
    IncDecStmt       go to state 228
    Assignment       go to state 229
    GoStmt           go to state 230
    ReturnStmt       go to state 231
    BreakStmt        go to state 232
    ContinueStmt     go to state 233
    GotoStmt         go to state 234
    FallthroughStmt  go to state 235
    Block            go to state 236
    IfStmt           go to state 238
    SwitchStmt       go to state 239
    ExprSwitchStmt   go to state 240
    TypeSwitchStmt   go to state 241
    SelectStmt       go to state 242
    ForStmt          go to state 243
    DeferStmt        go to state 244


state 338

  118 ShortVarDecl: IdentifierList GODEF . ExpressionList

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 405
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 339

  247 assign_op: ARITH_ASSIGN .

    $default  reduce using rule 247 (assign_op)


state 340

  248 assign_op: '=' .

    $default  reduce using rule 248 (assign_op)


state 341

  246 Assignment: ExpressionList assign_op . ExpressionList

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 406
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 342

  245 IncDecStmt: Expression INCRE_DECRE .

    $default  reduce using rule 245 (IncDecStmt)


state 343

  259 StatementList: Statement SEMICOLON . StatementList

    BREAK           shift, and go to state 204
    SELECT          shift, and go to state 205
    SWITCH          shift, and go to state 206
    FALLTHROUGH     shift, and go to state 207
    IF              shift, and go to state 208
    GOTO            shift, and go to state 209
    FOR             shift, and go to state 210
    CONTINUE        shift, and go to state 211
    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    DEFER           shift, and go to state 212
    RETURN          shift, and go to state 213
    GO              shift, and go to state 214
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 215
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '{'             shift, and go to state 118
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    SEMICOLON  reduce using rule 241 (EmptyStmt)
    $default   reduce using rule 260 (StatementList)

    Type             go to state 150
    TypeName         go to state 151
    TypeLit          go to state 82
    QualifiedIdent   go to state 152
    ArrayType        go to state 153
    SliceType        go to state 154
    StructType       go to state 155
    PointerType      go to state 87
    FunctionType     go to state 88
    InterfaceType    go to state 91
    TypeElem         go to state 92
    MapType          go to state 156
    ChannelType      go to state 94
    Declaration      go to state 216
    ConstDecl        go to state 22
    IdentifierList   go to state 217
    ExpressionList   go to state 218
    TypeDecl         go to state 23
    VarDecl          go to state 24
    ShortVarDecl     go to state 219
    Operand          go to state 157
    Literal          go to state 158
    BasicLit         go to state 159
    CompositeLit     go to state 160
    LiteralType      go to state 161
    FunctionLit      go to state 162
    OperandName      go to state 163
    PrimaryExpr      go to state 164
    MethodExpr       go to state 165
    ParametersType   go to state 166
    Expression       go to state 220
    UnaryExpr        go to state 168
    unary_op         go to state 169
    Conversion       go to state 170
    Statement        go to state 221
    LabeledStmt      go to state 222
    SimpleStmt       go to state 223
    EmptyStmt        go to state 224
    ExpressionStmt   go to state 225
    SendStmt         go to state 226
    Channel          go to state 227
    IncDecStmt       go to state 228
    Assignment       go to state 229
    GoStmt           go to state 230
    ReturnStmt       go to state 231
    BreakStmt        go to state 232
    ContinueStmt     go to state 233
    GotoStmt         go to state 234
    FallthroughStmt  go to state 235
    Block            go to state 236
    StatementList    go to state 407
    IfStmt           go to state 238
    SwitchStmt       go to state 239
    ExprSwitchStmt   go to state 240
    TypeSwitchStmt   go to state 241
    SelectStmt       go to state 242
    ForStmt          go to state 243
    DeferStmt        go to state 244


state 344

  243 SendStmt: Channel CHANNELOP . Expression

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 408
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 345

  258 Block: '{' StatementList '}' .

    $default  reduce using rule 258 (Block)


state 346

   55 InterfaceType: INTERFACE '{' InterfaceType '}' .

    $default  reduce using rule 55 (InterfaceType)


state 347

   72 TypeElem: Type . TypeElem
   77 ChannelType: CHAN Type .
   79            | CHANNELOP CHAN Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC         [reduce using rule 77 (ChannelType)]
    FUNC         [reduce using rule 79 (ChannelType)]
    INTERFACE    [reduce using rule 77 (ChannelType)]
    INTERFACE    [reduce using rule 79 (ChannelType)]
    ARGS         reduce using rule 77 (ChannelType)
    ARGS         [reduce using rule 79 (ChannelType)]
    CHAN         [reduce using rule 77 (ChannelType)]
    CHAN         [reduce using rule 79 (ChannelType)]
    MAP          [reduce using rule 77 (ChannelType)]
    MAP          [reduce using rule 79 (ChannelType)]
    STRUCT       [reduce using rule 77 (ChannelType)]
    STRUCT       [reduce using rule 79 (ChannelType)]
    ANY          [reduce using rule 77 (ChannelType)]
    ANY          [reduce using rule 79 (ChannelType)]
    BOOL         [reduce using rule 77 (ChannelType)]
    BOOL         [reduce using rule 79 (ChannelType)]
    BYTE         [reduce using rule 77 (ChannelType)]
    BYTE         [reduce using rule 79 (ChannelType)]
    COMPARABLE   [reduce using rule 77 (ChannelType)]
    COMPARABLE   [reduce using rule 79 (ChannelType)]
    INT          [reduce using rule 77 (ChannelType)]
    INT          [reduce using rule 79 (ChannelType)]
    COMPLEX      [reduce using rule 77 (ChannelType)]
    COMPLEX      [reduce using rule 79 (ChannelType)]
    ERROR        [reduce using rule 77 (ChannelType)]
    ERROR        [reduce using rule 79 (ChannelType)]
    FLOAT        [reduce using rule 77 (ChannelType)]
    FLOAT        [reduce using rule 79 (ChannelType)]
    STRING       [reduce using rule 77 (ChannelType)]
    STRING       [reduce using rule 79 (ChannelType)]
    RUNE         [reduce using rule 77 (ChannelType)]
    RUNE         [reduce using rule 79 (ChannelType)]
    IDENTIFIER   [reduce using rule 77 (ChannelType)]
    IDENTIFIER   [reduce using rule 79 (ChannelType)]
    StringValue  reduce using rule 77 (ChannelType)
    StringValue  [reduce using rule 79 (ChannelType)]
    COLON        reduce using rule 77 (ChannelType)
    COLON        [reduce using rule 79 (ChannelType)]
    SEMICOLON    reduce using rule 77 (ChannelType)
    SEMICOLON    [reduce using rule 79 (ChannelType)]
    CHANNELOP    [reduce using rule 77 (ChannelType)]
    CHANNELOP    [reduce using rule 79 (ChannelType)]
    '('          [reduce using rule 77 (ChannelType)]
    '('          [reduce using rule 79 (ChannelType)]
    ')'          reduce using rule 77 (ChannelType)
    ')'          [reduce using rule 79 (ChannelType)]
    ','          reduce using rule 77 (ChannelType)
    ','          [reduce using rule 79 (ChannelType)]
    '['          [reduce using rule 77 (ChannelType)]
    '['          [reduce using rule 79 (ChannelType)]
    ']'          reduce using rule 77 (ChannelType)
    ']'          [reduce using rule 79 (ChannelType)]
    '.'          reduce using rule 77 (ChannelType)
    '.'          [reduce using rule 79 (ChannelType)]
    '{'          reduce using rule 77 (ChannelType)
    '{'          [reduce using rule 79 (ChannelType)]
    '*'          [reduce using rule 77 (ChannelType)]
    '*'          [reduce using rule 79 (ChannelType)]
    '~'          [reduce using rule 77 (ChannelType)]
    '~'          [reduce using rule 79 (ChannelType)]
    '|'          [reduce using rule 77 (ChannelType)]
    '|'          [reduce using rule 79 (ChannelType)]
    '='          reduce using rule 77 (ChannelType)
    '='          [reduce using rule 79 (ChannelType)]
    $default     reduce using rule 77 (ChannelType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 348

   76 MapType: MAP '[' Type ']' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 409
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 349

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER

    '.'  shift, and go to state 131

    $default  reduce using rule 5 (TypeName)


state 350

   39 EmbeddedField: '*' TypeName .
   41              | '*' TypeName . TypeArgs

    '['  shift, and go to state 177

    $default  reduce using rule 39 (EmbeddedField)

    TypeArgs  go to state 410


state 351

   40 EmbeddedField: TypeName TypeArgs .

    $default  reduce using rule 40 (EmbeddedField)


state 352

   31 StructType: STRUCT '{' StructTypeLoop '}' .

    $default  reduce using rule 31 (StructType)


state 353

   32 StructTypeLoop: FieldDecl SEMICOLON . ';' StructTypeLoop

    ';'  shift, and go to state 411


state 354

   37 FieldDecl: EmbeddedField StringValue .

    $default  reduce using rule 37 (FieldDecl)


state 355

   34 FieldDecl: IdentifierList Type .
   35          | IdentifierList Type . StringValue
   72 TypeElem: Type . TypeElem

    FUNC         shift, and go to state 56
    INTERFACE    shift, and go to state 57
    CHAN         shift, and go to state 59
    MAP          shift, and go to state 60
    STRUCT       shift, and go to state 61
    ANY          shift, and go to state 62
    BOOL         shift, and go to state 63
    BYTE         shift, and go to state 64
    COMPARABLE   shift, and go to state 65
    INT          shift, and go to state 66
    COMPLEX      shift, and go to state 67
    ERROR        shift, and go to state 68
    FLOAT        shift, and go to state 69
    STRING       shift, and go to state 70
    RUNE         shift, and go to state 71
    IDENTIFIER   shift, and go to state 99
    StringValue  shift, and go to state 412
    CHANNELOP    shift, and go to state 73
    '('          shift, and go to state 74
    '['          shift, and go to state 76
    '*'          shift, and go to state 77
    '~'          shift, and go to state 78
    '|'          shift, and go to state 79

    $default  reduce using rule 34 (FieldDecl)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 356

   56 InterfaceType: IDENTIFIER '(' ')' SEMICOLON .

    $default  reduce using rule 56 (InterfaceType)


state 357

    3 Type: '(' . Type ')'
   59 InterfaceType: IDENTIFIER '(' ')' '(' . ')' SEMICOLON
   62              | IDENTIFIER '(' ')' '(' . ParameterList ')' SEMICOLON
   65              | IDENTIFIER '(' ')' '(' . ParameterList ',' ')' SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 413
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 414
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterList   go to state 415
    ParameterDecl   go to state 90
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 358

   68 InterfaceType: IDENTIFIER '(' ')' Type . SEMICOLON
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 416
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 359

   57 InterfaceType: IDENTIFIER '(' ParameterList ')' . SEMICOLON
   60              | IDENTIFIER '(' ParameterList ')' . '(' ')' SEMICOLON
   63              | IDENTIFIER '(' ParameterList ')' . '(' ParameterList ')' SEMICOLON
   66              | IDENTIFIER '(' ParameterList ')' . '(' ParameterList ',' ')' SEMICOLON
   69              | IDENTIFIER '(' ParameterList ')' . Type SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 417
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 418
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 419
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 360

   58 InterfaceType: IDENTIFIER '(' ParameterList ',' . ')' SEMICOLON
   61              | IDENTIFIER '(' ParameterList ',' . ')' '(' ')' SEMICOLON
   64              | IDENTIFIER '(' ParameterList ',' . ')' '(' ParameterList ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList ',' . ')' '(' ParameterList ',' ')' SEMICOLON
   70              | IDENTIFIER '(' ParameterList ',' . ')' Type SEMICOLON

    ')'  shift, and go to state 420


state 361

  157 FunctionLit: FUNC Signature FunctionBody .

    $default  reduce using rule 157 (FunctionLit)


state 362

  129 Operand: '(' Expression ')' .

    $default  reduce using rule 129 (Operand)


state 363

  140 LiteralType: '[' ARGS ']' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 421
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 364

  192 Expression: Expression . binary_op Expression
  217 Conversion: Type '(' Expression . ',' ')'
  218           | Type '(' Expression . ')'

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    ')'      shift, and go to state 422
    ','      shift, and go to state 423
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 365

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   56 InterfaceType: IDENTIFIER . '(' ')' SEMICOLON
   57              | IDENTIFIER . '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER . '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER . '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER . '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER . '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER . '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER . '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER . '(' ')' Type SEMICOLON
   69              | IDENTIFIER . '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER . '(' ParameterList ',' ')' Type SEMICOLON
  152 Key: IDENTIFIER .
  158 OperandName: IDENTIFIER .

    '('  shift, and go to state 130
    '.'  shift, and go to state 131

    LRSHIFT   reduce using rule 158 (OperandName)
    AND       reduce using rule 158 (OperandName)
    OR        reduce using rule 158 (OperandName)
    COMPARE   reduce using rule 158 (OperandName)
    '('       [reduce using rule 5 (TypeName)]
    '('       [reduce using rule 158 (OperandName)]
    ','       reduce using rule 158 (OperandName)
    '['       reduce using rule 5 (TypeName)
    '['       [reduce using rule 158 (OperandName)]
    '.'       [reduce using rule 5 (TypeName)]
    '.'       [reduce using rule 158 (OperandName)]
    '}'       reduce using rule 158 (OperandName)
    '*'       reduce using rule 5 (TypeName)
    '*'       [reduce using rule 158 (OperandName)]
    '|'       reduce using rule 5 (TypeName)
    '|'       [reduce using rule 158 (OperandName)]
    ':'       reduce using rule 152 (Key)
    ':'       [reduce using rule 158 (OperandName)]
    '+'       reduce using rule 158 (OperandName)
    '-'       reduce using rule 158 (OperandName)
    '^'       reduce using rule 158 (OperandName)
    '/'       reduce using rule 158 (OperandName)
    '%'       reduce using rule 158 (OperandName)
    '&'       reduce using rule 158 (OperandName)
    $default  reduce using rule 5 (TypeName)


state 366

  147 LiteralValue: '{' '}' .

    $default  reduce using rule 147 (LiteralValue)


state 367

  154 Key: LiteralValue .
  156 Element: LiteralValue .

    ':'       reduce using rule 154 (Key)
    $default  reduce using rule 156 (Element)


state 368

  151 ElementList: KeyedElement .

    $default  reduce using rule 151 (ElementList)


state 369

  145 LiteralValue: '{' ElementList . ',' '}'
  146             | '{' ElementList . '}'
  150 ElementList: ElementList . ',' KeyedElement

    ','  shift, and go to state 424
    '}'  shift, and go to state 425


state 370

  148 KeyedElement: Key . ':' Element

    ':'  shift, and go to state 426


state 371

  149 KeyedElement: Element .

    $default  reduce using rule 149 (KeyedElement)


state 372

  153 Key: Expression .
  155 Element: Expression .
  192 Expression: Expression . binary_op Expression

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    ':'       reduce using rule 153 (Key)
    $default  reduce using rule 155 (Element)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 373

   72 TypeElem: Type . TypeElem
  180 ArgumentsLoop: Type . ARGS ','
  181              | Type . ARGS
  182              | Type . ','
  183              | Type .
  184              | Type . ',' ExpressionList ARGS ','
  185              | Type . ',' ExpressionList ARGS
  186              | Type . ',' ExpressionList ','
  187              | Type . ',' ExpressionList
  190 ParametersType: Type .
  217 Conversion: Type . '(' Expression ',' ')'
  218           | Type . '(' Expression ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 427
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 267
    ','         shift, and go to state 428
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    '.'       reduce using rule 190 (ParametersType)
    $default  reduce using rule 183 (ArgumentsLoop)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 374

   95 ExpressionList: ExpressionList . ',' Expression
  176 ArgumentsLoop: ExpressionList . ARGS ','
  177              | ExpressionList . ARGS
  178              | ExpressionList . ','
  179              | ExpressionList .

    ARGS  shift, and go to state 429
    ','   shift, and go to state 430

    $default  reduce using rule 179 (ArgumentsLoop)


state 375

  175 Arguments: '(' ArgumentsLoop . ')'

    ')'  shift, and go to state 431


state 376

  170 Slice: '[' ExpressionLoop . COLON ExpressionLoop ']'
  171      | '[' ExpressionLoop . COLON Expression COLON Expression ']'

    COLON  shift, and go to state 432


state 377

  169 Index: '[' Expression . ']'
  172 ExpressionLoop: Expression .
  192 Expression: Expression . binary_op Expression

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    ']'      shift, and go to state 433
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 172 (ExpressionLoop)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 378

  168 Selector: '.' IDENTIFIER .

    $default  reduce using rule 168 (Selector)


state 379

  174 TypeAssertion: '.' '(' . Type ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 434
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 380

  189 MethodExpr: ParametersType '.' IDENTIFIER .

    $default  reduce using rule 189 (MethodExpr)


state 381

   29 ArrayType: '[' Expression ']' Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 29 (ArrayType)]
    INTERFACE   [reduce using rule 29 (ArrayType)]
    CHAN        [reduce using rule 29 (ArrayType)]
    MAP         [reduce using rule 29 (ArrayType)]
    STRUCT      [reduce using rule 29 (ArrayType)]
    ANY         [reduce using rule 29 (ArrayType)]
    BOOL        [reduce using rule 29 (ArrayType)]
    BYTE        [reduce using rule 29 (ArrayType)]
    COMPARABLE  [reduce using rule 29 (ArrayType)]
    INT         [reduce using rule 29 (ArrayType)]
    COMPLEX     [reduce using rule 29 (ArrayType)]
    ERROR       [reduce using rule 29 (ArrayType)]
    FLOAT       [reduce using rule 29 (ArrayType)]
    STRING      [reduce using rule 29 (ArrayType)]
    RUNE        [reduce using rule 29 (ArrayType)]
    IDENTIFIER  [reduce using rule 29 (ArrayType)]
    CHANNELOP   [reduce using rule 29 (ArrayType)]
    '('         [reduce using rule 29 (ArrayType)]
    '['         [reduce using rule 29 (ArrayType)]
    '*'         [reduce using rule 29 (ArrayType)]
    '~'         [reduce using rule 29 (ArrayType)]
    '|'         [reduce using rule 29 (ArrayType)]
    $default    reduce using rule 29 (ArrayType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 382

  192 Expression: Expression . binary_op Expression
  192           | Expression binary_op Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    LRSHIFT   [reduce using rule 192 (Expression)]
    AND       [reduce using rule 192 (Expression)]
    OR        [reduce using rule 192 (Expression)]
    COMPARE   [reduce using rule 192 (Expression)]
    '*'       [reduce using rule 192 (Expression)]
    '|'       [reduce using rule 192 (Expression)]
    '+'       [reduce using rule 192 (Expression)]
    '-'       [reduce using rule 192 (Expression)]
    '^'       [reduce using rule 192 (Expression)]
    '/'       [reduce using rule 192 (Expression)]
    '%'       [reduce using rule 192 (Expression)]
    '&'       [reduce using rule 192 (Expression)]
    $default  reduce using rule 192 (Expression)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 383

    7 TypeList: TypeList ',' . Type

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 435
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 384

    9 TypeArgs: '[' TypeList ']' .

    $default  reduce using rule 9 (TypeArgs)


state 385

   95 ExpressionList: ExpressionList ',' Expression .
  192 Expression: Expression . binary_op Expression

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 95 (ExpressionList)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 386

  293 CommCase: DEFAULT .

    $default  reduce using rule 293 (CommCase)


state 387

  292 CommCase: CASE . RecvStmt

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 192
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    IdentifierList  go to state 436
    ExpressionList  go to state 437
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 438
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170
    RecvStmt        go to state 439
    RecvExpr        go to state 440


state 388

  289 CommClauseLoop: CommClause . CommClauseLoop

    DEFAULT  shift, and go to state 386
    CASE     shift, and go to state 387

    COLON     reduce using rule 291 (CommCase)
    $default  reduce using rule 290 (CommClauseLoop)

    CommClause      go to state 388
    CommClauseLoop  go to state 441
    CommCase        go to state 390


state 389

  287 SelectStmt: SELECT '{' CommClauseLoop . '}'

    '}'  shift, and go to state 442


state 390

  288 CommClause: CommCase . COLON StatementList

    COLON  shift, and go to state 443


state 391

  269 SimpleStmtBrakets: SimpleStmt SEMICOLON .

    $default  reduce using rule 269 (SimpleStmtBrakets)


state 392

    5 TypeName: IDENTIFIER .
   28 QualifiedIdent: IDENTIFIER . '.' IDENTIFIER
   56 InterfaceType: IDENTIFIER . '(' ')' SEMICOLON
   57              | IDENTIFIER . '(' ParameterList ')' SEMICOLON
   58              | IDENTIFIER . '(' ParameterList ',' ')' SEMICOLON
   59              | IDENTIFIER . '(' ')' '(' ')' SEMICOLON
   60              | IDENTIFIER . '(' ParameterList ')' '(' ')' SEMICOLON
   61              | IDENTIFIER . '(' ParameterList ',' ')' '(' ')' SEMICOLON
   62              | IDENTIFIER . '(' ')' '(' ParameterList ')' SEMICOLON
   63              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ')' SEMICOLON
   64              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON
   65              | IDENTIFIER . '(' ')' '(' ParameterList ',' ')' SEMICOLON
   66              | IDENTIFIER . '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON
   67              | IDENTIFIER . '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON
   68              | IDENTIFIER . '(' ')' Type SEMICOLON
   69              | IDENTIFIER . '(' ParameterList ')' Type SEMICOLON
   70              | IDENTIFIER . '(' ParameterList ',' ')' Type SEMICOLON
  158 OperandName: IDENTIFIER .
  280 IdetifierGodefBrakets: IDENTIFIER . GODEF

    GODEF  shift, and go to state 444
    '('    shift, and go to state 130
    '.'    shift, and go to state 131

    LRSHIFT   reduce using rule 158 (OperandName)
    AND       reduce using rule 158 (OperandName)
    OR        reduce using rule 158 (OperandName)
    COMPARE   reduce using rule 158 (OperandName)
    '('       [reduce using rule 5 (TypeName)]
    '('       [reduce using rule 158 (OperandName)]
    '['       reduce using rule 5 (TypeName)
    '['       [reduce using rule 158 (OperandName)]
    '.'       [reduce using rule 5 (TypeName)]
    '.'       [reduce using rule 158 (OperandName)]
    '{'       reduce using rule 5 (TypeName)
    '{'       [reduce using rule 158 (OperandName)]
    '*'       reduce using rule 5 (TypeName)
    '*'       [reduce using rule 158 (OperandName)]
    '|'       reduce using rule 5 (TypeName)
    '|'       [reduce using rule 158 (OperandName)]
    '+'       reduce using rule 158 (OperandName)
    '-'       reduce using rule 158 (OperandName)
    '^'       reduce using rule 158 (OperandName)
    '/'       reduce using rule 158 (OperandName)
    '%'       reduce using rule 158 (OperandName)
    '&'       reduce using rule 158 (OperandName)
    $default  reduce using rule 5 (TypeName)


state 393

  192 Expression: Expression . binary_op Expression
  271 ExpressionBrakets: Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 271 (ExpressionBrakets)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 394

  268 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets . '{' ExprCaseClauseLoop '}'

    '{'  shift, and go to state 445


state 395

  278 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard . '{' TypeCaseClauseLoop '}'

    '{'  shift, and go to state 446


state 396

  279 TypeSwitchGuard: IdetifierGodefBrakets . PrimaryExpr '.' '(' Type ')'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 73
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 77
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 447
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Conversion      go to state 170


state 397

  263 IfStmt: IF Expression Block . ELSE IfStmt
  264       | IF Expression Block . ELSE Block
  265       | IF Expression Block .

    ELSE  shift, and go to state 448

    $default  reduce using rule 265 (IfStmt)


state 398

  261 IfStmt: IF SimpleStmt SEMICOLON . Expression Block ELSE IfStmt
  262       | IF SimpleStmt SEMICOLON . Expression Block ELSE Block

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 449
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 399

  192 Expression: Expression . binary_op Expression
  314 RangeClause: RANGE Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 314 (RangeClause)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 400

  118 ShortVarDecl: IdentifierList GODEF . ExpressionList
  313 RangeClause: IdentifierList GODEF . RANGE Expression

    RANGE           shift, and go to state 450
    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 405
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 401

  248 assign_op: '=' .
  312 RangeClause: ExpressionList '=' . RANGE Expression

    RANGE  shift, and go to state 451

    $default  reduce using rule 248 (assign_op)


state 402

  298 ForStmt: FOR ForClauseBracket Block .

    $default  reduce using rule 298 (ForStmt)


state 403

  304 ForClause: InitStmtBracket SEMICOLON . ConditionBracket SEMICOLON PostStmtBracket

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 309 (ConditionBracket)

    Type              go to state 150
    TypeName          go to state 151
    TypeLit           go to state 82
    QualifiedIdent    go to state 152
    ArrayType         go to state 153
    SliceType         go to state 154
    StructType        go to state 155
    PointerType       go to state 87
    FunctionType      go to state 88
    InterfaceType     go to state 91
    TypeElem          go to state 92
    MapType           go to state 156
    ChannelType       go to state 94
    Operand           go to state 157
    Literal           go to state 158
    BasicLit          go to state 159
    CompositeLit      go to state 160
    LiteralType       go to state 161
    FunctionLit       go to state 162
    OperandName       go to state 163
    PrimaryExpr       go to state 164
    MethodExpr        go to state 165
    ParametersType    go to state 166
    Expression        go to state 452
    UnaryExpr         go to state 168
    unary_op          go to state 169
    Conversion        go to state 170
    Condition         go to state 453
    ConditionBracket  go to state 454


state 404

  234 LabeledStmt: IDENTIFIER COLON Statement .

    $default  reduce using rule 234 (LabeledStmt)


state 405

   95 ExpressionList: ExpressionList . ',' Expression
  118 ShortVarDecl: IdentifierList GODEF ExpressionList .

    ','  shift, and go to state 308

    $default  reduce using rule 118 (ShortVarDecl)


state 406

   95 ExpressionList: ExpressionList . ',' Expression
  246 Assignment: ExpressionList assign_op ExpressionList .

    ','  shift, and go to state 308

    $default  reduce using rule 246 (Assignment)


state 407

  259 StatementList: Statement SEMICOLON StatementList .

    $default  reduce using rule 259 (StatementList)


state 408

  192 Expression: Expression . binary_op Expression
  243 SendStmt: Channel CHANNELOP Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 243 (SendStmt)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 409

   72 TypeElem: Type . TypeElem
   76 MapType: MAP '[' Type ']' Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    FUNC        [reduce using rule 76 (MapType)]
    INTERFACE   [reduce using rule 76 (MapType)]
    CHAN        [reduce using rule 76 (MapType)]
    MAP         [reduce using rule 76 (MapType)]
    STRUCT      [reduce using rule 76 (MapType)]
    ANY         [reduce using rule 76 (MapType)]
    BOOL        [reduce using rule 76 (MapType)]
    BYTE        [reduce using rule 76 (MapType)]
    COMPARABLE  [reduce using rule 76 (MapType)]
    INT         [reduce using rule 76 (MapType)]
    COMPLEX     [reduce using rule 76 (MapType)]
    ERROR       [reduce using rule 76 (MapType)]
    FLOAT       [reduce using rule 76 (MapType)]
    STRING      [reduce using rule 76 (MapType)]
    RUNE        [reduce using rule 76 (MapType)]
    IDENTIFIER  [reduce using rule 76 (MapType)]
    CHANNELOP   [reduce using rule 76 (MapType)]
    '('         [reduce using rule 76 (MapType)]
    '['         [reduce using rule 76 (MapType)]
    '*'         [reduce using rule 76 (MapType)]
    '~'         [reduce using rule 76 (MapType)]
    '|'         [reduce using rule 76 (MapType)]
    $default    reduce using rule 76 (MapType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 410

   41 EmbeddedField: '*' TypeName TypeArgs .

    $default  reduce using rule 41 (EmbeddedField)


state 411

   32 StructTypeLoop: FieldDecl SEMICOLON ';' . StructTypeLoop

    IDENTIFIER  shift, and go to state 250
    '*'         shift, and go to state 251

    $default  reduce using rule 33 (StructTypeLoop)

    TypeName        go to state 252
    QualifiedIdent  go to state 83
    StructTypeLoop  go to state 455
    FieldDecl       go to state 254
    EmbeddedField   go to state 255
    IdentifierList  go to state 256


state 412

   35 FieldDecl: IdentifierList Type StringValue .

    $default  reduce using rule 35 (FieldDecl)


state 413

   59 InterfaceType: IDENTIFIER '(' ')' '(' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 456


state 414

    3 Type: '(' Type . ')'
   51 ParameterDecl: Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 261
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    ')'       [reduce using rule 51 (ParameterDecl)]
    $default  reduce using rule 51 (ParameterDecl)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 415

   62 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList . ')' SEMICOLON
   65              | IDENTIFIER '(' ')' '(' ParameterList . ',' ')' SEMICOLON

    ')'  shift, and go to state 457
    ','  shift, and go to state 458


state 416

   68 InterfaceType: IDENTIFIER '(' ')' Type SEMICOLON .

    $default  reduce using rule 68 (InterfaceType)


state 417

   57 InterfaceType: IDENTIFIER '(' ParameterList ')' SEMICOLON .

    $default  reduce using rule 57 (InterfaceType)


state 418

    3 Type: '(' . Type ')'
   60 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' . ')' SEMICOLON
   63              | IDENTIFIER '(' ParameterList ')' '(' . ParameterList ')' SEMICOLON
   66              | IDENTIFIER '(' ParameterList ')' '(' . ParameterList ',' ')' SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 459
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 414
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterList   go to state 460
    ParameterDecl   go to state 90
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 419

   69 InterfaceType: IDENTIFIER '(' ParameterList ')' Type . SEMICOLON
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 461
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 420

   58 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' . SEMICOLON
   61              | IDENTIFIER '(' ParameterList ',' ')' . '(' ')' SEMICOLON
   64              | IDENTIFIER '(' ParameterList ',' ')' . '(' ParameterList ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList ',' ')' . '(' ParameterList ',' ')' SEMICOLON
   70              | IDENTIFIER '(' ParameterList ',' ')' . Type SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 462
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 463
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 464
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 421

   72 TypeElem: Type . TypeElem
  140 LiteralType: '[' ARGS ']' Type .

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 140 (LiteralType)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 422

  218 Conversion: Type '(' Expression ')' .

    $default  reduce using rule 218 (Conversion)


state 423

  217 Conversion: Type '(' Expression ',' . ')'

    ')'  shift, and go to state 465


state 424

  145 LiteralValue: '{' ElementList ',' . '}'
  150 ElementList: ElementList ',' . KeyedElement

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 365
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '{'             shift, and go to state 269
    '}'             shift, and go to state 466
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    LiteralValue    go to state 367
    KeyedElement    go to state 467
    Key             go to state 370
    Element         go to state 371
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 372
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 425

  146 LiteralValue: '{' ElementList '}' .

    $default  reduce using rule 146 (LiteralValue)


state 426

  148 KeyedElement: Key ':' . Element

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '{'             shift, and go to state 269
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    LiteralValue    go to state 468
    Element         go to state 469
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 470
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 427

  180 ArgumentsLoop: Type ARGS . ','
  181              | Type ARGS .

    ','  shift, and go to state 471

    $default  reduce using rule 181 (ArgumentsLoop)


state 428

  182 ArgumentsLoop: Type ',' .
  184              | Type ',' . ExpressionList ARGS ','
  185              | Type ',' . ExpressionList ARGS
  186              | Type ',' . ExpressionList ','
  187              | Type ',' . ExpressionList

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 182 (ArgumentsLoop)

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 472
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 429

  176 ArgumentsLoop: ExpressionList ARGS . ','
  177              | ExpressionList ARGS .

    ','  shift, and go to state 473

    $default  reduce using rule 177 (ArgumentsLoop)


state 430

   95 ExpressionList: ExpressionList ',' . Expression
  178 ArgumentsLoop: ExpressionList ',' .

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 178 (ArgumentsLoop)

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 385
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 431

  175 Arguments: '(' ArgumentsLoop ')' .

    $default  reduce using rule 175 (Arguments)


state 432

  170 Slice: '[' ExpressionLoop COLON . ExpressionLoop ']'
  171      | '[' ExpressionLoop COLON . Expression COLON Expression ']'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 173 (ExpressionLoop)

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    ExpressionLoop  go to state 474
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 475
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 433

  169 Index: '[' Expression ']' .

    $default  reduce using rule 169 (Index)


state 434

   72 TypeElem: Type . TypeElem
  174 TypeAssertion: '.' '(' Type . ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 476
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 435

    7 TypeList: TypeList ',' Type .
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    $default  reduce using rule 7 (TypeList)

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 436

   93 IdentifierList: IdentifierList . ',' IDENTIFIER
  295 RecvStmt: IdentifierList . GODEF RecvExpr

    GODEF  shift, and go to state 477
    ','    shift, and go to state 100


state 437

   95 ExpressionList: ExpressionList . ',' Expression
  294 RecvStmt: ExpressionList . '=' RecvExpr

    ','  shift, and go to state 308
    '='  shift, and go to state 478


state 438

   96 ExpressionList: Expression .
  192 Expression: Expression . binary_op Expression
  297 RecvExpr: Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    COLON     reduce using rule 297 (RecvExpr)
    $default  reduce using rule 96 (ExpressionList)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 439

  292 CommCase: CASE RecvStmt .

    $default  reduce using rule 292 (CommCase)


state 440

  296 RecvStmt: RecvExpr .

    $default  reduce using rule 296 (RecvStmt)


state 441

  289 CommClauseLoop: CommClause CommClauseLoop .

    $default  reduce using rule 289 (CommClauseLoop)


state 442

  287 SelectStmt: SELECT '{' CommClauseLoop '}' .

    $default  reduce using rule 287 (SelectStmt)


state 443

  288 CommClause: CommCase COLON . StatementList

    BREAK           shift, and go to state 204
    SELECT          shift, and go to state 205
    SWITCH          shift, and go to state 206
    FALLTHROUGH     shift, and go to state 207
    IF              shift, and go to state 208
    GOTO            shift, and go to state 209
    FOR             shift, and go to state 210
    CONTINUE        shift, and go to state 211
    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    DEFER           shift, and go to state 212
    RETURN          shift, and go to state 213
    GO              shift, and go to state 214
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 215
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '{'             shift, and go to state 118
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    SEMICOLON  reduce using rule 241 (EmptyStmt)
    $default   reduce using rule 260 (StatementList)

    Type             go to state 150
    TypeName         go to state 151
    TypeLit          go to state 82
    QualifiedIdent   go to state 152
    ArrayType        go to state 153
    SliceType        go to state 154
    StructType       go to state 155
    PointerType      go to state 87
    FunctionType     go to state 88
    InterfaceType    go to state 91
    TypeElem         go to state 92
    MapType          go to state 156
    ChannelType      go to state 94
    Declaration      go to state 216
    ConstDecl        go to state 22
    IdentifierList   go to state 217
    ExpressionList   go to state 218
    TypeDecl         go to state 23
    VarDecl          go to state 24
    ShortVarDecl     go to state 219
    Operand          go to state 157
    Literal          go to state 158
    BasicLit         go to state 159
    CompositeLit     go to state 160
    LiteralType      go to state 161
    FunctionLit      go to state 162
    OperandName      go to state 163
    PrimaryExpr      go to state 164
    MethodExpr       go to state 165
    ParametersType   go to state 166
    Expression       go to state 220
    UnaryExpr        go to state 168
    unary_op         go to state 169
    Conversion       go to state 170
    Statement        go to state 221
    LabeledStmt      go to state 222
    SimpleStmt       go to state 223
    EmptyStmt        go to state 224
    ExpressionStmt   go to state 225
    SendStmt         go to state 226
    Channel          go to state 227
    IncDecStmt       go to state 228
    Assignment       go to state 229
    GoStmt           go to state 230
    ReturnStmt       go to state 231
    BreakStmt        go to state 232
    ContinueStmt     go to state 233
    GotoStmt         go to state 234
    FallthroughStmt  go to state 235
    Block            go to state 236
    StatementList    go to state 479
    IfStmt           go to state 238
    SwitchStmt       go to state 239
    ExprSwitchStmt   go to state 240
    TypeSwitchStmt   go to state 241
    SelectStmt       go to state 242
    ForStmt          go to state 243
    DeferStmt        go to state 244


state 444

  280 IdetifierGodefBrakets: IDENTIFIER GODEF .

    $default  reduce using rule 280 (IdetifierGodefBrakets)


state 445

  268 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets '{' . ExprCaseClauseLoop '}'

    DEFAULT  shift, and go to state 480
    CASE     shift, and go to state 481

    $default  reduce using rule 275 (ExprCaseClauseLoop)

    ExprCaseClause      go to state 482
    ExprCaseClauseLoop  go to state 483
    ExprSwitchCase      go to state 484


state 446

  278 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard '{' . TypeCaseClauseLoop '}'

    DEFAULT  shift, and go to state 485
    CASE     shift, and go to state 486

    $default  reduce using rule 284 (TypeCaseClauseLoop)

    TypeCaseClause      go to state 487
    TypeCaseClauseLoop  go to state 488
    TypeSwitchCase      go to state 489


state 447

  163 PrimaryExpr: PrimaryExpr . Selector
  164            | PrimaryExpr . Index
  165            | PrimaryExpr . Slice
  166            | PrimaryExpr . TypeAssertion
  167            | PrimaryExpr . Arguments
  279 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr . '.' '(' Type ')'

    '('  shift, and go to state 272
    '['  shift, and go to state 273
    '.'  shift, and go to state 490

    Selector       go to state 275
    Index          go to state 276
    Slice          go to state 277
    TypeAssertion  go to state 278
    Arguments      go to state 279


state 448

  263 IfStmt: IF Expression Block ELSE . IfStmt
  264       | IF Expression Block ELSE . Block

    IF   shift, and go to state 208
    '{'  shift, and go to state 118

    Block   go to state 491
    IfStmt  go to state 492


state 449

  192 Expression: Expression . binary_op Expression
  261 IfStmt: IF SimpleStmt SEMICOLON Expression . Block ELSE IfStmt
  262       | IF SimpleStmt SEMICOLON Expression . Block ELSE Block

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '{'      shift, and go to state 118
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297
    Block      go to state 493


state 450

  313 RangeClause: IdentifierList GODEF RANGE . Expression

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 494
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 451

  312 RangeClause: ExpressionList '=' RANGE . Expression

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 495
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 452

  192 Expression: Expression . binary_op Expression
  303 Condition: Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 303 (Condition)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 453

  308 ConditionBracket: Condition .

    $default  reduce using rule 308 (ConditionBracket)


state 454

  304 ForClause: InitStmtBracket SEMICOLON ConditionBracket . SEMICOLON PostStmtBracket

    SEMICOLON  shift, and go to state 496


state 455

   32 StructTypeLoop: FieldDecl SEMICOLON ';' StructTypeLoop .

    $default  reduce using rule 32 (StructTypeLoop)


state 456

   59 InterfaceType: IDENTIFIER '(' ')' '(' ')' SEMICOLON .

    $default  reduce using rule 59 (InterfaceType)


state 457

   62 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList ')' . SEMICOLON

    SEMICOLON  shift, and go to state 497


state 458

   65 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList ',' . ')' SEMICOLON

    ')'  shift, and go to state 498


state 459

   60 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 499


state 460

   63 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList . ')' SEMICOLON
   66              | IDENTIFIER '(' ParameterList ')' '(' ParameterList . ',' ')' SEMICOLON

    ')'  shift, and go to state 500
    ','  shift, and go to state 501


state 461

   69 InterfaceType: IDENTIFIER '(' ParameterList ')' Type SEMICOLON .

    $default  reduce using rule 69 (InterfaceType)


state 462

   58 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' SEMICOLON .

    $default  reduce using rule 58 (InterfaceType)


state 463

    3 Type: '(' . Type ')'
   61 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' . ')' SEMICOLON
   64              | IDENTIFIER '(' ParameterList ',' ')' '(' . ParameterList ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList ',' ')' '(' . ParameterList ',' ')' SEMICOLON

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    ARGS        shift, and go to state 58
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 72
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 502
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 414
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    ParameterList   go to state 503
    ParameterDecl   go to state 90
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94
    IdentifierList  go to state 95


state 464

   70 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' Type . SEMICOLON
   72 TypeElem: Type . TypeElem

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    SEMICOLON   shift, and go to state 504
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 465

  217 Conversion: Type '(' Expression ',' ')' .

    $default  reduce using rule 217 (Conversion)


state 466

  145 LiteralValue: '{' ElementList ',' '}' .

    $default  reduce using rule 145 (LiteralValue)


state 467

  150 ElementList: ElementList ',' KeyedElement .

    $default  reduce using rule 150 (ElementList)


state 468

  156 Element: LiteralValue .

    $default  reduce using rule 156 (Element)


state 469

  148 KeyedElement: Key ':' Element .

    $default  reduce using rule 148 (KeyedElement)


state 470

  155 Element: Expression .
  192 Expression: Expression . binary_op Expression

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 155 (Element)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 471

  180 ArgumentsLoop: Type ARGS ',' .

    $default  reduce using rule 180 (ArgumentsLoop)


state 472

   95 ExpressionList: ExpressionList . ',' Expression
  184 ArgumentsLoop: Type ',' ExpressionList . ARGS ','
  185              | Type ',' ExpressionList . ARGS
  186              | Type ',' ExpressionList . ','
  187              | Type ',' ExpressionList .

    ARGS  shift, and go to state 505
    ','   shift, and go to state 506

    $default  reduce using rule 187 (ArgumentsLoop)


state 473

  176 ArgumentsLoop: ExpressionList ARGS ',' .

    $default  reduce using rule 176 (ArgumentsLoop)


state 474

  170 Slice: '[' ExpressionLoop COLON ExpressionLoop . ']'

    ']'  shift, and go to state 507


state 475

  171 Slice: '[' ExpressionLoop COLON Expression . COLON Expression ']'
  172 ExpressionLoop: Expression .
  192 Expression: Expression . binary_op Expression

    COLON    shift, and go to state 508
    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 172 (ExpressionLoop)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 476

  174 TypeAssertion: '.' '(' Type ')' .

    $default  reduce using rule 174 (TypeAssertion)


state 477

  295 RecvStmt: IdentifierList GODEF . RecvExpr

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 509
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170
    RecvExpr        go to state 510


state 478

  294 RecvStmt: ExpressionList '=' . RecvExpr

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 509
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170
    RecvExpr        go to state 511


state 479

  288 CommClause: CommCase COLON StatementList .

    $default  reduce using rule 288 (CommClause)


state 480

  277 ExprSwitchCase: DEFAULT .

    $default  reduce using rule 277 (ExprSwitchCase)


state 481

  276 ExprSwitchCase: CASE . ExpressionList

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    ExpressionList  go to state 512
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 190
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 482

  274 ExprCaseClauseLoop: ExprCaseClause . ExprCaseClauseLoop

    DEFAULT  shift, and go to state 480
    CASE     shift, and go to state 481

    $default  reduce using rule 275 (ExprCaseClauseLoop)

    ExprCaseClause      go to state 482
    ExprCaseClauseLoop  go to state 513
    ExprSwitchCase      go to state 484


state 483

  268 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets '{' ExprCaseClauseLoop . '}'

    '}'  shift, and go to state 514


state 484

  273 ExprCaseClause: ExprSwitchCase . COLON StatementList

    COLON  shift, and go to state 515


state 485

  286 TypeSwitchCase: DEFAULT .

    $default  reduce using rule 286 (TypeSwitchCase)


state 486

  285 TypeSwitchCase: CASE . TypeList

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 301
    TypeName        go to state 81
    TypeList        go to state 516
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 487

  283 TypeCaseClauseLoop: TypeCaseClause . TypeCaseClauseLoop

    DEFAULT  shift, and go to state 485
    CASE     shift, and go to state 486

    $default  reduce using rule 284 (TypeCaseClauseLoop)

    TypeCaseClause      go to state 487
    TypeCaseClauseLoop  go to state 517
    TypeSwitchCase      go to state 489


state 488

  278 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard '{' TypeCaseClauseLoop . '}'

    '}'  shift, and go to state 518


state 489

  282 TypeCaseClause: TypeSwitchCase . COLON StatementList

    COLON  shift, and go to state 519


state 490

  168 Selector: '.' . IDENTIFIER
  174 TypeAssertion: '.' . '(' Type ')'
  279 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' . '(' Type ')'

    IDENTIFIER  shift, and go to state 378
    '('         shift, and go to state 520


state 491

  264 IfStmt: IF Expression Block ELSE Block .

    $default  reduce using rule 264 (IfStmt)


state 492

  263 IfStmt: IF Expression Block ELSE IfStmt .

    $default  reduce using rule 263 (IfStmt)


state 493

  261 IfStmt: IF SimpleStmt SEMICOLON Expression Block . ELSE IfStmt
  262       | IF SimpleStmt SEMICOLON Expression Block . ELSE Block

    ELSE  shift, and go to state 521


state 494

  192 Expression: Expression . binary_op Expression
  313 RangeClause: IdentifierList GODEF RANGE Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 313 (RangeClause)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 495

  192 Expression: Expression . binary_op Expression
  312 RangeClause: ExpressionList '=' RANGE Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 312 (RangeClause)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 496

  304 ForClause: InitStmtBracket SEMICOLON ConditionBracket SEMICOLON . PostStmtBracket

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 192
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 241 (EmptyStmt)

    Type             go to state 150
    TypeName         go to state 151
    TypeLit          go to state 82
    QualifiedIdent   go to state 152
    ArrayType        go to state 153
    SliceType        go to state 154
    StructType       go to state 155
    PointerType      go to state 87
    FunctionType     go to state 88
    InterfaceType    go to state 91
    TypeElem         go to state 92
    MapType          go to state 156
    ChannelType      go to state 94
    IdentifierList   go to state 217
    ExpressionList   go to state 218
    ShortVarDecl     go to state 219
    Operand          go to state 157
    Literal          go to state 158
    BasicLit         go to state 159
    CompositeLit     go to state 160
    LiteralType      go to state 161
    FunctionLit      go to state 162
    OperandName      go to state 163
    PrimaryExpr      go to state 164
    MethodExpr       go to state 165
    ParametersType   go to state 166
    Expression       go to state 220
    UnaryExpr        go to state 168
    unary_op         go to state 169
    Conversion       go to state 170
    SimpleStmt       go to state 522
    EmptyStmt        go to state 224
    ExpressionStmt   go to state 225
    SendStmt         go to state 226
    Channel          go to state 227
    IncDecStmt       go to state 228
    Assignment       go to state 229
    PostStmt         go to state 523
    PostStmtBracket  go to state 524


state 497

   62 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList ')' SEMICOLON .

    $default  reduce using rule 62 (InterfaceType)


state 498

   65 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList ',' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 525


state 499

   60 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ')' SEMICOLON .

    $default  reduce using rule 60 (InterfaceType)


state 500

   63 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList ')' . SEMICOLON

    SEMICOLON  shift, and go to state 526


state 501

   66 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList ',' . ')' SEMICOLON

    ')'  shift, and go to state 527


state 502

   61 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 528


state 503

   64 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList . ')' SEMICOLON
   67              | IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList . ',' ')' SEMICOLON

    ')'  shift, and go to state 529
    ','  shift, and go to state 530


state 504

   70 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' Type SEMICOLON .

    $default  reduce using rule 70 (InterfaceType)


state 505

  184 ArgumentsLoop: Type ',' ExpressionList ARGS . ','
  185              | Type ',' ExpressionList ARGS .

    ','  shift, and go to state 531

    $default  reduce using rule 185 (ArgumentsLoop)


state 506

   95 ExpressionList: ExpressionList ',' . Expression
  186 ArgumentsLoop: Type ',' ExpressionList ',' .

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    $default  reduce using rule 186 (ArgumentsLoop)

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 385
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 507

  170 Slice: '[' ExpressionLoop COLON ExpressionLoop ']' .

    $default  reduce using rule 170 (Slice)


state 508

  171 Slice: '[' ExpressionLoop COLON Expression COLON . Expression ']'

    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 135
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    Type            go to state 150
    TypeName        go to state 151
    TypeLit         go to state 82
    QualifiedIdent  go to state 152
    ArrayType       go to state 153
    SliceType       go to state 154
    StructType      go to state 155
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 156
    ChannelType     go to state 94
    Operand         go to state 157
    Literal         go to state 158
    BasicLit        go to state 159
    CompositeLit    go to state 160
    LiteralType     go to state 161
    FunctionLit     go to state 162
    OperandName     go to state 163
    PrimaryExpr     go to state 164
    MethodExpr      go to state 165
    ParametersType  go to state 166
    Expression      go to state 532
    UnaryExpr       go to state 168
    unary_op        go to state 169
    Conversion      go to state 170


state 509

  192 Expression: Expression . binary_op Expression
  297 RecvExpr: Expression .

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    $default  reduce using rule 297 (RecvExpr)

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 510

  295 RecvStmt: IdentifierList GODEF RecvExpr .

    $default  reduce using rule 295 (RecvStmt)


state 511

  294 RecvStmt: ExpressionList '=' RecvExpr .

    $default  reduce using rule 294 (RecvStmt)


state 512

   95 ExpressionList: ExpressionList . ',' Expression
  276 ExprSwitchCase: CASE ExpressionList .

    ','  shift, and go to state 308

    $default  reduce using rule 276 (ExprSwitchCase)


state 513

  274 ExprCaseClauseLoop: ExprCaseClause ExprCaseClauseLoop .

    $default  reduce using rule 274 (ExprCaseClauseLoop)


state 514

  268 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets '{' ExprCaseClauseLoop '}' .

    $default  reduce using rule 268 (ExprSwitchStmt)


state 515

  273 ExprCaseClause: ExprSwitchCase COLON . StatementList

    BREAK           shift, and go to state 204
    SELECT          shift, and go to state 205
    SWITCH          shift, and go to state 206
    FALLTHROUGH     shift, and go to state 207
    IF              shift, and go to state 208
    GOTO            shift, and go to state 209
    FOR             shift, and go to state 210
    CONTINUE        shift, and go to state 211
    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    DEFER           shift, and go to state 212
    RETURN          shift, and go to state 213
    GO              shift, and go to state 214
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 215
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '{'             shift, and go to state 118
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    SEMICOLON  reduce using rule 241 (EmptyStmt)
    $default   reduce using rule 260 (StatementList)

    Type             go to state 150
    TypeName         go to state 151
    TypeLit          go to state 82
    QualifiedIdent   go to state 152
    ArrayType        go to state 153
    SliceType        go to state 154
    StructType       go to state 155
    PointerType      go to state 87
    FunctionType     go to state 88
    InterfaceType    go to state 91
    TypeElem         go to state 92
    MapType          go to state 156
    ChannelType      go to state 94
    Declaration      go to state 216
    ConstDecl        go to state 22
    IdentifierList   go to state 217
    ExpressionList   go to state 218
    TypeDecl         go to state 23
    VarDecl          go to state 24
    ShortVarDecl     go to state 219
    Operand          go to state 157
    Literal          go to state 158
    BasicLit         go to state 159
    CompositeLit     go to state 160
    LiteralType      go to state 161
    FunctionLit      go to state 162
    OperandName      go to state 163
    PrimaryExpr      go to state 164
    MethodExpr       go to state 165
    ParametersType   go to state 166
    Expression       go to state 220
    UnaryExpr        go to state 168
    unary_op         go to state 169
    Conversion       go to state 170
    Statement        go to state 221
    LabeledStmt      go to state 222
    SimpleStmt       go to state 223
    EmptyStmt        go to state 224
    ExpressionStmt   go to state 225
    SendStmt         go to state 226
    Channel          go to state 227
    IncDecStmt       go to state 228
    Assignment       go to state 229
    GoStmt           go to state 230
    ReturnStmt       go to state 231
    BreakStmt        go to state 232
    ContinueStmt     go to state 233
    GotoStmt         go to state 234
    FallthroughStmt  go to state 235
    Block            go to state 236
    StatementList    go to state 533
    IfStmt           go to state 238
    SwitchStmt       go to state 239
    ExprSwitchStmt   go to state 240
    TypeSwitchStmt   go to state 241
    SelectStmt       go to state 242
    ForStmt          go to state 243
    DeferStmt        go to state 244


state 516

    7 TypeList: TypeList . ',' Type
  285 TypeSwitchCase: CASE TypeList .

    ','  shift, and go to state 383

    $default  reduce using rule 285 (TypeSwitchCase)


state 517

  283 TypeCaseClauseLoop: TypeCaseClause TypeCaseClauseLoop .

    $default  reduce using rule 283 (TypeCaseClauseLoop)


state 518

  278 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard '{' TypeCaseClauseLoop '}' .

    $default  reduce using rule 278 (TypeSwitchStmt)


state 519

  282 TypeCaseClause: TypeSwitchCase COLON . StatementList

    BREAK           shift, and go to state 204
    SELECT          shift, and go to state 205
    SWITCH          shift, and go to state 206
    FALLTHROUGH     shift, and go to state 207
    IF              shift, and go to state 208
    GOTO            shift, and go to state 209
    FOR             shift, and go to state 210
    CONTINUE        shift, and go to state 211
    FUNC            shift, and go to state 134
    INTERFACE       shift, and go to state 57
    DEFER           shift, and go to state 212
    RETURN          shift, and go to state 213
    GO              shift, and go to state 214
    CHAN            shift, and go to state 59
    MAP             shift, and go to state 60
    STRUCT          shift, and go to state 61
    CONST           shift, and go to state 17
    TYPE            shift, and go to state 18
    VAR             shift, and go to state 19
    ANY             shift, and go to state 62
    BOOL            shift, and go to state 63
    BYTE            shift, and go to state 64
    COMPARABLE      shift, and go to state 65
    INT             shift, and go to state 66
    COMPLEX         shift, and go to state 67
    ERROR           shift, and go to state 68
    FLOAT           shift, and go to state 69
    STRING          shift, and go to state 70
    RUNE            shift, and go to state 71
    IDENTIFIER      shift, and go to state 215
    IntegerValue    shift, and go to state 136
    FloatValue      shift, and go to state 137
    StringValue     shift, and go to state 138
    ImaginaryValue  shift, and go to state 139
    CHANNELOP       shift, and go to state 140
    '('             shift, and go to state 141
    '['             shift, and go to state 142
    '{'             shift, and go to state 118
    '*'             shift, and go to state 144
    '~'             shift, and go to state 78
    '|'             shift, and go to state 79
    '+'             shift, and go to state 145
    '-'             shift, and go to state 146
    '^'             shift, and go to state 147
    '&'             shift, and go to state 148
    '!'             shift, and go to state 149

    SEMICOLON  reduce using rule 241 (EmptyStmt)
    $default   reduce using rule 260 (StatementList)

    Type             go to state 150
    TypeName         go to state 151
    TypeLit          go to state 82
    QualifiedIdent   go to state 152
    ArrayType        go to state 153
    SliceType        go to state 154
    StructType       go to state 155
    PointerType      go to state 87
    FunctionType     go to state 88
    InterfaceType    go to state 91
    TypeElem         go to state 92
    MapType          go to state 156
    ChannelType      go to state 94
    Declaration      go to state 216
    ConstDecl        go to state 22
    IdentifierList   go to state 217
    ExpressionList   go to state 218
    TypeDecl         go to state 23
    VarDecl          go to state 24
    ShortVarDecl     go to state 219
    Operand          go to state 157
    Literal          go to state 158
    BasicLit         go to state 159
    CompositeLit     go to state 160
    LiteralType      go to state 161
    FunctionLit      go to state 162
    OperandName      go to state 163
    PrimaryExpr      go to state 164
    MethodExpr       go to state 165
    ParametersType   go to state 166
    Expression       go to state 220
    UnaryExpr        go to state 168
    unary_op         go to state 169
    Conversion       go to state 170
    Statement        go to state 221
    LabeledStmt      go to state 222
    SimpleStmt       go to state 223
    EmptyStmt        go to state 224
    ExpressionStmt   go to state 225
    SendStmt         go to state 226
    Channel          go to state 227
    IncDecStmt       go to state 228
    Assignment       go to state 229
    GoStmt           go to state 230
    ReturnStmt       go to state 231
    BreakStmt        go to state 232
    ContinueStmt     go to state 233
    GotoStmt         go to state 234
    FallthroughStmt  go to state 235
    Block            go to state 236
    StatementList    go to state 534
    IfStmt           go to state 238
    SwitchStmt       go to state 239
    ExprSwitchStmt   go to state 240
    TypeSwitchStmt   go to state 241
    SelectStmt       go to state 242
    ForStmt          go to state 243
    DeferStmt        go to state 244


state 520

  174 TypeAssertion: '.' '(' . Type ')'
  279 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' '(' . Type ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 535
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 92
    MapType         go to state 93
    ChannelType     go to state 94


state 521

  261 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE . IfStmt
  262       | IF SimpleStmt SEMICOLON Expression Block ELSE . Block

    IF   shift, and go to state 208
    '{'  shift, and go to state 118

    Block   go to state 536
    IfStmt  go to state 537


state 522

  310 PostStmt: SimpleStmt .

    $default  reduce using rule 310 (PostStmt)


state 523

  311 PostStmtBracket: PostStmt .

    $default  reduce using rule 311 (PostStmtBracket)


state 524

  304 ForClause: InitStmtBracket SEMICOLON ConditionBracket SEMICOLON PostStmtBracket .

    $default  reduce using rule 304 (ForClause)


state 525

   65 InterfaceType: IDENTIFIER '(' ')' '(' ParameterList ',' ')' SEMICOLON .

    $default  reduce using rule 65 (InterfaceType)


state 526

   63 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList ')' SEMICOLON .

    $default  reduce using rule 63 (InterfaceType)


state 527

   66 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList ',' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 538


state 528

   61 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ')' SEMICOLON .

    $default  reduce using rule 61 (InterfaceType)


state 529

   64 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ')' . SEMICOLON

    SEMICOLON  shift, and go to state 539


state 530

   67 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ',' . ')' SEMICOLON

    ')'  shift, and go to state 540


state 531

  184 ArgumentsLoop: Type ',' ExpressionList ARGS ',' .

    $default  reduce using rule 184 (ArgumentsLoop)


state 532

  171 Slice: '[' ExpressionLoop COLON Expression COLON Expression . ']'
  192 Expression: Expression . binary_op Expression

    LRSHIFT  shift, and go to state 281
    AND      shift, and go to state 282
    OR       shift, and go to state 283
    COMPARE  shift, and go to state 284
    ']'      shift, and go to state 541
    '*'      shift, and go to state 286
    '|'      shift, and go to state 287
    '+'      shift, and go to state 288
    '-'      shift, and go to state 289
    '^'      shift, and go to state 290
    '/'      shift, and go to state 291
    '%'      shift, and go to state 292
    '&'      shift, and go to state 293

    binary_op  go to state 294
    rel_op     go to state 295
    add_op     go to state 296
    mul_op     go to state 297


state 533

  273 ExprCaseClause: ExprSwitchCase COLON StatementList .

    $default  reduce using rule 273 (ExprCaseClause)


state 534

  282 TypeCaseClause: TypeSwitchCase COLON StatementList .

    $default  reduce using rule 282 (TypeCaseClause)


state 535

   72 TypeElem: Type . TypeElem
  174 TypeAssertion: '.' '(' Type . ')'
  279 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' '(' Type . ')'

    FUNC        shift, and go to state 56
    INTERFACE   shift, and go to state 57
    CHAN        shift, and go to state 59
    MAP         shift, and go to state 60
    STRUCT      shift, and go to state 61
    ANY         shift, and go to state 62
    BOOL        shift, and go to state 63
    BYTE        shift, and go to state 64
    COMPARABLE  shift, and go to state 65
    INT         shift, and go to state 66
    COMPLEX     shift, and go to state 67
    ERROR       shift, and go to state 68
    FLOAT       shift, and go to state 69
    STRING      shift, and go to state 70
    RUNE        shift, and go to state 71
    IDENTIFIER  shift, and go to state 99
    CHANNELOP   shift, and go to state 73
    '('         shift, and go to state 74
    ')'         shift, and go to state 542
    '['         shift, and go to state 76
    '*'         shift, and go to state 77
    '~'         shift, and go to state 78
    '|'         shift, and go to state 79

    Type            go to state 175
    TypeName        go to state 81
    TypeLit         go to state 82
    QualifiedIdent  go to state 83
    ArrayType       go to state 84
    SliceType       go to state 85
    StructType      go to state 86
    PointerType     go to state 87
    FunctionType    go to state 88
    InterfaceType   go to state 91
    TypeElem        go to state 176
    MapType         go to state 93
    ChannelType     go to state 94


state 536

  262 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE Block .

    $default  reduce using rule 262 (IfStmt)


state 537

  261 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt .

    $default  reduce using rule 261 (IfStmt)


state 538

   66 InterfaceType: IDENTIFIER '(' ParameterList ')' '(' ParameterList ',' ')' SEMICOLON .

    $default  reduce using rule 66 (InterfaceType)


state 539

   64 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ')' SEMICOLON .

    $default  reduce using rule 64 (InterfaceType)


state 540

   67 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ',' ')' . SEMICOLON

    SEMICOLON  shift, and go to state 543


state 541

  171 Slice: '[' ExpressionLoop COLON Expression COLON Expression ']' .

    $default  reduce using rule 171 (Slice)


state 542

  174 TypeAssertion: '.' '(' Type ')' .
  279 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' '(' Type ')' .

    '{'       reduce using rule 279 (TypeSwitchGuard)
    $default  reduce using rule 174 (TypeAssertion)


state 543

   67 InterfaceType: IDENTIFIER '(' ParameterList ',' ')' '(' ParameterList ',' ')' SEMICOLON .

    $default  reduce using rule 67 (InterfaceType)
