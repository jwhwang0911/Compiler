Nonterminals useless in grammar

   SourceFile
   ImportLoop
   TopLevelLoop
   PackageClause
   ImportDecl
   ImportSpec
   ImportSpecLoop
   ImportPath
   TopLevelDecl
   Declaration
   VarDecl
   VarSpec
   VarSpecList
   ConstDecl
   ConstSpec
   ConstSpecLoop
   TypeDecl
   TypeSpec
   TypeSpecLoop
   AliasDecl
   TypeDef
   TypeParameters
   TypeParamList
   TypeParamDecl
   Conversion
   binary_op
   rel_op
   add_op
   mul_op
   TypeList
   ShortVarDecl
   Statement
   LabeledStmt
   SimpleStmt
   ExpressionStmt
   SendStmt
   Channel
   IncDecStmt
   Assignment
   assign_op
   GoStmt
   ReturnStmt
   BreakStmt
   ContinueStmt
   GotoStmt
   FallthroughStmt
   Block
   StatementList
   IfStmt
   SwitchStmt
   ExprSwitchStmt
   SimpleStmtBrakets
   ExpressionBrakets
   ExprCaseClause
   ExprCaseClauseLoop
   ExprSwitchCase
   TypeSwitchStmt
   TypeSwitchGuard
   IdetifierGodefBrakets
   TypeCaseClause
   TypeCaseClauseLoop
   TypeSwitchCase
   SelectStmt
   CommClause
   CommClauseLoop
   CommCase
   RecvStmt
   RecvExpr
   ForStmt
   ForClauseBracket
   Condition
   ForClause
   InitStmtBracket
   ConditionBracket
   PostStmt
   PostStmtBracket
   RangeClause
   DeferStmt


Terminals unused in grammar

   BREAK
   DEFAULT
   SELECT
   SWITCH
   CASE
   FALLTHROUGH
   IF
   ELSE
   GOTO
   RANGE
   FOR
   CONTINUE
   DEFER
   RETURN
   GO
   CONST
   TYPE
   VAR
   ANY
   BYTE
   COMPARABLE
   ERROR
   PACKAGE
   IMPORT
   GODEF
   INCRE_DECRE
   ARITH_ASSIGN
   BIT_ASSIGN
   '='


Rules useless in grammar

  115 SourceFile: PackageClause SEMICOLON ImportLoop TopLevelLoop

  116 ImportLoop: ImportDecl SEMICOLON ImportLoop
  117           | /* empty */

  118 TopLevelLoop: TopLevelDecl SEMICOLON TopLevelLoop
  119             | /* empty */

  120 PackageClause: PACKAGE IDENTIFIER

  121 ImportDecl: IMPORT ImportSpec
  122           | IMPORT '(' ImportSpecLoop ')'

  123 ImportSpec: '.' ImportPath
  124           | IDENTIFIER ImportPath
  125           | ImportPath

  126 ImportSpecLoop: ImportSpec SEMICOLON ImportSpecLoop
  127               | /* empty */

  128 ImportPath: StringValue

  129 TopLevelDecl: Declaration

  130 Declaration: VarDecl
  131            | ConstDecl
  132            | TypeDecl

  133 VarDecl: VAR VarSpec
  134        | VAR '(' VarSpecList ')'

  135 VarSpec: IdentifierList Type '=' ExpressionList
  136        | IdentifierList Type
  137        | IdentifierList '=' ExpressionList

  138 VarSpecList: VarSpec SEMICOLON VarSpecList
  139            | VarSpec

  140 ConstDecl: CONST ConstSpec
  141          | CONST '(' ConstSpecLoop ')'

  142 ConstSpec: IdentifierList Type '=' ExpressionList
  143          | IdentifierList '=' ExpressionList
  144          | IdentifierList

  145 ConstSpecLoop: ConstSpec SEMICOLON ConstSpecLoop
  146              | /* empty */

  147 TypeDecl: TYPE TypeSpec
  148         | TYPE '(' TypeSpecLoop ')'

  149 TypeSpec: AliasDecl
  150         | TypeDef

  151 TypeSpecLoop: TypeSpec SEMICOLON TypeSpecLoop
  152             | TypeSpec

  153 AliasDecl: IDENTIFIER '=' Type

  154 TypeDef: IDENTIFIER Type
  155        | IDENTIFIER TypeParameters Type

  156 TypeParameters: '[' TypeParamList ']'
  157               | '[' TypeParamList ',' ']'

  158 TypeParamList: TypeParamList ',' TypeParamDecl
  159              | TypeParamDecl

  160 TypeParamDecl: IdentifierList TypeElem

  161 Conversion: Type '(' Expression ')'

  162 binary_op: AND
  163          | OR
  164          | rel_op
  165          | add_op
  166          | mul_op

  167 rel_op: COMPARE

  168 add_op: '+'
  169       | '-'
  170       | '|'
  171       | '^'

  172 mul_op: '*'
  173       | '/'
  174       | '%'
  175       | LRSHIFT
  176       | '&'

  177 TypeList: TypeList ',' Type
  178         | Type

  179 ShortVarDecl: IdentifierList GODEF ExpressionList

  180 Statement: Declaration
  181          | LabeledStmt
  182          | SimpleStmt
  183          | GoStmt
  184          | ReturnStmt
  185          | BreakStmt
  186          | ContinueStmt
  187          | GotoStmt
  188          | FallthroughStmt
  189          | Block
  190          | IfStmt
  191          | SwitchStmt
  192          | SelectStmt
  193          | ForStmt
  194          | DeferStmt

  195 LabeledStmt: IDENTIFIER COLON Statement

  196 SimpleStmt: /* empty */
  197           | ExpressionStmt
  198           | SendStmt
  199           | IncDecStmt
  200           | Assignment
  201           | ShortVarDecl

  202 ExpressionStmt: Expression

  203 SendStmt: Channel CHANNELOP Expression

  204 Channel: Expression

  205 IncDecStmt: Expression INCRE_DECRE

  206 Assignment: ExpressionList assign_op ExpressionList

  207 assign_op: ARITH_ASSIGN
  208          | '='
  209          | BIT_ASSIGN

  210 GoStmt: GO Expression

  211 ReturnStmt: RETURN ExpressionList
  212           | RETURN

  213 BreakStmt: BREAK IDENTIFIER
  214          | BREAK

  215 ContinueStmt: CONTINUE IDENTIFIER
  216             | CONTINUE

  217 GotoStmt: GOTO IDENTIFIER

  218 FallthroughStmt: FALLTHROUGH

  219 Block: '{' StatementList '}'
  220      | '{' '}'

  221 StatementList: Statement SEMICOLON StatementList
  222              | Statement SEMICOLON

  223 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt
  224       | IF SimpleStmt SEMICOLON Expression Block ELSE Block
  225       | IF SimpleStmt SEMICOLON Expression Block
  226       | IF Expression Block ELSE IfStmt
  227       | IF Expression Block ELSE Block
  228       | IF Expression Block

  229 SwitchStmt: ExprSwitchStmt
  230           | TypeSwitchStmt

  231 ExprSwitchStmt: SWITCH SimpleStmtBrakets ExpressionBrakets '{' ExprCaseClauseLoop '}'
  232               | SWITCH SimpleStmtBrakets ExpressionBrakets '{' '}'
  233               | SWITCH ExpressionBrakets '{' ExprCaseClauseLoop '}'
  234               | SWITCH ExpressionBrakets '{' '}'

  235 SimpleStmtBrakets: SimpleStmt SEMICOLON

  236 ExpressionBrakets: Expression
  237                  | /* empty */

  238 ExprCaseClause: ExprSwitchCase COLON StatementList

  239 ExprCaseClauseLoop: ExprCaseClause ExprCaseClauseLoop
  240                   | ExprCaseClause

  241 ExprSwitchCase: CASE ExpressionList
  242               | DEFAULT

  243 TypeSwitchStmt: SWITCH SimpleStmtBrakets TypeSwitchGuard '{' TypeCaseClauseLoop '}'
  244               | SWITCH TypeSwitchGuard '{' TypeCaseClauseLoop '}'

  245 TypeSwitchGuard: IdetifierGodefBrakets PrimaryExpr '.' '(' TYPE ')'

  246 IdetifierGodefBrakets: IDENTIFIER GODEF
  247                      | /* empty */

  248 TypeCaseClause: TypeSwitchCase COLON StatementList

  249 TypeCaseClauseLoop: TypeCaseClause TypeCaseClauseLoop
  250                   | /* empty */

  251 TypeSwitchCase: CASE TypeList
  252               | DEFAULT

  253 SelectStmt: SELECT '{' CommClauseLoop '}'

  254 CommClause: CommCase COLON StatementList

  255 CommClauseLoop: CommClause CommClauseLoop
  256               | /* empty */

  257 CommCase: /* empty */
  258         | CASE RecvStmt
  259         | DEFAULT

  260 RecvStmt: ExpressionList '=' RecvExpr
  261         | IdentifierList GODEF RecvExpr
  262         | RecvExpr

  263 RecvExpr: Expression

  264 ForStmt: FOR ForClauseBracket Block

  265 ForClauseBracket: Condition
  266                 | ForClause
  267                 | RangeClause
  268                 | /* empty */

  269 Condition: Expression

  270 ForClause: InitStmtBracket SEMICOLON ConditionBracket SEMICOLON PostStmtBracket

  271 InitStmtBracket: SimpleStmt
  272                | /* empty */

  273 ConditionBracket: Condition
  274                 | /* empty */

  275 PostStmt: SimpleStmt

  276 PostStmtBracket: PostStmt

  277 RangeClause: IdentifierList '=' RANGE Expression
  278            | IdentifierList GODEF RANGE Expression
  279            | RANGE Expression

  280 DeferStmt: DEFER Expression


State 26 conflicts: 14 shift/reduce


Grammar

    0 $accept: Type $end

    1 IdentifierList: IdentifierList ',' IDENTIFIER
    2               | IDENTIFIER

    3 ExpressionList: ExpressionList ',' Expression
    4               | Expression

    5 Expression: UnaryExpr
    6           | Expression AND Expression
    7           | Expression OR Expression
    8           | Expression COMPARE Expression
    9           | Expression '+' Expression
   10           | Expression '-' Expression
   11           | Expression '|' Expression
   12           | Expression '^' Expression
   13           | Expression '*' Expression
   14           | Expression '/' Expression
   15           | Expression '%' Expression
   16           | Expression LRSHIFT Expression
   17           | Expression '&' Expression

   18 UnaryExpr: PrimaryExpr
   19          | unary_op UnaryExpr
   20          | '*' UnaryExpr

   21 PrimaryExpr: Operand
   22            | MethodExpr
   23            | PrimaryExpr Selector
   24            | PrimaryExpr Index
   25            | PrimaryExpr Slice
   26            | PrimaryExpr TypeAssertion
   27            | PrimaryExpr Arguments

   28 MethodExpr: Type '.' IDENTIFIER

   29 Selector: '.' IDENTIFIER

   30 Index: '[' Expression ']'

   31 Slice: '[' Expression COLON Expression ']'
   32      | '[' Expression COLON ']'
   33      | '[' COLON Expression ']'
   34      | '[' COLON ']'
   35      | '[' Expression COLON Expression COLON Expression ']'
   36      | '[' COLON Expression COLON Expression ']'

   37 TypeAssertion: '.' '(' Type ')'

   38 Arguments: '(' ArgumentsLoop ')'
   39          | '(' ')'

   40 ArgumentsLoop: ExpressionList ARGS ','
   41              | ExpressionList ARGS
   42              | ExpressionList ','
   43              | ExpressionList
   44              | Type ARGS ','
   45              | Type ARGS
   46              | Type ','
   47              | Type
   48              | Type ',' ExpressionList ARGS ','
   49              | Type ',' ExpressionList ARGS
   50              | Type ',' ExpressionList ','
   51              | Type ',' ExpressionList

   52 Operand: Literal
   53        | OperandName
   54        | '(' Expression ')'

   55 OperandName: IDENTIFIER

   56 Literal: BasicLit

   57 BasicLit: IntegerValue
   58         | BooleanValue
   59         | FloatValue
   60         | ImaginaryValue
   61         | StringValue

   62 unary_op: '+'
   63         | '-'
   64         | '!'
   65         | '^'
   66         | '&'
   67         | CHANNELOP

   68 Type: INT
   69     | FLOAT
   70     | BOOL
   71     | COMPLEX
   72     | RUNE
   73     | STRING
   74     | FunctionType
   75     | MapType
   76     | ChannelType
   77     | StructType
   78     | PointerType
   79     | ArrayType
   80     | SliceType
   81     | InterfaceType

   82 FunctionType: FUNC Signature

   83 Signature: Parameters
   84          | Parameters Type
   85          | Parameters Parameters

   86 Parameters: '(' ')'
   87           | '(' ParameterList ')'

   88 ParameterList: ParameterDecl
   89              | ParameterDecl ',' ParameterDecl

   90 ParameterDecl: Type
   91              | IdentifierList Type
   92              | ARGS Type
   93              | IdentifierList ARGS Type

   94 MapType: MAP '[' Type ']' Type

   95 ChannelType: CHAN Type
   96            | CHAN CHANNELOP Type
   97            | '<' CHANNELOP Type

   98 StructType: STRUCT '{' StructTypeLoop '}'
   99           | STRUCT '{' '}'

  100 StructTypeLoop: FieldDecl SEMICOLON StructTypeLoop
  101               | FieldDecl SEMICOLON

  102 FieldDecl: IdentifierList Type
  103          | IdentifierList Type StringValue

  104 PointerType: '*' Type

  105 ArrayType: '[' Expression ']' Type

  106 SliceType: '[' ']' Type

  107 InterfaceType: INTERFACE '{' '}'
  108              | INTERFACE '{' InterfaceElem SEMICOLON '}'

  109 InterfaceElem: IDENTIFIER Signature
  110              | TypeElem

  111 TypeElem: Type TypeElem
  112         | '~' Type TypeElem
  113         | '|' Type
  114         | '|' '~' Type


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'%' (37) 15
'&' (38) 17 66
'(' (40) 37 38 39 54 86 87
')' (41) 37 38 39 54 86 87
'*' (42) 13 20 104
'+' (43) 9 62
',' (44) 1 3 40 42 44 46 48 49 50 51 89
'-' (45) 10 63
'.' (46) 28 29 37
'/' (47) 14
'<' (60) 97
'=' (61)
'[' (91) 30 31 32 33 34 35 36 94 105 106
']' (93) 30 31 32 33 34 35 36 94 105 106
'^' (94) 12 65
'{' (123) 98 99 107 108
'|' (124) 11 113 114
'}' (125) 98 99 107 108
'~' (126) 112 114
error (256)
BREAK (258)
DEFAULT (259)
SELECT (260)
SWITCH (261)
CASE (262)
FALLTHROUGH (263)
IF (264)
ELSE (265)
GOTO (266)
RANGE (267)
FOR (268)
CONTINUE (269)
FUNC (270) 82
INTERFACE (271) 107 108
DEFER (272)
RETURN (273)
ARGS (274) 40 41 44 45 48 49 92 93
GO (275)
CHAN (276) 95 96
MAP (277) 94
STRUCT (278) 98 99
CONST (279)
TYPE (280)
VAR (281)
ANY (282)
BOOL (283) 70
BYTE (284)
COMPARABLE (285)
INT (286) 68
COMPLEX (287) 71
ERROR (288)
FLOAT (289) 69
STRING (290) 73
RUNE (291) 72
PACKAGE (292)
IMPORT (293)
IDENTIFIER (294) 1 2 28 29 55 109
IntegerValue (295) 57
FloatValue (296) 59
StringValue (297) 61 103
ImaginaryValue (298) 60
BooleanValue (299) 58
COLON (300) 31 32 33 34 35 36
SEMICOLON (301) 100 101 108
GODEF (302)
INCRE_DECRE (303)
LRSHIFT (304) 16
ARITH_ASSIGN (305)
BIT_ASSIGN (306)
AND (307) 6
OR (308) 7
COMPARE (309) 8
CHANNELOP (310) 67 96 97


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
IdentifierList (77)
    on left: 1 2, on right: 1 91 93 102 103
ExpressionList (78)
    on left: 3 4, on right: 3 40 41 42 43 48 49 50 51
Expression (79)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 3 4 6 7 8
    9 10 11 12 13 14 15 16 17 30 31 32 33 35 36 54 105
UnaryExpr (80)
    on left: 18 19 20, on right: 5 19 20
PrimaryExpr (81)
    on left: 21 22 23 24 25 26 27, on right: 18 23 24 25 26 27
MethodExpr (82)
    on left: 28, on right: 22
Selector (83)
    on left: 29, on right: 23
Index (84)
    on left: 30, on right: 24
Slice (85)
    on left: 31 32 33 34 35 36, on right: 25
TypeAssertion (86)
    on left: 37, on right: 26
Arguments (87)
    on left: 38 39, on right: 27
ArgumentsLoop (88)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51, on right: 38
Operand (89)
    on left: 52 53 54, on right: 21
OperandName (90)
    on left: 55, on right: 53
Literal (91)
    on left: 56, on right: 52
BasicLit (92)
    on left: 57 58 59 60 61, on right: 56
unary_op (93)
    on left: 62 63 64 65 66 67, on right: 19
Type (94)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81, on right: 0
    28 37 44 45 46 47 48 49 50 51 84 90 91 92 93 94 95 96 97 102 103
    104 105 106 111 112 113 114
FunctionType (95)
    on left: 82, on right: 74
Signature (96)
    on left: 83 84 85, on right: 82 109
Parameters (97)
    on left: 86 87, on right: 83 84 85
ParameterList (98)
    on left: 88 89, on right: 87
ParameterDecl (99)
    on left: 90 91 92 93, on right: 88 89
MapType (100)
    on left: 94, on right: 75
ChannelType (101)
    on left: 95 96 97, on right: 76
StructType (102)
    on left: 98 99, on right: 77
StructTypeLoop (103)
    on left: 100 101, on right: 98 100
FieldDecl (104)
    on left: 102 103, on right: 100 101
PointerType (105)
    on left: 104, on right: 78
ArrayType (106)
    on left: 105, on right: 79
SliceType (107)
    on left: 106, on right: 80
InterfaceType (108)
    on left: 107 108, on right: 81
InterfaceElem (109)
    on left: 109 110, on right: 108
TypeElem (110)
    on left: 111 112 113 114, on right: 110 111 112


state 0

    0 $accept: . Type $end

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 15
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 1

   82 FunctionType: FUNC . Signature

    '('  shift, and go to state 24

    Signature   go to state 25
    Parameters  go to state 26


state 2

  107 InterfaceType: INTERFACE . '{' '}'
  108              | INTERFACE . '{' InterfaceElem SEMICOLON '}'

    '{'  shift, and go to state 27


state 3

   95 ChannelType: CHAN . Type
   96            | CHAN . CHANNELOP Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    CHANNELOP  shift, and go to state 28
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 29
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 4

   94 MapType: MAP . '[' Type ']' Type

    '['  shift, and go to state 30


state 5

   98 StructType: STRUCT . '{' StructTypeLoop '}'
   99           | STRUCT . '{' '}'

    '{'  shift, and go to state 31


state 6

   70 Type: BOOL .

    $default  reduce using rule 70 (Type)


state 7

   68 Type: INT .

    $default  reduce using rule 68 (Type)


state 8

   71 Type: COMPLEX .

    $default  reduce using rule 71 (Type)


state 9

   69 Type: FLOAT .

    $default  reduce using rule 69 (Type)


state 10

   73 Type: STRING .

    $default  reduce using rule 73 (Type)


state 11

   72 Type: RUNE .

    $default  reduce using rule 72 (Type)


state 12

  104 PointerType: '*' . Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 32
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 13

  105 ArrayType: '[' . Expression ']' Type
  106 SliceType: '[' . ']' Type

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    ']'             shift, and go to state 46
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 48
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 14

   97 ChannelType: '<' . CHANNELOP Type

    CHANNELOP  shift, and go to state 58


state 15

    0 $accept: Type . $end

    $end  shift, and go to state 59


state 16

   74 Type: FunctionType .

    $default  reduce using rule 74 (Type)


state 17

   75 Type: MapType .

    $default  reduce using rule 75 (Type)


state 18

   76 Type: ChannelType .

    $default  reduce using rule 76 (Type)


state 19

   77 Type: StructType .

    $default  reduce using rule 77 (Type)


state 20

   78 Type: PointerType .

    $default  reduce using rule 78 (Type)


state 21

   79 Type: ArrayType .

    $default  reduce using rule 79 (Type)


state 22

   80 Type: SliceType .

    $default  reduce using rule 80 (Type)


state 23

   81 Type: InterfaceType .

    $default  reduce using rule 81 (Type)


state 24

   86 Parameters: '(' . ')'
   87           | '(' . ParameterList ')'

    FUNC        shift, and go to state 1
    INTERFACE   shift, and go to state 2
    ARGS        shift, and go to state 60
    CHAN        shift, and go to state 3
    MAP         shift, and go to state 4
    STRUCT      shift, and go to state 5
    BOOL        shift, and go to state 6
    INT         shift, and go to state 7
    COMPLEX     shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRING      shift, and go to state 10
    RUNE        shift, and go to state 11
    IDENTIFIER  shift, and go to state 61
    '*'         shift, and go to state 12
    ')'         shift, and go to state 62
    '['         shift, and go to state 13
    '<'         shift, and go to state 14

    IdentifierList  go to state 63
    Type            go to state 64
    FunctionType    go to state 16
    ParameterList   go to state 65
    ParameterDecl   go to state 66
    MapType         go to state 17
    ChannelType     go to state 18
    StructType      go to state 19
    PointerType     go to state 20
    ArrayType       go to state 21
    SliceType       go to state 22
    InterfaceType   go to state 23


state 25

   82 FunctionType: FUNC Signature .

    $default  reduce using rule 82 (FunctionType)


state 26

   83 Signature: Parameters .
   84          | Parameters . Type
   85          | Parameters . Parameters

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '('        shift, and go to state 24
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    FUNC       [reduce using rule 83 (Signature)]
    INTERFACE  [reduce using rule 83 (Signature)]
    CHAN       [reduce using rule 83 (Signature)]
    MAP        [reduce using rule 83 (Signature)]
    STRUCT     [reduce using rule 83 (Signature)]
    BOOL       [reduce using rule 83 (Signature)]
    INT        [reduce using rule 83 (Signature)]
    COMPLEX    [reduce using rule 83 (Signature)]
    FLOAT      [reduce using rule 83 (Signature)]
    STRING     [reduce using rule 83 (Signature)]
    RUNE       [reduce using rule 83 (Signature)]
    '*'        [reduce using rule 83 (Signature)]
    '['        [reduce using rule 83 (Signature)]
    '<'        [reduce using rule 83 (Signature)]
    $default   reduce using rule 83 (Signature)

    Type           go to state 67
    FunctionType   go to state 16
    Parameters     go to state 68
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 27

  107 InterfaceType: INTERFACE '{' . '}'
  108              | INTERFACE '{' . InterfaceElem SEMICOLON '}'

    FUNC        shift, and go to state 1
    INTERFACE   shift, and go to state 2
    CHAN        shift, and go to state 3
    MAP         shift, and go to state 4
    STRUCT      shift, and go to state 5
    BOOL        shift, and go to state 6
    INT         shift, and go to state 7
    COMPLEX     shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRING      shift, and go to state 10
    RUNE        shift, and go to state 11
    IDENTIFIER  shift, and go to state 69
    '*'         shift, and go to state 12
    '|'         shift, and go to state 70
    '['         shift, and go to state 13
    '<'         shift, and go to state 14
    '}'         shift, and go to state 71
    '~'         shift, and go to state 72

    Type           go to state 73
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23
    InterfaceElem  go to state 74
    TypeElem       go to state 75


state 28

   96 ChannelType: CHAN CHANNELOP . Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 76
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 29

   95 ChannelType: CHAN Type .

    $default  reduce using rule 95 (ChannelType)


state 30

   94 MapType: MAP '[' . Type ']' Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 77
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 31

   98 StructType: STRUCT '{' . StructTypeLoop '}'
   99           | STRUCT '{' . '}'

    IDENTIFIER  shift, and go to state 61
    '}'         shift, and go to state 78

    IdentifierList  go to state 79
    StructTypeLoop  go to state 80
    FieldDecl       go to state 81


state 32

  104 PointerType: '*' Type .

    $default  reduce using rule 104 (PointerType)


state 33

   55 OperandName: IDENTIFIER .

    $default  reduce using rule 55 (OperandName)


state 34

   57 BasicLit: IntegerValue .

    $default  reduce using rule 57 (BasicLit)


state 35

   59 BasicLit: FloatValue .

    $default  reduce using rule 59 (BasicLit)


state 36

   61 BasicLit: StringValue .

    $default  reduce using rule 61 (BasicLit)


state 37

   60 BasicLit: ImaginaryValue .

    $default  reduce using rule 60 (BasicLit)


state 38

   58 BasicLit: BooleanValue .

    $default  reduce using rule 58 (BasicLit)


state 39

   67 unary_op: CHANNELOP .

    $default  reduce using rule 67 (unary_op)


state 40

   20 UnaryExpr: '*' . UnaryExpr
  104 PointerType: '*' . Type

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    UnaryExpr      go to state 82
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 83
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 41

   66 unary_op: '&' .

    $default  reduce using rule 66 (unary_op)


state 42

   62 unary_op: '+' .

    $default  reduce using rule 62 (unary_op)


state 43

   63 unary_op: '-' .

    $default  reduce using rule 63 (unary_op)


state 44

   65 unary_op: '^' .

    $default  reduce using rule 65 (unary_op)


state 45

   54 Operand: '(' . Expression ')'

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 84
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 46

  106 SliceType: '[' ']' . Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 85
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 47

   64 unary_op: '!' .

    $default  reduce using rule 64 (unary_op)


state 48

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression
  105 ArrayType: '[' Expression . ']' Type

    LRSHIFT  shift, and go to state 86
    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '*'      shift, and go to state 90
    '/'      shift, and go to state 91
    '%'      shift, and go to state 92
    '&'      shift, and go to state 93
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97
    ']'      shift, and go to state 98


state 49

    5 Expression: UnaryExpr .

    $default  reduce using rule 5 (Expression)


state 50

   18 UnaryExpr: PrimaryExpr .
   23 PrimaryExpr: PrimaryExpr . Selector
   24            | PrimaryExpr . Index
   25            | PrimaryExpr . Slice
   26            | PrimaryExpr . TypeAssertion
   27            | PrimaryExpr . Arguments

    '.'  shift, and go to state 99
    '('  shift, and go to state 100
    '['  shift, and go to state 101

    $default  reduce using rule 18 (UnaryExpr)

    Selector       go to state 102
    Index          go to state 103
    Slice          go to state 104
    TypeAssertion  go to state 105
    Arguments      go to state 106


state 51

   22 PrimaryExpr: MethodExpr .

    $default  reduce using rule 22 (PrimaryExpr)


state 52

   21 PrimaryExpr: Operand .

    $default  reduce using rule 21 (PrimaryExpr)


state 53

   53 Operand: OperandName .

    $default  reduce using rule 53 (Operand)


state 54

   52 Operand: Literal .

    $default  reduce using rule 52 (Operand)


state 55

   56 Literal: BasicLit .

    $default  reduce using rule 56 (Literal)


state 56

   19 UnaryExpr: unary_op . UnaryExpr

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    UnaryExpr      go to state 107
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 57

   28 MethodExpr: Type . '.' IDENTIFIER

    '.'  shift, and go to state 108


state 58

   97 ChannelType: '<' CHANNELOP . Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 109
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 59

    0 $accept: Type $end .

    $default  accept


state 60

   92 ParameterDecl: ARGS . Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 110
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 61

    2 IdentifierList: IDENTIFIER .

    $default  reduce using rule 2 (IdentifierList)


state 62

   86 Parameters: '(' ')' .

    $default  reduce using rule 86 (Parameters)


state 63

    1 IdentifierList: IdentifierList . ',' IDENTIFIER
   91 ParameterDecl: IdentifierList . Type
   93              | IdentifierList . ARGS Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    ARGS       shift, and go to state 111
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    ','        shift, and go to state 112
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 113
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 64

   90 ParameterDecl: Type .

    $default  reduce using rule 90 (ParameterDecl)


state 65

   87 Parameters: '(' ParameterList . ')'

    ')'  shift, and go to state 114


state 66

   88 ParameterList: ParameterDecl .
   89              | ParameterDecl . ',' ParameterDecl

    ','  shift, and go to state 115

    $default  reduce using rule 88 (ParameterList)


state 67

   84 Signature: Parameters Type .

    $default  reduce using rule 84 (Signature)


state 68

   85 Signature: Parameters Parameters .

    $default  reduce using rule 85 (Signature)


state 69

  109 InterfaceElem: IDENTIFIER . Signature

    '('  shift, and go to state 24

    Signature   go to state 116
    Parameters  go to state 26


state 70

  113 TypeElem: '|' . Type
  114         | '|' . '~' Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14
    '~'        shift, and go to state 117

    Type           go to state 118
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 71

  107 InterfaceType: INTERFACE '{' '}' .

    $default  reduce using rule 107 (InterfaceType)


state 72

  112 TypeElem: '~' . Type TypeElem

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 119
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 73

  111 TypeElem: Type . TypeElem

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '|'        shift, and go to state 70
    '['        shift, and go to state 13
    '<'        shift, and go to state 14
    '~'        shift, and go to state 72

    Type           go to state 73
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23
    TypeElem       go to state 120


state 74

  108 InterfaceType: INTERFACE '{' InterfaceElem . SEMICOLON '}'

    SEMICOLON  shift, and go to state 121


state 75

  110 InterfaceElem: TypeElem .

    $default  reduce using rule 110 (InterfaceElem)


state 76

   96 ChannelType: CHAN CHANNELOP Type .

    $default  reduce using rule 96 (ChannelType)


state 77

   94 MapType: MAP '[' Type . ']' Type

    ']'  shift, and go to state 122


state 78

   99 StructType: STRUCT '{' '}' .

    $default  reduce using rule 99 (StructType)


state 79

    1 IdentifierList: IdentifierList . ',' IDENTIFIER
  102 FieldDecl: IdentifierList . Type
  103          | IdentifierList . Type StringValue

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    ','        shift, and go to state 112
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 123
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 80

   98 StructType: STRUCT '{' StructTypeLoop . '}'

    '}'  shift, and go to state 124


state 81

  100 StructTypeLoop: FieldDecl . SEMICOLON StructTypeLoop
  101               | FieldDecl . SEMICOLON

    SEMICOLON  shift, and go to state 125


state 82

   20 UnaryExpr: '*' UnaryExpr .

    $default  reduce using rule 20 (UnaryExpr)


state 83

   28 MethodExpr: Type . '.' IDENTIFIER
  104 PointerType: '*' Type .

    '.'  shift, and go to state 108

    $default  reduce using rule 104 (PointerType)


state 84

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression
   54 Operand: '(' Expression . ')'

    LRSHIFT  shift, and go to state 86
    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '*'      shift, and go to state 90
    '/'      shift, and go to state 91
    '%'      shift, and go to state 92
    '&'      shift, and go to state 93
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97
    ')'      shift, and go to state 126


state 85

  106 SliceType: '[' ']' Type .

    $default  reduce using rule 106 (SliceType)


state 86

   16 Expression: Expression LRSHIFT . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 127
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 87

    6 Expression: Expression AND . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 128
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 88

    7 Expression: Expression OR . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 129
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 89

    8 Expression: Expression COMPARE . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 130
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 90

   13 Expression: Expression '*' . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 131
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 91

   14 Expression: Expression '/' . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 132
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 92

   15 Expression: Expression '%' . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 133
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 93

   17 Expression: Expression '&' . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 134
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 94

    9 Expression: Expression '+' . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 135
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 95

   10 Expression: Expression '-' . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 136
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 96

   11 Expression: Expression '|' . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 137
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 97

   12 Expression: Expression '^' . Expression

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 138
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 98

  105 ArrayType: '[' Expression ']' . Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 139
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 99

   29 Selector: '.' . IDENTIFIER
   37 TypeAssertion: '.' . '(' Type ')'

    IDENTIFIER  shift, and go to state 140
    '('         shift, and go to state 141


state 100

   38 Arguments: '(' . ArgumentsLoop ')'
   39          | '(' . ')'

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    ')'             shift, and go to state 142
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    ExpressionList  go to state 143
    Expression      go to state 144
    UnaryExpr       go to state 49
    PrimaryExpr     go to state 50
    MethodExpr      go to state 51
    ArgumentsLoop   go to state 145
    Operand         go to state 52
    OperandName     go to state 53
    Literal         go to state 54
    BasicLit        go to state 55
    unary_op        go to state 56
    Type            go to state 146
    FunctionType    go to state 16
    MapType         go to state 17
    ChannelType     go to state 18
    StructType      go to state 19
    PointerType     go to state 20
    ArrayType       go to state 21
    SliceType       go to state 22
    InterfaceType   go to state 23


state 101

   30 Index: '[' . Expression ']'
   31 Slice: '[' . Expression COLON Expression ']'
   32      | '[' . Expression COLON ']'
   33      | '[' . COLON Expression ']'
   34      | '[' . COLON ']'
   35      | '[' . Expression COLON Expression COLON Expression ']'
   36      | '[' . COLON Expression COLON Expression ']'

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    COLON           shift, and go to state 147
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 148
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 102

   23 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 23 (PrimaryExpr)


state 103

   24 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 24 (PrimaryExpr)


state 104

   25 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 25 (PrimaryExpr)


state 105

   26 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 26 (PrimaryExpr)


state 106

   27 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 27 (PrimaryExpr)


state 107

   19 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 19 (UnaryExpr)


state 108

   28 MethodExpr: Type '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 149


state 109

   97 ChannelType: '<' CHANNELOP Type .

    $default  reduce using rule 97 (ChannelType)


state 110

   92 ParameterDecl: ARGS Type .

    $default  reduce using rule 92 (ParameterDecl)


state 111

   93 ParameterDecl: IdentifierList ARGS . Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 150
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 112

    1 IdentifierList: IdentifierList ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 151


state 113

   91 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 91 (ParameterDecl)


state 114

   87 Parameters: '(' ParameterList ')' .

    $default  reduce using rule 87 (Parameters)


state 115

   89 ParameterList: ParameterDecl ',' . ParameterDecl

    FUNC        shift, and go to state 1
    INTERFACE   shift, and go to state 2
    ARGS        shift, and go to state 60
    CHAN        shift, and go to state 3
    MAP         shift, and go to state 4
    STRUCT      shift, and go to state 5
    BOOL        shift, and go to state 6
    INT         shift, and go to state 7
    COMPLEX     shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRING      shift, and go to state 10
    RUNE        shift, and go to state 11
    IDENTIFIER  shift, and go to state 61
    '*'         shift, and go to state 12
    '['         shift, and go to state 13
    '<'         shift, and go to state 14

    IdentifierList  go to state 63
    Type            go to state 64
    FunctionType    go to state 16
    ParameterDecl   go to state 152
    MapType         go to state 17
    ChannelType     go to state 18
    StructType      go to state 19
    PointerType     go to state 20
    ArrayType       go to state 21
    SliceType       go to state 22
    InterfaceType   go to state 23


state 116

  109 InterfaceElem: IDENTIFIER Signature .

    $default  reduce using rule 109 (InterfaceElem)


state 117

  114 TypeElem: '|' '~' . Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 153
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 118

  113 TypeElem: '|' Type .

    $default  reduce using rule 113 (TypeElem)


state 119

  112 TypeElem: '~' Type . TypeElem

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '|'        shift, and go to state 70
    '['        shift, and go to state 13
    '<'        shift, and go to state 14
    '~'        shift, and go to state 72

    Type           go to state 73
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23
    TypeElem       go to state 154


state 120

  111 TypeElem: Type TypeElem .

    $default  reduce using rule 111 (TypeElem)


state 121

  108 InterfaceType: INTERFACE '{' InterfaceElem SEMICOLON . '}'

    '}'  shift, and go to state 155


state 122

   94 MapType: MAP '[' Type ']' . Type

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 156
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 123

  102 FieldDecl: IdentifierList Type .
  103          | IdentifierList Type . StringValue

    StringValue  shift, and go to state 157

    $default  reduce using rule 102 (FieldDecl)


state 124

   98 StructType: STRUCT '{' StructTypeLoop '}' .

    $default  reduce using rule 98 (StructType)


state 125

  100 StructTypeLoop: FieldDecl SEMICOLON . StructTypeLoop
  101               | FieldDecl SEMICOLON .

    IDENTIFIER  shift, and go to state 61

    $default  reduce using rule 101 (StructTypeLoop)

    IdentifierList  go to state 79
    StructTypeLoop  go to state 158
    FieldDecl       go to state 81


state 126

   54 Operand: '(' Expression ')' .

    $default  reduce using rule 54 (Operand)


state 127

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   16           | Expression LRSHIFT Expression .
   17           | Expression . '&' Expression

    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97

    $default  reduce using rule 16 (Expression)


state 128

    6 Expression: Expression . AND Expression
    6           | Expression AND Expression .
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    OR  shift, and go to state 88

    $default  reduce using rule 6 (Expression)


state 129

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    7           | Expression OR Expression .
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    $default  reduce using rule 7 (Expression)


state 130

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    8           | Expression COMPARE Expression .
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    AND  shift, and go to state 87
    OR   shift, and go to state 88

    $default  reduce using rule 8 (Expression)


state 131

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   13           | Expression '*' Expression .
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97

    $default  reduce using rule 13 (Expression)


state 132

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   14           | Expression '/' Expression .
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97

    $default  reduce using rule 14 (Expression)


state 133

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   15           | Expression '%' Expression .
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97

    $default  reduce using rule 15 (Expression)


state 134

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression
   17           | Expression '&' Expression .

    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97

    $default  reduce using rule 17 (Expression)


state 135

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
    9           | Expression '+' Expression .
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89

    $default  reduce using rule 9 (Expression)


state 136

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   10           | Expression '-' Expression .
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89

    $default  reduce using rule 10 (Expression)


state 137

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   11           | Expression '|' Expression .
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89

    $default  reduce using rule 11 (Expression)


state 138

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   12           | Expression '^' Expression .
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89

    $default  reduce using rule 12 (Expression)


state 139

  105 ArrayType: '[' Expression ']' Type .

    $default  reduce using rule 105 (ArrayType)


state 140

   29 Selector: '.' IDENTIFIER .

    $default  reduce using rule 29 (Selector)


state 141

   37 TypeAssertion: '.' '(' . Type ')'

    FUNC       shift, and go to state 1
    INTERFACE  shift, and go to state 2
    CHAN       shift, and go to state 3
    MAP        shift, and go to state 4
    STRUCT     shift, and go to state 5
    BOOL       shift, and go to state 6
    INT        shift, and go to state 7
    COMPLEX    shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRING     shift, and go to state 10
    RUNE       shift, and go to state 11
    '*'        shift, and go to state 12
    '['        shift, and go to state 13
    '<'        shift, and go to state 14

    Type           go to state 159
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 142

   39 Arguments: '(' ')' .

    $default  reduce using rule 39 (Arguments)


state 143

    3 ExpressionList: ExpressionList . ',' Expression
   40 ArgumentsLoop: ExpressionList . ARGS ','
   41              | ExpressionList . ARGS
   42              | ExpressionList . ','
   43              | ExpressionList .

    ARGS  shift, and go to state 160
    ','   shift, and go to state 161

    $default  reduce using rule 43 (ArgumentsLoop)


state 144

    4 ExpressionList: Expression .
    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 86
    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '*'      shift, and go to state 90
    '/'      shift, and go to state 91
    '%'      shift, and go to state 92
    '&'      shift, and go to state 93
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97

    $default  reduce using rule 4 (ExpressionList)


state 145

   38 Arguments: '(' ArgumentsLoop . ')'

    ')'  shift, and go to state 162


state 146

   28 MethodExpr: Type . '.' IDENTIFIER
   44 ArgumentsLoop: Type . ARGS ','
   45              | Type . ARGS
   46              | Type . ','
   47              | Type .
   48              | Type . ',' ExpressionList ARGS ','
   49              | Type . ',' ExpressionList ARGS
   50              | Type . ',' ExpressionList ','
   51              | Type . ',' ExpressionList

    ARGS  shift, and go to state 163
    '.'   shift, and go to state 108
    ','   shift, and go to state 164

    $default  reduce using rule 47 (ArgumentsLoop)


state 147

   33 Slice: '[' COLON . Expression ']'
   34      | '[' COLON . ']'
   36      | '[' COLON . Expression COLON Expression ']'

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    ']'             shift, and go to state 165
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 166
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 148

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression
   30 Index: '[' Expression . ']'
   31 Slice: '[' Expression . COLON Expression ']'
   32      | '[' Expression . COLON ']'
   35      | '[' Expression . COLON Expression COLON Expression ']'

    COLON    shift, and go to state 167
    LRSHIFT  shift, and go to state 86
    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '*'      shift, and go to state 90
    '/'      shift, and go to state 91
    '%'      shift, and go to state 92
    '&'      shift, and go to state 93
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97
    ']'      shift, and go to state 168


state 149

   28 MethodExpr: Type '.' IDENTIFIER .

    $default  reduce using rule 28 (MethodExpr)


state 150

   93 ParameterDecl: IdentifierList ARGS Type .

    $default  reduce using rule 93 (ParameterDecl)


state 151

    1 IdentifierList: IdentifierList ',' IDENTIFIER .

    $default  reduce using rule 1 (IdentifierList)


state 152

   89 ParameterList: ParameterDecl ',' ParameterDecl .

    $default  reduce using rule 89 (ParameterList)


state 153

  114 TypeElem: '|' '~' Type .

    $default  reduce using rule 114 (TypeElem)


state 154

  112 TypeElem: '~' Type TypeElem .

    $default  reduce using rule 112 (TypeElem)


state 155

  108 InterfaceType: INTERFACE '{' InterfaceElem SEMICOLON '}' .

    $default  reduce using rule 108 (InterfaceType)


state 156

   94 MapType: MAP '[' Type ']' Type .

    $default  reduce using rule 94 (MapType)


state 157

  103 FieldDecl: IdentifierList Type StringValue .

    $default  reduce using rule 103 (FieldDecl)


state 158

  100 StructTypeLoop: FieldDecl SEMICOLON StructTypeLoop .

    $default  reduce using rule 100 (StructTypeLoop)


state 159

   37 TypeAssertion: '.' '(' Type . ')'

    ')'  shift, and go to state 169


state 160

   40 ArgumentsLoop: ExpressionList ARGS . ','
   41              | ExpressionList ARGS .

    ','  shift, and go to state 170

    $default  reduce using rule 41 (ArgumentsLoop)


state 161

    3 ExpressionList: ExpressionList ',' . Expression
   42 ArgumentsLoop: ExpressionList ',' .

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    $default  reduce using rule 42 (ArgumentsLoop)

    Expression     go to state 171
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 162

   38 Arguments: '(' ArgumentsLoop ')' .

    $default  reduce using rule 38 (Arguments)


state 163

   44 ArgumentsLoop: Type ARGS . ','
   45              | Type ARGS .

    ','  shift, and go to state 172

    $default  reduce using rule 45 (ArgumentsLoop)


state 164

   46 ArgumentsLoop: Type ',' .
   48              | Type ',' . ExpressionList ARGS ','
   49              | Type ',' . ExpressionList ARGS
   50              | Type ',' . ExpressionList ','
   51              | Type ',' . ExpressionList

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    $default  reduce using rule 46 (ArgumentsLoop)

    ExpressionList  go to state 173
    Expression      go to state 144
    UnaryExpr       go to state 49
    PrimaryExpr     go to state 50
    MethodExpr      go to state 51
    Operand         go to state 52
    OperandName     go to state 53
    Literal         go to state 54
    BasicLit        go to state 55
    unary_op        go to state 56
    Type            go to state 57
    FunctionType    go to state 16
    MapType         go to state 17
    ChannelType     go to state 18
    StructType      go to state 19
    PointerType     go to state 20
    ArrayType       go to state 21
    SliceType       go to state 22
    InterfaceType   go to state 23


state 165

   34 Slice: '[' COLON ']' .

    $default  reduce using rule 34 (Slice)


state 166

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression
   33 Slice: '[' COLON Expression . ']'
   36      | '[' COLON Expression . COLON Expression ']'

    COLON    shift, and go to state 174
    LRSHIFT  shift, and go to state 86
    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '*'      shift, and go to state 90
    '/'      shift, and go to state 91
    '%'      shift, and go to state 92
    '&'      shift, and go to state 93
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97
    ']'      shift, and go to state 175


state 167

   31 Slice: '[' Expression COLON . Expression ']'
   32      | '[' Expression COLON . ']'
   35      | '[' Expression COLON . Expression COLON Expression ']'

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    ']'             shift, and go to state 176
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 177
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 168

   30 Index: '[' Expression ']' .

    $default  reduce using rule 30 (Index)


state 169

   37 TypeAssertion: '.' '(' Type ')' .

    $default  reduce using rule 37 (TypeAssertion)


state 170

   40 ArgumentsLoop: ExpressionList ARGS ',' .

    $default  reduce using rule 40 (ArgumentsLoop)


state 171

    3 ExpressionList: ExpressionList ',' Expression .
    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression

    LRSHIFT  shift, and go to state 86
    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '*'      shift, and go to state 90
    '/'      shift, and go to state 91
    '%'      shift, and go to state 92
    '&'      shift, and go to state 93
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97

    $default  reduce using rule 3 (ExpressionList)


state 172

   44 ArgumentsLoop: Type ARGS ',' .

    $default  reduce using rule 44 (ArgumentsLoop)


state 173

    3 ExpressionList: ExpressionList . ',' Expression
   48 ArgumentsLoop: Type ',' ExpressionList . ARGS ','
   49              | Type ',' ExpressionList . ARGS
   50              | Type ',' ExpressionList . ','
   51              | Type ',' ExpressionList .

    ARGS  shift, and go to state 178
    ','   shift, and go to state 179

    $default  reduce using rule 51 (ArgumentsLoop)


state 174

   36 Slice: '[' COLON Expression COLON . Expression ']'

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 180
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 175

   33 Slice: '[' COLON Expression ']' .

    $default  reduce using rule 33 (Slice)


state 176

   32 Slice: '[' Expression COLON ']' .

    $default  reduce using rule 32 (Slice)


state 177

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression
   31 Slice: '[' Expression COLON Expression . ']'
   35      | '[' Expression COLON Expression . COLON Expression ']'

    COLON    shift, and go to state 181
    LRSHIFT  shift, and go to state 86
    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '*'      shift, and go to state 90
    '/'      shift, and go to state 91
    '%'      shift, and go to state 92
    '&'      shift, and go to state 93
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97
    ']'      shift, and go to state 182


state 178

   48 ArgumentsLoop: Type ',' ExpressionList ARGS . ','
   49              | Type ',' ExpressionList ARGS .

    ','  shift, and go to state 183

    $default  reduce using rule 49 (ArgumentsLoop)


state 179

    3 ExpressionList: ExpressionList ',' . Expression
   50 ArgumentsLoop: Type ',' ExpressionList ',' .

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    $default  reduce using rule 50 (ArgumentsLoop)

    Expression     go to state 171
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 180

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression
   36 Slice: '[' COLON Expression COLON Expression . ']'

    LRSHIFT  shift, and go to state 86
    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '*'      shift, and go to state 90
    '/'      shift, and go to state 91
    '%'      shift, and go to state 92
    '&'      shift, and go to state 93
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97
    ']'      shift, and go to state 184


state 181

   35 Slice: '[' Expression COLON Expression COLON . Expression ']'

    FUNC            shift, and go to state 1
    INTERFACE       shift, and go to state 2
    CHAN            shift, and go to state 3
    MAP             shift, and go to state 4
    STRUCT          shift, and go to state 5
    BOOL            shift, and go to state 6
    INT             shift, and go to state 7
    COMPLEX         shift, and go to state 8
    FLOAT           shift, and go to state 9
    STRING          shift, and go to state 10
    RUNE            shift, and go to state 11
    IDENTIFIER      shift, and go to state 33
    IntegerValue    shift, and go to state 34
    FloatValue      shift, and go to state 35
    StringValue     shift, and go to state 36
    ImaginaryValue  shift, and go to state 37
    BooleanValue    shift, and go to state 38
    CHANNELOP       shift, and go to state 39
    '*'             shift, and go to state 40
    '&'             shift, and go to state 41
    '+'             shift, and go to state 42
    '-'             shift, and go to state 43
    '^'             shift, and go to state 44
    '('             shift, and go to state 45
    '['             shift, and go to state 13
    '!'             shift, and go to state 47
    '<'             shift, and go to state 14

    Expression     go to state 185
    UnaryExpr      go to state 49
    PrimaryExpr    go to state 50
    MethodExpr     go to state 51
    Operand        go to state 52
    OperandName    go to state 53
    Literal        go to state 54
    BasicLit       go to state 55
    unary_op       go to state 56
    Type           go to state 57
    FunctionType   go to state 16
    MapType        go to state 17
    ChannelType    go to state 18
    StructType     go to state 19
    PointerType    go to state 20
    ArrayType      go to state 21
    SliceType      go to state 22
    InterfaceType  go to state 23


state 182

   31 Slice: '[' Expression COLON Expression ']' .

    $default  reduce using rule 31 (Slice)


state 183

   48 ArgumentsLoop: Type ',' ExpressionList ARGS ',' .

    $default  reduce using rule 48 (ArgumentsLoop)


state 184

   36 Slice: '[' COLON Expression COLON Expression ']' .

    $default  reduce using rule 36 (Slice)


state 185

    6 Expression: Expression . AND Expression
    7           | Expression . OR Expression
    8           | Expression . COMPARE Expression
    9           | Expression . '+' Expression
   10           | Expression . '-' Expression
   11           | Expression . '|' Expression
   12           | Expression . '^' Expression
   13           | Expression . '*' Expression
   14           | Expression . '/' Expression
   15           | Expression . '%' Expression
   16           | Expression . LRSHIFT Expression
   17           | Expression . '&' Expression
   35 Slice: '[' Expression COLON Expression COLON Expression . ']'

    LRSHIFT  shift, and go to state 86
    AND      shift, and go to state 87
    OR       shift, and go to state 88
    COMPARE  shift, and go to state 89
    '*'      shift, and go to state 90
    '/'      shift, and go to state 91
    '%'      shift, and go to state 92
    '&'      shift, and go to state 93
    '+'      shift, and go to state 94
    '-'      shift, and go to state 95
    '|'      shift, and go to state 96
    '^'      shift, and go to state 97
    ']'      shift, and go to state 186


state 186

   35 Slice: '[' Expression COLON Expression COLON Expression ']' .

    $default  reduce using rule 35 (Slice)
